{"ast":null,"code":"import { ref, computed, onMounted } from 'vue';\nimport { message } from 'ant-design-vue';\nimport dayjs from 'dayjs';\nimport { dictionaryAPI } from '@/api';\nimport { PlusOutlined, UploadOutlined, DownloadOutlined, ApiOutlined, UnorderedListOutlined, SearchOutlined, ReloadOutlined, DownOutlined, EyeOutlined, EditOutlined, DeleteOutlined, HistoryOutlined } from '@ant-design/icons-vue';\n\n// Props\n\nexport default {\n  __name: 'HardwareAssetTable',\n  props: {\n    dataSource: {\n      type: Array,\n      default: () => []\n    },\n    loading: {\n      type: Boolean,\n      default: false\n    },\n    pagination: {\n      type: Object,\n      default: () => ({\n        current: 1,\n        pageSize: 20,\n        total: 0,\n        showSizeChanger: true,\n        showQuickJumper: true,\n        showTotal: (total, range) => `第 ${range[0]}-${range[1]} 条/共 ${total} 条`\n      })\n    },\n    searchKeyword: {\n      type: String,\n      default: ''\n    },\n    assetStatus: {\n      type: [String, Array],\n      default: () => []\n    },\n    assetType: {\n      type: String,\n      default: ''\n    },\n    totalCount: {\n      type: Number,\n      default: 0\n    },\n    activeCount: {\n      type: Number,\n      default: 0\n    },\n    availableCount: {\n      type: Number,\n      default: 0\n    },\n    warrantyCount: {\n      type: Number,\n      default: 0\n    },\n    scrappedCount: {\n      type: Number,\n      default: 0\n    },\n    tableMode: {\n      type: String,\n      default: 'all',\n      // 'all', 'in_use', 'scrapped'\n      validator: value => ['all', 'in_use', 'scrapped'].includes(value)\n    },\n    currentFilter: {\n      type: String,\n      default: 'active'\n    }\n  },\n  emits: ['tableChange', 'viewDetails', 'editAsset', 'deleteAsset', 'toggleMonitoring', 'batchUpdateMonitoring', 'batchDelete', 'batchToggleStatus', 'openDrawer', 'add', 'import', 'export', 'headerBatchMonitoring', 'listManagement', 'search', 'reset', 'searchInput', 'statusChange', 'typeChange', 'viewHistory', 'statsFilter'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    const props = __props;\n\n    // Emits\n    const emit = __emit;\n\n    // 响应式数据\n    const selectedRowKeys = ref([]);\n    const batchMonitoringLoading = ref(false);\n    const batchDeleteLoading = ref(false);\n    const batchToggleLoading = ref(false);\n    const showAdvancedFilter = ref(false);\n\n    // 统计按钮点击处理\n    const handleStatsClick = filterType => {\n      emit('statsFilter', filterType);\n    };\n\n    // 字典数据\n    const assetStatusOptions = ref([]);\n    const assetTypeOptions = ref([]);\n    const dictionaryLoading = ref(false);\n\n    // 表格列配置\n    const columns = computed(() => {\n      // 在用设备表格列配置\n      const inUseColumns = [{\n        title: '资产标签',\n        dataIndex: 'asset_tag',\n        key: 'asset_tag',\n        width: 120,\n        sorter: true\n      }, {\n        title: '型号',\n        dataIndex: 'model',\n        key: 'model',\n        width: 150,\n        ellipsis: true\n      }, {\n        title: '制造商',\n        dataIndex: 'manufacturer',\n        key: 'manufacturer',\n        width: 120\n      }, {\n        title: '保修状态',\n        dataIndex: 'warranty_status_display',\n        key: 'warranty_status_display',\n        width: 180\n      }, {\n        title: '监控状态',\n        dataIndex: 'monitoring_status',\n        key: 'monitoring_status',\n        width: 90\n      }, {\n        title: '位置',\n        dataIndex: 'location',\n        key: 'location',\n        width: 150,\n        ellipsis: true\n      }, {\n        title: '资产责任人',\n        dataIndex: 'asset_owner',\n        key: 'asset_owner',\n        width: 100\n      }, {\n        title: '供应商机构名--责任人',\n        key: 'supplier_info',\n        width: 220,\n        ellipsis: true\n      }, {\n        title: '操作',\n        key: 'action',\n        align: 'center',\n        width: 120\n      }];\n\n      // 报废设备表格列配置\n      const scrappedColumns = [{\n        title: '资产标签',\n        dataIndex: 'asset_tag',\n        key: 'asset_tag',\n        width: 120,\n        sorter: true\n      }, {\n        title: '型号',\n        dataIndex: 'model',\n        key: 'model',\n        width: 150,\n        ellipsis: true\n      }, {\n        title: '制造商',\n        dataIndex: 'manufacturer',\n        key: 'manufacturer',\n        width: 120\n      }, {\n        title: '位置',\n        dataIndex: 'location',\n        key: 'location',\n        width: 150,\n        ellipsis: true\n      }, {\n        title: '操作',\n        key: 'action',\n        align: 'center',\n        width: 120\n      }];\n\n      // 默认全部列配置（保持原有功能）\n      const allColumns = [{\n        title: '资产标签',\n        dataIndex: 'asset_tag',\n        key: 'asset_tag',\n        width: 120,\n        sorter: true\n      }, {\n        title: '序列号',\n        dataIndex: 'serial_number',\n        key: 'serial_number',\n        width: 120,\n        ellipsis: true\n      }, {\n        title: '设备状态',\n        dataIndex: 'asset_status',\n        key: 'asset_status',\n        width: 80\n      }, {\n        title: '型号',\n        dataIndex: 'model',\n        key: 'model',\n        width: 150,\n        ellipsis: true\n      }, {\n        title: '监控状态',\n        dataIndex: 'monitoring_status',\n        key: 'monitoring_status',\n        width: 90\n      }, {\n        title: '创建时间',\n        dataIndex: 'created_at',\n        key: 'created_at',\n        width: 120,\n        sorter: true\n      }, {\n        title: '操作',\n        key: 'action',\n        align: 'center',\n        width: 120\n      }];\n      switch (props.currentFilter) {\n        case 'active':\n          return inUseColumns;\n        case 'scrapped':\n          return scrappedColumns;\n        default:\n          return allColumns;\n      }\n    });\n\n    // 行选择配置\n    const rowSelection = {\n      selectedRowKeys: selectedRowKeys,\n      onChange: keys => {\n        selectedRowKeys.value = keys;\n      },\n      onSelectAll: (selected, selectedRows, changeRows) => {\n        console.log('onSelectAll:', selected, selectedRows, changeRows);\n      }\n    };\n\n    // 计算属性\n    const allSelectedActive = computed(() => {\n      if (selectedRowKeys.value.length === 0) return false;\n      const selectedRecords = props.dataSource.filter(item => selectedRowKeys.value.includes(item.id));\n      return selectedRecords.every(record => record.status === 'active');\n    });\n\n    // 方法\n    // 设备状态相关\n    const getAssetStatusColor = status => {\n      const statusMap = {\n        'active': 'success',\n        'available': 'processing',\n        'maintenance': 'warning',\n        'retired': 'error'\n      };\n      return statusMap[status] || 'default';\n    };\n    const getAssetStatusText = status => {\n      const statusMap = {\n        'active': '在用',\n        'in_use': '在用',\n        'available': '可用',\n        'maintenance': '维护',\n        'retired': '退役',\n        'scrapped': '报废'\n      };\n      return statusMap[status] || status;\n    };\n\n    // 保修状态相关\n    const getWarrantyStatusColor = status => {\n      const statusMap = {\n        '在保': 'success',\n        '过保': 'error',\n        '即将过保': 'warning',\n        '未知': 'default'\n      };\n      return statusMap[status] || 'default';\n    };\n\n    // 设备类型相关\n    const getTypeColor = type => {\n      const typeMap = {\n        'server': 'blue',\n        'network': 'green',\n        'storage': 'orange',\n        'security': 'purple'\n      };\n      return typeMap[type] || 'default';\n    };\n    const getTypeText = type => {\n      const typeMap = {\n        'server': '服务器',\n        'network': '网络设备',\n        'storage': '存储设备',\n        'security': '安全设备'\n      };\n      return typeMap[type] || type;\n    };\n\n    // 时间格式化\n    const formatTime = time => {\n      if (!time) return '-';\n      return dayjs(time).format('YYYY-MM-DD HH:mm:ss');\n    };\n\n    // 相对时间显示\n    const getRelativeTime = time => {\n      if (!time) return '';\n      const now = dayjs();\n      const target = dayjs(time);\n      const diffInMinutes = now.diff(target, 'minute');\n      const diffInHours = now.diff(target, 'hour');\n      const diffInDays = now.diff(target, 'day');\n      if (diffInMinutes < 1) {\n        return '刚刚';\n      } else if (diffInMinutes < 60) {\n        return `${diffInMinutes}分钟前`;\n      } else if (diffInHours < 24) {\n        return `${diffInHours}小时前`;\n      } else if (diffInDays < 30) {\n        return `${diffInDays}天前`;\n      } else {\n        return target.format('YYYY-MM-DD');\n      }\n    };\n    const clearSelection = () => {\n      selectedRowKeys.value = [];\n    };\n    const handleTableChange = (pagination, filters, sorter) => {\n      emit('tableChange', pagination, filters, sorter);\n    };\n    const viewDetails = record => {\n      emit('viewDetails', record);\n    };\n    const editAsset = record => {\n      emit('editAsset', record);\n    };\n    const viewHistory = record => {\n      emit('viewHistory', record);\n    };\n    const deleteAsset = async record => {\n      record.deleteLoading = true;\n      try {\n        await emit('deleteAsset', record);\n        // 如果删除成功，从选中列表中移除\n        const index = selectedRowKeys.value.indexOf(record.id);\n        if (index > -1) {\n          selectedRowKeys.value.splice(index, 1);\n        }\n      } finally {\n        record.deleteLoading = false;\n      }\n    };\n    const toggleMonitoring = async (record, checked) => {\n      record.toggleLoading = true;\n      try {\n        await emit('toggleMonitoring', record, checked);\n      } finally {\n        record.toggleLoading = false;\n      }\n    };\n    const batchUpdateMonitoring = async () => {\n      if (selectedRowKeys.value.length === 0) {\n        message.warning('请先选择要操作的设备');\n        return;\n      }\n      batchMonitoringLoading.value = true;\n      try {\n        const selectedRecords = props.dataSource.filter(item => selectedRowKeys.value.includes(item.id));\n        await emit('batchUpdateMonitoring', selectedRecords);\n      } finally {\n        batchMonitoringLoading.value = false;\n      }\n    };\n    const batchDelete = async () => {\n      if (selectedRowKeys.value.length === 0) {\n        message.warning('请先选择要删除的设备');\n        return;\n      }\n      batchDeleteLoading.value = true;\n      try {\n        const selectedRecords = props.dataSource.filter(item => selectedRowKeys.value.includes(item.id));\n        await emit('batchDelete', selectedRecords);\n        // 清空选择\n        selectedRowKeys.value = [];\n      } finally {\n        batchDeleteLoading.value = false;\n      }\n    };\n    const batchToggleStatus = async () => {\n      if (selectedRowKeys.value.length === 0) {\n        message.warning('请先选择要操作的设备');\n        return;\n      }\n      batchToggleLoading.value = true;\n      try {\n        const selectedRecords = props.dataSource.filter(item => selectedRowKeys.value.includes(item.id));\n        await emit('batchToggleStatus', selectedRecords, !allSelectedActive.value);\n      } finally {\n        batchToggleLoading.value = false;\n      }\n    };\n\n    // 表格头部按钮事件处理\n    const handleAdd = () => {\n      //打开弹窗\n      emit('add');\n    };\n    const handleImport = () => {\n      emit('import');\n    };\n    const handleExport = () => {\n      emit('export');\n    };\n    const handleHeaderBatchMonitoring = () => {\n      emit('headerBatchMonitoring');\n    };\n    const handleListManagement = () => {\n      emit('listManagement');\n    };\n\n    // 筛选相关事件处理\n    const handleSearch = () => {\n      emit('search');\n    };\n    const handleReset = () => {\n      emit('reset');\n    };\n    const handleSearchInput = e => {\n      emit('searchInput', e.target.value);\n    };\n    const handleStatusChange = value => {\n      emit('statusChange', value);\n    };\n    const handleTypeChange = value => {\n      emit('typeChange', value);\n    };\n    const toggleAdvancedFilter = () => {\n      showAdvancedFilter.value = !showAdvancedFilter.value;\n    };\n\n    // 字典数据加载方法\n    const loadDictionaryData = async () => {\n      try {\n        dictionaryLoading.value = true;\n\n        // 加载设备状态字典\n        const statusResponse = await dictionaryAPI.getDictionaryByCategory('status');\n        if (statusResponse.data && statusResponse.data.results) {\n          assetStatusOptions.value = statusResponse.data.results.map(item => ({\n            value: item.value,\n            label: item.label,\n            color: getAssetStatusColor(item.value)\n          }));\n        }\n\n        // 加载设备类型字典\n        const typeResponse = await dictionaryAPI.getDictionaryByCategory('asset_type');\n        if (typeResponse.data && typeResponse.data.results) {\n          assetTypeOptions.value = typeResponse.data.results.map(item => ({\n            value: item.value,\n            label: item.label,\n            color: getTypeColor(item.value)\n          }));\n        }\n      } catch (error) {\n        console.error('加载字典数据失败:', error);\n        message.error('加载字典数据失败');\n      } finally {\n        dictionaryLoading.value = false;\n      }\n    };\n\n    // 组件挂载时加载字典数据\n    onMounted(() => {\n      loadDictionaryData();\n    });\n\n    // 暴露方法给父组件\n    __expose({\n      clearSelection,\n      getSelectedRowKeys: () => selectedRowKeys.value,\n      getSelectedRecords: () => props.dataSource.filter(item => selectedRowKeys.value.includes(item.id)),\n      loadDictionaryData\n    });\n    const __returned__ = {\n      props,\n      emit,\n      selectedRowKeys,\n      batchMonitoringLoading,\n      batchDeleteLoading,\n      batchToggleLoading,\n      showAdvancedFilter,\n      handleStatsClick,\n      assetStatusOptions,\n      assetTypeOptions,\n      dictionaryLoading,\n      columns,\n      rowSelection,\n      allSelectedActive,\n      getAssetStatusColor,\n      getAssetStatusText,\n      getWarrantyStatusColor,\n      getTypeColor,\n      getTypeText,\n      formatTime,\n      getRelativeTime,\n      clearSelection,\n      handleTableChange,\n      viewDetails,\n      editAsset,\n      viewHistory,\n      deleteAsset,\n      toggleMonitoring,\n      batchUpdateMonitoring,\n      batchDelete,\n      batchToggleStatus,\n      handleAdd,\n      handleImport,\n      handleExport,\n      handleHeaderBatchMonitoring,\n      handleListManagement,\n      handleSearch,\n      handleReset,\n      handleSearchInput,\n      handleStatusChange,\n      handleTypeChange,\n      toggleAdvancedFilter,\n      loadDictionaryData,\n      ref,\n      computed,\n      onMounted,\n      get message() {\n        return message;\n      },\n      get dayjs() {\n        return dayjs;\n      },\n      get dictionaryAPI() {\n        return dictionaryAPI;\n      },\n      get PlusOutlined() {\n        return PlusOutlined;\n      },\n      get UploadOutlined() {\n        return UploadOutlined;\n      },\n      get DownloadOutlined() {\n        return DownloadOutlined;\n      },\n      get ApiOutlined() {\n        return ApiOutlined;\n      },\n      get UnorderedListOutlined() {\n        return UnorderedListOutlined;\n      },\n      get SearchOutlined() {\n        return SearchOutlined;\n      },\n      get ReloadOutlined() {\n        return ReloadOutlined;\n      },\n      get DownOutlined() {\n        return DownOutlined;\n      },\n      get EyeOutlined() {\n        return EyeOutlined;\n      },\n      get EditOutlined() {\n        return EditOutlined;\n      },\n      get DeleteOutlined() {\n        return DeleteOutlined;\n      },\n      get HistoryOutlined() {\n        return HistoryOutlined;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","message","dayjs","dictionaryAPI","PlusOutlined","UploadOutlined","DownloadOutlined","ApiOutlined","UnorderedListOutlined","SearchOutlined","ReloadOutlined","DownOutlined","EyeOutlined","EditOutlined","DeleteOutlined","HistoryOutlined","props","__props","emit","__emit","selectedRowKeys","batchMonitoringLoading","batchDeleteLoading","batchToggleLoading","showAdvancedFilter","handleStatsClick","filterType","assetStatusOptions","assetTypeOptions","dictionaryLoading","columns","inUseColumns","title","dataIndex","key","width","sorter","ellipsis","align","scrappedColumns","allColumns","currentFilter","rowSelection","onChange","keys","value","onSelectAll","selected","selectedRows","changeRows","console","log","allSelectedActive","length","selectedRecords","dataSource","filter","item","includes","id","every","record","status","getAssetStatusColor","statusMap","getAssetStatusText","getWarrantyStatusColor","getTypeColor","type","typeMap","getTypeText","formatTime","time","format","getRelativeTime","now","target","diffInMinutes","diff","diffInHours","diffInDays","clearSelection","handleTableChange","pagination","filters","viewDetails","editAsset","viewHistory","deleteAsset","deleteLoading","index","indexOf","splice","toggleMonitoring","checked","toggleLoading","batchUpdateMonitoring","warning","batchDelete","batchToggleStatus","handleAdd","handleImport","handleExport","handleHeaderBatchMonitoring","handleListManagement","handleSearch","handleReset","handleSearchInput","e","handleStatusChange","handleTypeChange","toggleAdvancedFilter","loadDictionaryData","statusResponse","getDictionaryByCategory","data","results","map","label","color","typeResponse","error","__expose","getSelectedRowKeys","getSelectedRecords"],"sources":["E:/A_project/yuanchi/AIops/frontend/src/components/business/HardwareAssetTable.vue"],"sourcesContent":["<template>\r\n  <div class=\"hardware-asset-table-container\">\r\n    <!-- 硬件设备统计按钮组 -->\r\n    <div class=\"hardware-stats-container\">\r\n      <div class=\"stats-header\">\r\n        <div class=\"page-title\">\r\n          <h3 >\r\n            <UnorderedListOutlined class=\"title-icon\" />\r\n            硬件设备管理\r\n          </h3>\r\n        </div>\r\n        \r\n        <!-- 硬件设备统计按钮组 -->\r\n        <div class=\"hardware-stats-buttons\">\r\n        <div \r\n          class=\"stats-button active\"\r\n          :class=\"{ 'stats-active': currentFilter === 'active' }\"\r\n          @click=\"handleStatsClick('active')\"\r\n        >\r\n          <div class=\"button-icon\">\r\n            <i class=\"anticon anticon-check-circle\"></i>\r\n          </div>\r\n          <div class=\"button-content\">\r\n            <div class=\"button-title\">在用</div>\r\n            <div class=\"button-count\">{{ activeCount || 0 }}</div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div \r\n          class=\"stats-button scrapped\"\r\n          :class=\"{ 'stats-active': currentFilter === 'scrapped' }\"\r\n          @click=\"handleStatsClick('scrapped')\"\r\n        >\r\n          <div class=\"button-icon\">\r\n            <i class=\"anticon anticon-delete\"></i>\r\n          </div>\r\n          <div class=\"button-content\">\r\n            <div class=\"button-title\">报废</div>\r\n            <div class=\"button-count\">{{ scrappedCount || 0 }}</div>\r\n          </div>\r\n        </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 查询筛选区域 -->\r\n    <div class=\"filter-section\">\r\n      <div class=\"filter-header\">\r\n        <h3 class=\"filter-title\">\r\n          <SearchOutlined class=\"title-icon\" />\r\n          查询筛选\r\n        </h3>\r\n        <div class=\"filter-actions\">\r\n          <a-space size=\"middle\">\r\n            <a-button type=\"link\" @click=\"toggleAdvancedFilter\" class=\"expand-btn\">\r\n              {{ showAdvancedFilter ? '收起' : '展开' }}\r\n              <DownOutlined :class=\"{ 'rotate-180': showAdvancedFilter }\" />\r\n            </a-button>\r\n            <a-button type=\"primary\" @click=\"handleSearch\">\r\n              <template #icon><SearchOutlined /></template>\r\n              搜索\r\n            </a-button>\r\n            <a-button @click=\"handleReset\">\r\n              <template #icon><ReloadOutlined /></template>\r\n              重置\r\n            </a-button>\r\n          </a-space>\r\n        </div>\r\n      </div>\r\n      <div class=\"filter-content\">\r\n        <!-- 基础搜索 - 始终显示 -->\r\n        <a-row :gutter=\"[12, 8]\">\r\n          <a-col :span=\"24\">\r\n            <div class=\"filter-item\">\r\n              <label class=\"filter-label\">设备名称/序列号</label>\r\n              <a-input\r\n                :value=\"searchKeyword\"\r\n                @input=\"handleSearchInput\"\r\n                placeholder=\"输入设备名称或序列号\" \r\n                allow-clear\r\n              >\r\n                <template #prefix><SearchOutlined /></template>\r\n              </a-input>\r\n            </div>\r\n          </a-col>\r\n        </a-row>\r\n        \r\n        <!-- 高级筛选 - 可折叠 -->\r\n        <div v-show=\"showAdvancedFilter\" class=\"advanced-filter\">\r\n          <a-divider>高级筛选</a-divider>\r\n          <a-row :gutter=\"[12, 8]\">\r\n            <a-col :xl=\"12\" :lg=\"12\" :md=\"24\" :sm=\"24\">\r\n              <div class=\"filter-item\">\r\n                <label class=\"filter-label\">设备状态</label>\r\n                <a-select \r\n                  :value=\"assetStatus\" \r\n                  @change=\"handleStatusChange\"\r\n                  placeholder=\"选择设备状态（可多选）\" \r\n                  allow-clear\r\n                  mode=\"multiple\"\r\n                  :max-tag-count=\"2\"\r\n                  :loading=\"dictionaryLoading\"\r\n                  style=\"width: 100%\"\r\n                >\r\n                  <a-select-option \r\n                    v-for=\"option in assetStatusOptions\" \r\n                    :key=\"option.value\" \r\n                    :value=\"option.value\"\r\n                  >\r\n                    <a-tag :color=\"option.color\" size=\"small\">{{ option.label }}</a-tag>\r\n                  </a-select-option>\r\n                </a-select>\r\n              </div>\r\n            </a-col>\r\n            <a-col :xl=\"12\" :lg=\"12\" :md=\"24\" :sm=\"24\">\r\n              <div class=\"filter-item\">\r\n                <label class=\"filter-label\">设备类型</label>\r\n                <a-select \r\n                  :value=\"assetType\" \r\n                  @change=\"handleTypeChange\"\r\n                  placeholder=\"选择设备类型\" \r\n                  allow-clear\r\n                  :loading=\"dictionaryLoading\"\r\n                  style=\"width: 100%\"\r\n                >\r\n                  <a-select-option \r\n                    v-for=\"option in assetTypeOptions\" \r\n                    :key=\"option.value\" \r\n                    :value=\"option.value\"\r\n                  >\r\n                    <a-tag :color=\"option.color\" size=\"small\">{{ option.label }}</a-tag>\r\n                  </a-select-option>\r\n                </a-select>\r\n              </div>\r\n            </a-col>\r\n          </a-row>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 批量操作工具栏 -->\r\n    <div class=\"batch-toolbar\" v-if=\"selectedRowKeys.length > 0\">\r\n      <div class=\"selected-info\">\r\n        <span>已选择 {{ selectedRowKeys.length }} 项</span>\r\n        <a-button type=\"link\" size=\"small\" @click=\"clearSelection\">清空</a-button>\r\n      </div>\r\n      <div class=\"batch-actions\">\r\n        <a-button \r\n          type=\"primary\" \r\n          size=\"small\" \r\n          @click=\"batchUpdateMonitoring\"\r\n          :loading=\"batchMonitoringLoading\"\r\n        >\r\n          批量监控\r\n        </a-button>\r\n        <a-button \r\n          size=\"small\" \r\n          @click=\"batchToggleStatus\"\r\n          :loading=\"batchToggleLoading\"\r\n        >\r\n          批量{{ allSelectedActive ? '停用' : '启用' }}\r\n        </a-button>\r\n        <a-button \r\n          type=\"danger\" \r\n          size=\"small\" \r\n          @click=\"batchDelete\"\r\n          :loading=\"batchDeleteLoading\"\r\n        >\r\n          批量删除\r\n        </a-button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 硬件设施列表表格 -->\r\n    <div class=\"table-wrapper\">\r\n      <!-- 表格头部 -->\r\n      <div class=\"table-header\">\r\n        <div class=\"table-title\">\r\n          <h4>设备列表</h4>\r\n        </div>\r\n        <div class=\"table-actions\">\r\n          <a-space size=\"middle\">\r\n            <a-button v-if=\"currentFilter !== 'scrapped'\" type=\"primary\" @click=\"handleAdd\">\r\n              <template #icon><PlusOutlined /></template>\r\n              新增设备\r\n            </a-button>\r\n            <a-button v-if=\"currentFilter !== 'scrapped'\" @click=\"handleImport\">\r\n              <template #icon><UploadOutlined /></template>\r\n              导入数据\r\n            </a-button>\r\n            <a-button v-if=\"currentFilter !== 'scrapped'\" @click=\"handleExport\">\r\n              <template #icon><DownloadOutlined /></template>\r\n              导出数据\r\n            </a-button>\r\n            <a-tooltip v-if=\"currentFilter !== 'scrapped'\" title=\"批量监控\">\r\n              <a-button @click=\"handleHeaderBatchMonitoring\">\r\n                <template #icon><ApiOutlined /></template>\r\n              </a-button>\r\n            </a-tooltip>\r\n            <a-tooltip title=\"列表管理\">\r\n              <a-button @click=\"handleListManagement\">\r\n                <template #icon><UnorderedListOutlined /></template>\r\n              </a-button>\r\n            </a-tooltip>\r\n          </a-space>\r\n        </div>\r\n      </div>\r\n      <a-table\r\n        :columns=\"columns\"\r\n        :data-source=\"dataSource\"\r\n        :row-key=\"record => record.id\"\r\n        :pagination=\"pagination\"\r\n        :loading=\"loading\"\r\n        :row-selection=\"rowSelection\"\r\n        size=\"middle\"\r\n        @change=\"handleTableChange\"\r\n      >\r\n        <!-- 使用新的v-slot语法 -->\r\n        <template #bodyCell=\"{ column, record }\">\r\n          <!-- 设备名称列 -->\r\n          <template v-if=\"column.key === 'name'\">\r\n            <div>\r\n              <span class=\"asset-name\">{{ record.name }}</span>\r\n            </div>\r\n          </template>\r\n\r\n          <!-- 序列号列 -->\r\n          <template v-else-if=\"column.key === 'serial_number'\">\r\n            <span :title=\"record.serial_number\">{{ record.serial_number || '-' }}</span>\r\n          </template>\r\n\r\n          <!-- 设备状态列 -->\r\n          <template v-else-if=\"column.key === 'asset_status'\">\r\n            <a-tag :color=\"getAssetStatusColor(record.asset_status)\" size=\"small\">\r\n              {{ getAssetStatusText(record.asset_status) }}\r\n            </a-tag>\r\n          </template>\r\n\r\n          <!-- 设备类型列 -->\r\n          <template v-else-if=\"column.key === 'type'\">\r\n            <a-tag :color=\"getTypeColor(record.type)\" size=\"small\">\r\n              {{ getTypeText(record.type) }}\r\n            </a-tag>\r\n          </template>\r\n\r\n          <!-- 供应商信息列 -->\r\n          <template v-else-if=\"column.key === 'supplier_info'\">\r\n            <span v-if=\"record.supplier_name\">\r\n              {{ record.supplier_name }}\r\n              <span v-if=\"record.supplier_contact_person\">--{{ record.supplier_contact_person }}</span>\r\n            </span>\r\n            <span v-else>-</span>\r\n          </template>\r\n\r\n          <!-- 保修状态列 -->\r\n          <template v-else-if=\"column.key === 'warranty_status_display'\">\r\n            <a-tag :color=\"getWarrantyStatusColor(record.warranty_status_display)\" size=\"small\">\r\n              {{ record.warranty_status_display || '-' }}\r\n            </a-tag>\r\n          </template>\r\n\r\n          <!-- 监控状态列 -->\r\n          <template v-else-if=\"column.key === 'monitoring_status'\">\r\n            <a-switch\r\n              :checked=\"record.monitoring_status\"\r\n              :loading=\"record.toggleLoading\"\r\n              @change=\"(checked) => toggleMonitoring(record, checked)\"\r\n              size=\"small\"\r\n            />\r\n            <span class=\"monitoring-text\">\r\n              {{ record.monitoring_status ? '已监控' : '未监控' }}\r\n            </span>\r\n          </template>\r\n\r\n          <!-- 监控状态列（兼容旧字段） -->\r\n          <template v-else-if=\"column.key === 'monitoring_enabled'\">\r\n            <a-switch\r\n              :checked=\"record.monitoring_enabled\"\r\n              :loading=\"record.toggleLoading\"\r\n              @change=\"(checked) => toggleMonitoring(record, checked)\"\r\n              size=\"small\"\r\n            />\r\n            <span class=\"monitoring-text\">\r\n              {{ record.monitoring_enabled ? '已监控' : '未监控' }}\r\n            </span>\r\n          </template>\r\n\r\n          <!-- 创建时间列 -->\r\n          <template v-else-if=\"column.key === 'created_at'\">\r\n            <div class=\"time-cell\">\r\n              <span v-if=\"record.created_at\" class=\"time-text\">\r\n                {{ formatTime(record.created_at) }}\r\n              </span>\r\n              <span v-else class=\"no-data\">-</span>\r\n              <div v-if=\"record.created_at\" class=\"time-relative\">\r\n                {{ getRelativeTime(record.created_at) }}\r\n              </div>\r\n            </div>\r\n          </template>\r\n\r\n          <!-- 操作列 -->\r\n          <template v-else-if=\"column.key === 'action'\">\r\n            <div class=\"action-buttons\">\r\n              <a-tooltip title=\"查看详情\">\r\n                <a-button \r\n                  type=\"text\" \r\n                  size=\"small\" \r\n                  @click=\"viewDetails(record)\"\r\n                  class=\"action-btn\"\r\n                >\r\n                  <template #icon><EyeOutlined /></template>\r\n                </a-button>\r\n              </a-tooltip>\r\n              <a-tooltip title=\"编辑\">\r\n                <a-button \r\n                  type=\"text\" \r\n                  size=\"small\" \r\n                  @click=\"editAsset(record)\"\r\n                  class=\"action-btn\"\r\n                >\r\n                  <template #icon><EditOutlined /></template>\r\n                </a-button>\r\n              </a-tooltip>\r\n              <a-tooltip title=\"历史记录\">\r\n                <a-button \r\n                  type=\"text\" \r\n                  size=\"small\" \r\n                  @click=\"viewHistory(record)\"\r\n                  class=\"action-btn\"\r\n                >\r\n                  <template #icon><HistoryOutlined /></template>\r\n                </a-button>\r\n              </a-tooltip>\r\n              <a-popconfirm\r\n                title=\"确定要删除这个设备吗？\"\r\n                @confirm=\"deleteAsset(record)\"\r\n                ok-text=\"确定\"\r\n                cancel-text=\"取消\"\r\n              >\r\n                <a-tooltip title=\"删除\">\r\n                  <a-button \r\n                    type=\"text\" \r\n                    size=\"small\" \r\n                    danger\r\n                    :loading=\"record.deleteLoading\"\r\n                    class=\"action-btn danger\"\r\n                  >\r\n                    <template #icon><DeleteOutlined /></template>\r\n                  </a-button>\r\n                </a-tooltip>\r\n              </a-popconfirm>\r\n            </div>\r\n          </template>\r\n        </template>\r\n      </a-table>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted } from 'vue';\r\nimport { message } from 'ant-design-vue';\r\nimport dayjs from 'dayjs';\r\nimport { dictionaryAPI } from '@/api';\r\nimport {\r\n  PlusOutlined,\r\n  UploadOutlined,\r\n  DownloadOutlined,\r\n  ApiOutlined,\r\n  UnorderedListOutlined,\r\n  SearchOutlined,\r\n  ReloadOutlined,\r\n  DownOutlined,\r\n  EyeOutlined,\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  HistoryOutlined\r\n} from '@ant-design/icons-vue';\r\n\r\n// Props\r\nconst props = defineProps({\r\n  dataSource: {\r\n    type: Array,\r\n    default: () => []\r\n  },\r\n  loading: {\r\n    type: Boolean,\r\n    default: false\r\n  },\r\n  pagination: {\r\n    type: Object,\r\n    default: () => ({\r\n      current: 1,\r\n      pageSize: 20,\r\n      total: 0,\r\n      showSizeChanger: true,\r\n      showQuickJumper: true,\r\n      showTotal: (total, range) => `第 ${range[0]}-${range[1]} 条/共 ${total} 条`\r\n    })\r\n  },\r\n  searchKeyword: {\r\n    type: String,\r\n    default: ''\r\n  },\r\n  assetStatus: {\r\n    type: [String, Array],\r\n    default: () => []\r\n  },\r\n  assetType: {\r\n    type: String,\r\n    default: ''\r\n  },\r\n  totalCount: {\r\n    type: Number,\r\n    default: 0\r\n  },\r\n  activeCount: {\r\n    type: Number,\r\n    default: 0\r\n  },\r\n  availableCount: {\r\n    type: Number,\r\n    default: 0\r\n  },\r\n  warrantyCount: {\r\n    type: Number,\r\n    default: 0\r\n  },\r\n  scrappedCount: {\r\n    type: Number,\r\n    default: 0\r\n  },\r\n  tableMode: {\r\n    type: String,\r\n    default: 'all', // 'all', 'in_use', 'scrapped'\r\n    validator: (value) => ['all', 'in_use', 'scrapped'].includes(value)\r\n  },\r\n  currentFilter: {\r\n    type: String,\r\n    default: 'active'\r\n  }\r\n});\r\n\r\n// Emits\r\nconst emit = defineEmits([\r\n  'tableChange',\r\n  'viewDetails',\r\n  'editAsset',\r\n  'deleteAsset',\r\n  'toggleMonitoring',\r\n  'batchUpdateMonitoring',\r\n  'batchDelete',\r\n  'batchToggleStatus',\r\n  'openDrawer',\r\n  'add',\r\n  'import',\r\n  'export',\r\n  'headerBatchMonitoring',\r\n  'listManagement',\r\n  'search',\r\n  'reset',\r\n  'searchInput',\r\n  'statusChange',\r\n  'typeChange',\r\n  'viewHistory',\r\n  'statsFilter'\r\n]);\r\n\r\n// 响应式数据\r\nconst selectedRowKeys = ref([]);\r\nconst batchMonitoringLoading = ref(false);\r\nconst batchDeleteLoading = ref(false);\r\nconst batchToggleLoading = ref(false);\r\nconst showAdvancedFilter = ref(false);\r\n\r\n// 统计按钮点击处理\r\nconst handleStatsClick = (filterType) => {\r\n  emit('statsFilter', filterType);\r\n};\r\n\r\n// 字典数据\r\nconst assetStatusOptions = ref([]);\r\nconst assetTypeOptions = ref([]);\r\nconst dictionaryLoading = ref(false);\r\n\r\n// 表格列配置\r\nconst columns = computed(() => {\r\n  // 在用设备表格列配置\r\n  const inUseColumns = [\r\n    {\r\n      title: '资产标签',\r\n      dataIndex: 'asset_tag',\r\n      key: 'asset_tag',\r\n      width: 120,\r\n      sorter: true\r\n    },\r\n    {\r\n      title: '型号',\r\n      dataIndex: 'model',\r\n      key: 'model',\r\n      width: 150,\r\n      ellipsis: true\r\n    },\r\n    {\r\n      title: '制造商',\r\n      dataIndex: 'manufacturer',\r\n      key: 'manufacturer',\r\n      width: 120\r\n    },\r\n    {\r\n      title: '保修状态',\r\n      dataIndex: 'warranty_status_display',\r\n      key: 'warranty_status_display',\r\n      width: 180\r\n    },\r\n    {\r\n      title: '监控状态',\r\n      dataIndex: 'monitoring_status',\r\n      key: 'monitoring_status',\r\n      width: 90\r\n    },\r\n    {\r\n      title: '位置',\r\n      dataIndex: 'location',\r\n      key: 'location',\r\n      width: 150,\r\n      ellipsis: true\r\n    },\r\n    {\r\n      title: '资产责任人',\r\n      dataIndex: 'asset_owner',\r\n      key: 'asset_owner',\r\n      width: 100\r\n    },\r\n    {\r\n      title: '供应商机构名--责任人',\r\n      key: 'supplier_info',\r\n      width: 220,\r\n      ellipsis: true\r\n    },\r\n    {\r\n      title: '操作',\r\n      key: 'action',\r\n      align: 'center',\r\n      width: 120\r\n    }\r\n  ];\r\n\r\n  // 报废设备表格列配置\r\n  const scrappedColumns = [\r\n    {\r\n      title: '资产标签',\r\n      dataIndex: 'asset_tag',\r\n      key: 'asset_tag',\r\n      width: 120,\r\n      sorter: true\r\n    },\r\n    {\r\n      title: '型号',\r\n      dataIndex: 'model',\r\n      key: 'model',\r\n      width: 150,\r\n      ellipsis: true\r\n    },\r\n    {\r\n      title: '制造商',\r\n      dataIndex: 'manufacturer',\r\n      key: 'manufacturer',\r\n      width: 120\r\n    },\r\n    {\r\n      title: '位置',\r\n      dataIndex: 'location',\r\n      key: 'location',\r\n      width: 150,\r\n      ellipsis: true\r\n    },\r\n    {\r\n      title: '操作',\r\n      key: 'action',\r\n      align: 'center',\r\n      width: 120\r\n    }\r\n  ];\r\n\r\n  // 默认全部列配置（保持原有功能）\r\n  const allColumns = [\r\n    {\r\n      title: '资产标签',\r\n      dataIndex: 'asset_tag',\r\n      key: 'asset_tag',\r\n      width: 120,\r\n      sorter: true\r\n    },\r\n    {\r\n      title: '序列号',\r\n      dataIndex: 'serial_number',\r\n      key: 'serial_number',\r\n      width: 120,\r\n      ellipsis: true\r\n    },\r\n    {\r\n      title: '设备状态',\r\n      dataIndex: 'asset_status',\r\n      key: 'asset_status',\r\n      width: 80\r\n    },\r\n    {\r\n      title: '型号',\r\n      dataIndex: 'model',\r\n      key: 'model',\r\n      width: 150,\r\n      ellipsis: true\r\n    },\r\n    {\r\n      title: '监控状态',\r\n      dataIndex: 'monitoring_status',\r\n      key: 'monitoring_status',\r\n      width: 90\r\n    },\r\n    {\r\n      title: '创建时间',\r\n      dataIndex: 'created_at',\r\n      key: 'created_at',\r\n      width: 120,\r\n      sorter: true\r\n    },\r\n    {\r\n      title: '操作',\r\n      key: 'action',\r\n      align: 'center',\r\n      width: 120\r\n    }\r\n  ];\r\n\r\n  switch (props.currentFilter) {\r\n    case 'active':\r\n      return inUseColumns;\r\n    case 'scrapped':\r\n      return scrappedColumns;\r\n    default:\r\n      return allColumns;\r\n  }\r\n});\r\n\r\n// 行选择配置\r\nconst rowSelection = {\r\n  selectedRowKeys: selectedRowKeys,\r\n  onChange: (keys) => {\r\n    selectedRowKeys.value = keys;\r\n  },\r\n  onSelectAll: (selected, selectedRows, changeRows) => {\r\n    console.log('onSelectAll:', selected, selectedRows, changeRows);\r\n  }\r\n};\r\n\r\n// 计算属性\r\nconst allSelectedActive = computed(() => {\r\n  if (selectedRowKeys.value.length === 0) return false;\r\n  const selectedRecords = props.dataSource.filter(item => \r\n    selectedRowKeys.value.includes(item.id)\r\n  );\r\n  return selectedRecords.every(record => record.status === 'active');\r\n});\r\n\r\n// 方法\r\n// 设备状态相关\r\nconst getAssetStatusColor = (status) => {\r\n  const statusMap = {\r\n    'active': 'success',\r\n    'available': 'processing',\r\n    'maintenance': 'warning',\r\n    'retired': 'error'\r\n  };\r\n  return statusMap[status] || 'default';\r\n};\r\n\r\nconst getAssetStatusText = (status) => {\r\n  const statusMap = {\r\n    'active': '在用',\r\n    'in_use': '在用',\r\n    'available': '可用',\r\n    'maintenance': '维护',\r\n    'retired': '退役',\r\n    'scrapped': '报废'\r\n  };\r\n  return statusMap[status] || status;\r\n};\r\n\r\n// 保修状态相关\r\nconst getWarrantyStatusColor = (status) => {\r\n  const statusMap = {\r\n    '在保': 'success',\r\n    '过保': 'error',\r\n    '即将过保': 'warning',\r\n    '未知': 'default'\r\n  };\r\n  return statusMap[status] || 'default';\r\n};\r\n\r\n// 设备类型相关\r\nconst getTypeColor = (type) => {\r\n  const typeMap = {\r\n    'server': 'blue',\r\n    'network': 'green',\r\n    'storage': 'orange',\r\n    'security': 'purple'\r\n  };\r\n  return typeMap[type] || 'default';\r\n};\r\n\r\nconst getTypeText = (type) => {\r\n  const typeMap = {\r\n    'server': '服务器',\r\n    'network': '网络设备',\r\n    'storage': '存储设备',\r\n    'security': '安全设备'\r\n  };\r\n  return typeMap[type] || type;\r\n};\r\n\r\n// 时间格式化\r\nconst formatTime = (time) => {\r\n  if (!time) return '-';\r\n  return dayjs(time).format('YYYY-MM-DD HH:mm:ss');\r\n};\r\n\r\n// 相对时间显示\r\nconst getRelativeTime = (time) => {\r\n  if (!time) return '';\r\n  const now = dayjs();\r\n  const target = dayjs(time);\r\n  const diffInMinutes = now.diff(target, 'minute');\r\n  const diffInHours = now.diff(target, 'hour');\r\n  const diffInDays = now.diff(target, 'day');\r\n  \r\n  if (diffInMinutes < 1) {\r\n    return '刚刚';\r\n  } else if (diffInMinutes < 60) {\r\n    return `${diffInMinutes}分钟前`;\r\n  } else if (diffInHours < 24) {\r\n    return `${diffInHours}小时前`;\r\n  } else if (diffInDays < 30) {\r\n    return `${diffInDays}天前`;\r\n  } else {\r\n    return target.format('YYYY-MM-DD');\r\n  }\r\n};\r\n\r\nconst clearSelection = () => {\r\n  selectedRowKeys.value = [];\r\n};\r\n\r\nconst handleTableChange = (pagination, filters, sorter) => {\r\n  emit('tableChange', pagination, filters, sorter);\r\n};\r\n\r\nconst viewDetails = (record) => {\r\n  emit('viewDetails', record);\r\n};\r\n\r\nconst editAsset = (record) => {\r\n  emit('editAsset', record);\r\n};\r\n\r\nconst viewHistory = (record) => {\r\n  emit('viewHistory', record);\r\n};\r\n\r\nconst deleteAsset = async (record) => {\r\n  record.deleteLoading = true;\r\n  try {\r\n    await emit('deleteAsset', record);\r\n    // 如果删除成功，从选中列表中移除\r\n    const index = selectedRowKeys.value.indexOf(record.id);\r\n    if (index > -1) {\r\n      selectedRowKeys.value.splice(index, 1);\r\n    }\r\n  } finally {\r\n    record.deleteLoading = false;\r\n  }\r\n};\r\n\r\nconst toggleMonitoring = async (record, checked) => {\r\n  record.toggleLoading = true;\r\n  try {\r\n    await emit('toggleMonitoring', record, checked);\r\n  } finally {\r\n    record.toggleLoading = false;\r\n  }\r\n};\r\n\r\nconst batchUpdateMonitoring = async () => {\r\n  if (selectedRowKeys.value.length === 0) {\r\n    message.warning('请先选择要操作的设备');\r\n    return;\r\n  }\r\n  \r\n  batchMonitoringLoading.value = true;\r\n  try {\r\n    const selectedRecords = props.dataSource.filter(item => \r\n      selectedRowKeys.value.includes(item.id)\r\n    );\r\n    await emit('batchUpdateMonitoring', selectedRecords);\r\n  } finally {\r\n    batchMonitoringLoading.value = false;\r\n  }\r\n};\r\n\r\nconst batchDelete = async () => {\r\n  if (selectedRowKeys.value.length === 0) {\r\n    message.warning('请先选择要删除的设备');\r\n    return;\r\n  }\r\n  \r\n  batchDeleteLoading.value = true;\r\n  try {\r\n    const selectedRecords = props.dataSource.filter(item => \r\n      selectedRowKeys.value.includes(item.id)\r\n    );\r\n    await emit('batchDelete', selectedRecords);\r\n    // 清空选择\r\n    selectedRowKeys.value = [];\r\n  } finally {\r\n    batchDeleteLoading.value = false;\r\n  }\r\n};\r\n\r\nconst batchToggleStatus = async () => {\r\n  if (selectedRowKeys.value.length === 0) {\r\n    message.warning('请先选择要操作的设备');\r\n    return;\r\n  }\r\n  \r\n  batchToggleLoading.value = true;\r\n  try {\r\n    const selectedRecords = props.dataSource.filter(item => \r\n      selectedRowKeys.value.includes(item.id)\r\n    );\r\n    await emit('batchToggleStatus', selectedRecords, !allSelectedActive.value);\r\n  } finally {\r\n    batchToggleLoading.value = false;\r\n  }\r\n};\r\n\r\n// 表格头部按钮事件处理\r\nconst handleAdd = () => {\r\n  //打开弹窗\r\n  emit('add')\r\n};\r\n\r\nconst handleImport = () => {\r\n  emit('import');\r\n};\r\n\r\nconst handleExport = () => {\r\n  emit('export');\r\n};\r\n\r\nconst handleHeaderBatchMonitoring = () => {\r\n  emit('headerBatchMonitoring');\r\n};\r\n\r\nconst handleListManagement = () => {\r\n  emit('listManagement');\r\n};\r\n\r\n// 筛选相关事件处理\r\nconst handleSearch = () => {\r\n  emit('search');\r\n};\r\n\r\nconst handleReset = () => {\r\n  emit('reset');\r\n};\r\n\r\nconst handleSearchInput = (e) => {\r\n  emit('searchInput', e.target.value);\r\n};\r\n\r\nconst handleStatusChange = (value) => {\r\n  emit('statusChange', value);\r\n};\r\n\r\nconst handleTypeChange = (value) => {\r\n  emit('typeChange', value);\r\n};\r\n\r\nconst toggleAdvancedFilter = () => {\r\n  showAdvancedFilter.value = !showAdvancedFilter.value;\r\n};\r\n\r\n// 字典数据加载方法\r\nconst loadDictionaryData = async () => {\r\n  try {\r\n    dictionaryLoading.value = true;\r\n    \r\n    // 加载设备状态字典\r\n    const statusResponse = await dictionaryAPI.getDictionaryByCategory('status');\r\n    if (statusResponse.data && statusResponse.data.results) {\r\n      assetStatusOptions.value = statusResponse.data.results.map(item => ({\r\n        value: item.value,\r\n        label: item.label,\r\n        color: getAssetStatusColor(item.value)\r\n      }));\r\n    }\r\n    \r\n    // 加载设备类型字典\r\n    const typeResponse = await dictionaryAPI.getDictionaryByCategory('asset_type');\r\n    if (typeResponse.data && typeResponse.data.results) {\r\n      assetTypeOptions.value = typeResponse.data.results.map(item => ({\r\n        value: item.value,\r\n        label: item.label,\r\n        color: getTypeColor(item.value)\r\n      }));\r\n    }\r\n  } catch (error) {\r\n    console.error('加载字典数据失败:', error);\r\n    message.error('加载字典数据失败');\r\n  } finally {\r\n    dictionaryLoading.value = false;\r\n  }\r\n};\r\n\r\n// 组件挂载时加载字典数据\r\nonMounted(() => {\r\n  loadDictionaryData();\r\n});\r\n\r\n// 暴露方法给父组件\r\ndefineExpose({\r\n  clearSelection,\r\n  getSelectedRowKeys: () => selectedRowKeys.value,\r\n  getSelectedRecords: () => props.dataSource.filter(item => \r\n    selectedRowKeys.value.includes(item.id)\r\n  ),\r\n  loadDictionaryData\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n/* 简洁容器样式 */\r\n.hardware-asset-table-container {\r\n  background: #ffffff;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  min-height: calc(100vh - 40px);\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: relative;\r\n}\r\n\r\n.table-wrapper {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 0;\r\n}\r\n\r\n/* 硬件设备统计容器样式 */\r\n.hardware-stats-container {\r\n  background: #fff;\r\n  overflow: hidden;\r\n}\r\n\r\n/* 统计头部样式 */\r\n.stats-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 20px 24px;\r\n  border-bottom: 1px solid #f0f0f0;\r\n  color: white;\r\n}\r\n\r\n.page-title h3{\r\n  margin: 0;\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  color: #1e40af;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n}\r\n\r\n.title-icon {\r\n  font-size: 22px;\r\n  color: rgba(255, 255, 255, 0.9);\r\n}\r\n\r\n/* 硬件设备统计按钮组样式 */\r\n.stats-header {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  height: 80px;\r\n  padding: 0 24px;\r\n  gap: 24px;\r\n}\r\n\r\n\r\n.hardware-stats-buttons {\r\n  display: flex;\r\n  gap: 16px;\r\n  flex: 1;\r\n  justify-content: center;\r\n  max-width: 500px;\r\n}\r\n\r\n.table-actions {\r\n  flex-shrink: 0;\r\n}\r\n\r\n.stats-button {\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 8px 12px;\r\n  background: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.06);\r\n  transition: all 0.3s ease;\r\n  cursor: pointer;\r\n  border: 2px solid transparent;\r\n  min-width: 160px;\r\n  max-width: 200px;\r\n  height: 56px;\r\n}\r\n\r\n.stats-button:hover {\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.12);\r\n  cursor: pointer;\r\n}\r\n\r\n.stats-button.stats-active {\r\n  border: 1px solid #1890ff;\r\n  box-shadow: 0 4px 16px rgba(24, 144, 255, 0.2);\r\n  transform: translateY(-2px);\r\n}\r\n\r\n.button-icon {\r\n  width: 32px;\r\n  height: 32px;\r\n  border-radius: 6px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-right: 8px;\r\n  font-size: 14px;\r\n  flex-shrink: 0;\r\n}\r\n\r\n.button-content {\r\n  flex: 1;\r\n}\r\n\r\n.button-title {\r\n  font-size: 11px;\r\n  color: #666;\r\n  margin-bottom: 1px;\r\n  font-weight: 500;\r\n}\r\n\r\n.button-count {\r\n  font-size: 16px;\r\n  font-weight: 700;\r\n  line-height: 1;\r\n  margin-bottom: 2px;\r\n}\r\n\r\n\r\n\r\n\r\n/* 不同状态的颜色主题 */\r\n.stats-button.total .button-icon {\r\n  background: linear-gradient(135deg, #667eea, #764ba2);\r\n  color: white;\r\n}\r\n\r\n.stats-button.total .button-count {\r\n  color: #667eea;\r\n}\r\n\r\n.stats-button.active .button-icon {\r\n  background: linear-gradient(135deg, #4facfe, #00f2fe);\r\n  color: white;\r\n}\r\n\r\n.stats-button.active .button-count {\r\n  color: #1890ff;\r\n}\r\n\r\n.stats-button.available .button-icon {\r\n  background: linear-gradient(135deg, #43e97b, #38f9d7);\r\n  color: white;\r\n}\r\n\r\n.stats-button.available .button-count {\r\n  color: #52c41a;\r\n}\r\n\r\n.stats-button.warranty .button-icon {\r\n  background: linear-gradient(135deg, #fa709a, #fee140);\r\n  color: white;\r\n}\r\n\r\n.stats-button.warranty .button-count {\r\n  color: #fa8c16;\r\n}\r\n\r\n.stats-button.scrapped .button-icon {\r\n  background: linear-gradient(135deg, #ff4d4f, #ff7875);\r\n  color: white;\r\n}\r\n\r\n.stats-button.scrapped .button-count {\r\n  color: #ff4d4f;\r\n}\r\n\r\n/* 表格头部样式 */\r\n.table-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 16px 24px;\r\n  border-bottom: 1px solid #e9ecef;\r\n  border-radius: 6px 6px 0 0;\r\n}\r\n\r\n.table-title h4 {\r\n  margin: 0;\r\n  font-size: 17px;\r\n  font-weight: 600;\r\n  color: #262626;\r\n}\r\n\r\n/* 简洁操作按钮区域 */\r\n.table-actions {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 1200px) {\r\n  .stats-header {\r\n    flex-direction: column;\r\n    align-items: stretch;\r\n    gap: 16px;\r\n  }\r\n  \r\n  .hardware-stats-buttons {\r\n    max-width: none;\r\n    justify-content: center;\r\n  }\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .table-header {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    gap: 16px;\r\n  }\r\n  \r\n  .table-title {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    gap: 12px;\r\n    width: 100%;\r\n  }\r\n  \r\n  .stats-inline {\r\n    width: 100%;\r\n    justify-content: space-between;\r\n  }\r\n  \r\n  .stat-item {\r\n    flex: 1;\r\n    min-width: 0;\r\n  }\r\n  \r\n  .hardware-stats-buttons {\r\n    flex-direction: column;\r\n    gap: 12px;\r\n  }\r\n  \r\n  .stats-button {\r\n    min-width: auto;\r\n    max-width: none;\r\n  }\r\n}\r\n\r\n/* 简洁搜索过滤区域 */\r\n.filter-section {\r\n  background: #ffffff;\r\n  border-bottom: 1px solid #e9ecef;\r\n}\r\n\r\n.expand-btn {\r\n  padding: 4px 8px;\r\n  font-size: 12px;\r\n}\r\n\r\n.rotate-180 {\r\n  transform: rotate(180deg);\r\n  transition: transform 0.3s ease;\r\n}\r\n\r\n.advanced-filter {\r\n  margin-top: 12px;\r\n  animation: fadeIn 0.3s ease;\r\n  margin-top: 8px;\r\n}\r\n\r\n@keyframes fadeIn {\r\n  from {\r\n    opacity: 0;\r\n    transform: translateY(-10px);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n}\r\n\r\n.filter-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 12px 24px;\r\n  background: #fff;\r\n  border-bottom: 1px solid #e9ecef;\r\n}\r\n\r\n.filter-title {\r\n  font-size: 15px;\r\n  font-weight: bold;\r\n  color: #495057;\r\n  margin: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 6px;\r\n}\r\n\r\n.title-icon {\r\n  color: #1890ff;\r\n  font-size: 14px;\r\n}\r\n\r\n.filter-actions {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n}\r\n\r\n.filter-content {\r\n  padding: 16px 24px;\r\n}\r\n\r\n.filter-item {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 4px;\r\n}\r\n\r\n.filter-label {\r\n  display: block;\r\n  margin-bottom: 6px;\r\n  font-weight: 500;\r\n  color: #262626;\r\n  font-size: 13px;\r\n}\r\n\r\n/* 简洁批量操作区域 */\r\n.batch-toolbar {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 16px 16px;\r\n  background: #ffffff;\r\n  border-bottom: 1px solid #e2e8f0;\r\n}\r\n\r\n.selected-info {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  color: #1890ff;\r\n  font-weight: 500;\r\n}\r\n\r\n.batch-actions {\r\n  display: flex;\r\n  gap: 8px;\r\n}\r\n\r\n.asset-name {\r\n  font-weight: 500;\r\n}\r\n\r\n.monitoring-text {\r\n  margin-left: 8px;\r\n  font-size: 12px;\r\n  color: #8c8c8c;\r\n}\r\n\r\n.no-data {\r\n  color: #bfbfbf;\r\n}\r\n\r\n.time-cell {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 2px;\r\n}\r\n\r\n.time-text {\r\n  font-size: 13px;\r\n  color: #262626;\r\n  font-weight: 500;\r\n}\r\n\r\n.time-relative {\r\n  font-size: 11px;\r\n  color: #8c8c8c;\r\n  font-style: italic;\r\n}\r\n\r\n.action-buttons {\r\n  display: flex;\r\n  gap: 4px;\r\n}\r\n\r\n.action-btn {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 28px;\r\n  height: 28px;\r\n  border-radius: 4px;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.action-btn:hover {\r\n  background-color: #f5f5f5;\r\n  transform: scale(1.1);\r\n}\r\n\r\n.action-btn.danger:hover {\r\n  background-color: #fff2f0;\r\n  color: #ff4d4f;\r\n}\r\n\r\n.action-btn .anticon {\r\n  font-size: 14px;\r\n}\r\n\r\n/* 简洁输入框样式 */\r\n:deep(.ant-input) {\r\n  border-radius: 6px;\r\n  border: 1px solid #d1d5db;\r\n  background: #ffffff;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n:deep(.ant-input:focus) {\r\n  border-color: #2563eb;\r\n  box-shadow: 0 0 0 2px rgba(37, 99, 235, 0.1);\r\n}\r\n\r\n:deep(.ant-select) {\r\n  border-radius: 6px;\r\n}\r\n\r\n:deep(.ant-select .ant-select-selector) {\r\n  border-radius: 6px !important;\r\n  border: 1px solid #d1d5db !important;\r\n  background: #ffffff !important;\r\n}\r\n\r\n:deep(.ant-select:not(.ant-select-disabled):hover .ant-select-selector) {\r\n  border-color: #2563eb !important;\r\n}\r\n\r\n/* 表格样式优化 */\r\n:deep(.ant-table) {\r\n  font-size: 13px;\r\n}\r\n\r\n:deep(.ant-table-container) {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n:deep(.ant-table-content) {\r\n  overflow: auto;\r\n}\r\n\r\n:deep(.ant-table-body) {\r\n  overflow-y: visible;\r\n}\r\n\r\n:deep(.ant-table-thead > tr > th) {\r\n  background: #ffffff;\r\n  font-weight: 600;\r\n  color: #262626;\r\n}\r\n\r\n:deep(.ant-table-tbody > tr:hover > td) {\r\n  background: #ffffff;\r\n}\r\n\r\n:deep(.ant-table-row-selected) {\r\n  background: #e6f7ff;\r\n}\r\n\r\n:deep(.ant-table-row-selected:hover > td) {\r\n  background: #bae7ff;\r\n}\r\n\r\n:deep(.ant-pagination) {\r\n  margin: 12px 16px;\r\n  text-align: right;\r\n  flex-shrink: 0;\r\n  border-top: 1px solid #f0f0f0;\r\n  padding-top: 12px;\r\n}\r\n\r\n:deep(.ant-switch) {\r\n  min-width: 28px;\r\n}\r\n\r\n:deep(.ant-tag) {\r\n  margin: 0;\r\n  border-radius: 4px;\r\n}\r\n\r\n/* 只有操作列居中对齐 */\r\n:deep(.ant-table-tbody > tr > td:nth-child(7)) {\r\n  text-align: center !important;\r\n}\r\n\r\n:deep(.ant-table-thead > tr > th:nth-child(7)) {\r\n  text-align: center !important;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}