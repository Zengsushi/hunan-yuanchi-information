{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { ref, computed } from 'vue';\nimport { ReloadOutlined, InboxOutlined } from '@ant-design/icons-vue';\nexport default {\n  __name: 'MonitoringCard',\n  props: {\n    card: {\n      type: Object,\n      required: true\n    }\n  },\n  emits: ['refresh'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const props = __props;\n    const emit = __emit;\n    const refreshing = ref(false);\n\n    // 计算百分比\n    const getPercentage = value => {\n      if (!props.card.data || props.card.data.length === 0) return 0;\n      const maxValue = Math.max(...props.card.data.map(item => item.value));\n      return value / maxValue * 100;\n    };\n\n    // 处理刷新\n    const handleRefresh = async () => {\n      refreshing.value = true;\n      try {\n        emit('refresh', props.card.id);\n        // 模拟刷新延迟\n        await new Promise(resolve => setTimeout(resolve, 1000));\n      } finally {\n        refreshing.value = false;\n      }\n    };\n    const __returned__ = {\n      props,\n      emit,\n      refreshing,\n      getPercentage,\n      handleRefresh,\n      ref,\n      computed,\n      get ReloadOutlined() {\n        return ReloadOutlined;\n      },\n      get InboxOutlined() {\n        return InboxOutlined;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","ReloadOutlined","InboxOutlined","props","__props","emit","__emit","refreshing","getPercentage","value","card","data","length","maxValue","Math","max","map","item","handleRefresh","id","Promise","resolve","setTimeout"],"sources":["E:/A_project/yuanchi/AIops/frontend/src/components/business/MonitoringCard.vue"],"sourcesContent":["<template>\r\n  <a-card class=\"monitoring-card\" :bordered=\"false\">\r\n    <template #title>\r\n      <div class=\"card-header\">\r\n        <span class=\"card-title\">{{ card.title }}</span>\r\n        <div class=\"card-actions\">\r\n          <a-tooltip title=\"刷新数据\">\r\n            <a-button \r\n              type=\"text\" \r\n              size=\"small\" \r\n              @click=\"$emit('refresh', card.id)\"\r\n              :loading=\"refreshing\"\r\n            >\r\n              <ReloadOutlined />\r\n            </a-button>\r\n          </a-tooltip>\r\n        </div>\r\n      </div>\r\n    </template>\r\n    \r\n    <div class=\"card-content\">\r\n      <!-- 图表显示 -->\r\n      <div v-if=\"card.type === 'chart'\" class=\"chart-container\">\r\n        <div \r\n          v-for=\"(item, index) in card.data\" \r\n          :key=\"index\"\r\n          class=\"chart-item\"\r\n        >\r\n          <div class=\"item-info\">\r\n            <div class=\"item-name\">{{ item.name }}</div>\r\n            <div class=\"item-value\">{{ item.value }}{{ card.unit }}</div>\r\n          </div>\r\n          <div class=\"item-bar\">\r\n            <div \r\n              class=\"bar-fill\"\r\n              :style=\"{ \r\n                width: `${getPercentage(item.value)}%`,\r\n                backgroundColor: card.color \r\n              }\"\r\n            ></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- 列表显示 -->\r\n      <div v-else-if=\"card.type === 'list'\" class=\"list-container\">\r\n        <div \r\n          v-for=\"(item, index) in card.data\" \r\n          :key=\"index\"\r\n          class=\"list-item\"\r\n        >\r\n          <div class=\"item-rank\">{{ index + 1 }}</div>\r\n          <div class=\"item-content\">\r\n            <div class=\"item-name\">{{ item.name }}</div>\r\n            <div class=\"item-detail\">{{ item.detail }}</div>\r\n          </div>\r\n          <div class=\"item-value\">{{ item.value }}{{ card.unit }}</div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- 空数据状态 -->\r\n      <div v-if=\"!card.data || card.data.length === 0\" class=\"empty-state\">\r\n        <InboxOutlined class=\"empty-icon\" />\r\n        <p>暂无数据</p>\r\n      </div>\r\n    </div>\r\n  </a-card>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed } from 'vue';\r\nimport { ReloadOutlined, InboxOutlined } from '@ant-design/icons-vue';\r\n\r\nconst props = defineProps({\r\n  card: {\r\n    type: Object,\r\n    required: true\r\n  }\r\n});\r\n\r\nconst emit = defineEmits(['refresh']);\r\n\r\nconst refreshing = ref(false);\r\n\r\n// 计算百分比\r\nconst getPercentage = (value) => {\r\n  if (!props.card.data || props.card.data.length === 0) return 0;\r\n  \r\n  const maxValue = Math.max(...props.card.data.map(item => item.value));\r\n  return (value / maxValue) * 100;\r\n};\r\n\r\n// 处理刷新\r\nconst handleRefresh = async () => {\r\n  refreshing.value = true;\r\n  try {\r\n    emit('refresh', props.card.id);\r\n    // 模拟刷新延迟\r\n    await new Promise(resolve => setTimeout(resolve, 1000));\r\n  } finally {\r\n    refreshing.value = false;\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.monitoring-card {\r\n  border-radius: 12px;\r\n  box-shadow: 0 2px 12px rgba(24, 144, 255, 0.06);\r\n  border: 1px solid rgba(24, 144, 255, 0.04);\r\n  overflow: hidden;\r\n  height: 100%;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.monitoring-card:hover {\r\n  box-shadow: 0 4px 20px rgba(24, 144, 255, 0.1);\r\n  transform: translateY(-1px);\r\n}\r\n\r\n:deep(.monitoring-card .ant-card-head) {\r\n  background: linear-gradient(135deg, #f8faff 0%, #ffffff 100%);\r\n  border-bottom: 1px solid rgba(24, 144, 255, 0.08);\r\n  padding: 12px 16px;\r\n  min-height: auto;\r\n}\r\n\r\n:deep(.monitoring-card .ant-card-body) {\r\n  background: linear-gradient(135deg, #ffffff 0%, #fafbff 100%);\r\n  padding: 16px;\r\n  height: calc(100% - 60px);\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n}\r\n\r\n.card-title {\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  color: #434343;\r\n}\r\n\r\n.card-actions {\r\n  display: flex;\r\n  gap: 4px;\r\n}\r\n\r\n.card-content {\r\n  height: 100%;\r\n  overflow: hidden;\r\n}\r\n\r\n/* 图表样式 */\r\n.chart-container {\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n}\r\n\r\n.chart-item {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n  padding: 6px 0;\r\n}\r\n\r\n.item-info {\r\n  min-width: 80px;\r\n  flex-shrink: 0;\r\n}\r\n\r\n.item-name {\r\n  font-size: 12px;\r\n  color: #595959;\r\n  margin-bottom: 2px;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.item-value {\r\n  font-size: 13px;\r\n  font-weight: 600;\r\n  color: #262626;\r\n}\r\n\r\n.item-bar {\r\n  flex: 1;\r\n  height: 8px;\r\n  background: rgba(0, 0, 0, 0.04);\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n  position: relative;\r\n}\r\n\r\n.bar-fill {\r\n  height: 100%;\r\n  border-radius: 4px;\r\n  transition: width 0.6s ease;\r\n  position: relative;\r\n}\r\n\r\n.bar-fill::after {\r\n  content: '';\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  width: 4px;\r\n  height: 100%;\r\n  background: rgba(255, 255, 255, 0.3);\r\n  border-radius: 0 4px 4px 0;\r\n}\r\n\r\n/* 列表样式 */\r\n.list-container {\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 6px;\r\n}\r\n\r\n.list-item {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  padding: 8px 0;\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.04);\r\n}\r\n\r\n.list-item:last-child {\r\n  border-bottom: none;\r\n}\r\n\r\n.item-rank {\r\n  width: 20px;\r\n  height: 20px;\r\n  background: #1890ff;\r\n  color: white;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 11px;\r\n  font-weight: 600;\r\n  flex-shrink: 0;\r\n}\r\n\r\n.item-content {\r\n  flex: 1;\r\n}\r\n\r\n.item-detail {\r\n  font-size: 11px;\r\n  color: #8c8c8c;\r\n  margin-top: 2px;\r\n}\r\n\r\n/* 空状态 */\r\n.empty-state {\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #bfbfbf;\r\n}\r\n\r\n.empty-icon {\r\n  font-size: 32px;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.empty-state p {\r\n  font-size: 12px;\r\n  margin: 0;\r\n}\r\n\r\n/* 响应式 */\r\n@media (max-width: 768px) {\r\n  .chart-item {\r\n    gap: 8px;\r\n    padding: 4px 0;\r\n  }\r\n  \r\n  .item-info {\r\n    min-width: 70px;\r\n  }\r\n  \r\n  .item-name {\r\n    font-size: 11px;\r\n  }\r\n  \r\n  .item-value {\r\n    font-size: 12px;\r\n  }\r\n  \r\n  .item-bar {\r\n    height: 6px;\r\n  }\r\n  \r\n  .list-item {\r\n    gap: 8px;\r\n    padding: 6px 0;\r\n  }\r\n  \r\n  .item-rank {\r\n    width: 18px;\r\n    height: 18px;\r\n    font-size: 10px;\r\n  }\r\n}\r\n</style>"],"mappings":";;AAsEA,SAASA,GAAG,EAAEC,QAAQ,QAAQ,KAAK;AACnC,SAASC,cAAc,EAAEC,aAAa,QAAQ,uBAAuB;;;;;;;;;;;;;;;IAErE,MAAMC,KAAK,GAAGC,OAKZ;IAEF,MAAMC,IAAI,GAAGC,MAAwB;IAErC,MAAMC,UAAU,GAAGR,GAAG,CAAC,KAAK,CAAC;;IAE7B;IACA,MAAMS,aAAa,GAAIC,KAAK,IAAK;MAC/B,IAAI,CAACN,KAAK,CAACO,IAAI,CAACC,IAAI,IAAIR,KAAK,CAACO,IAAI,CAACC,IAAI,CAACC,MAAM,KAAK,CAAC,EAAE,OAAO,CAAC;MAE9D,MAAMC,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGZ,KAAK,CAACO,IAAI,CAACC,IAAI,CAACK,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACR,KAAK,CAAC,CAAC;MACrE,OAAQA,KAAK,GAAGI,QAAQ,GAAI,GAAG;IACjC,CAAC;;IAED;IACA,MAAMK,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChCX,UAAU,CAACE,KAAK,GAAG,IAAI;MACvB,IAAI;QACFJ,IAAI,CAAC,SAAS,EAAEF,KAAK,CAACO,IAAI,CAACS,EAAE,CAAC;QAC9B;QACA,MAAM,IAAIC,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;MACzD,CAAC,SAAS;QACRd,UAAU,CAACE,KAAK,GAAG,KAAK;MAC1B;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}