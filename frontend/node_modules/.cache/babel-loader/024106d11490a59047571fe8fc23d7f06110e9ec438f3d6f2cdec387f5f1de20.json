{"ast":null,"code":"import { ref } from 'vue';\nimport { Input, Button, Table, Card, Row, Col } from 'ant-design-vue';\nimport { PlusOutlined, DownloadOutlined } from '@ant-design/icons-vue';\n\n// 搜索条件\n\nexport default {\n  __name: 'AssetStatusList',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const searchKeyword = ref('');\n\n    // 分页配置\n    const pagination = {\n      current: 1,\n      pageSize: 10,\n      pageSizeOptions: ['10', '20', '50', '100'],\n      showSizeChanger: true,\n      showQuickJumper: true,\n      showTotal: total => `共 ${total} 条记录`\n    };\n\n    // 模拟数据\n    const statusData = [{\n      id: '1',\n      name: '在线',\n      color: '#52c41a',\n      description: '资产正常运行中',\n      assetCount: 112,\n      createTime: '2023-01-01 10:00:00',\n      updateTime: '2023-01-01 10:00:00'\n    }, {\n      id: '2',\n      name: '离线',\n      color: '#fa8c16',\n      description: '资产当前不在线',\n      assetCount: 8,\n      createTime: '2023-01-01 10:00:00',\n      updateTime: '2023-01-01 10:00:00'\n    }, {\n      id: '3',\n      name: '维护中',\n      color: '#1890ff',\n      description: '资产正在进行维护',\n      assetCount: 4,\n      createTime: '2023-01-01 10:00:00',\n      updateTime: '2023-01-01 10:00:00'\n    }, {\n      id: '4',\n      name: '已下线',\n      color: '#8c8c8c',\n      description: '资产已停止使用',\n      assetCount: 4,\n      createTime: '2023-01-01 10:00:00',\n      updateTime: '2023-01-01 10:00:00'\n    }, {\n      id: '5',\n      name: '故障',\n      color: '#f5222d',\n      description: '资产出现故障',\n      assetCount: 0,\n      createTime: '2023-01-01 10:00:00',\n      updateTime: '2023-01-01 10:00:00'\n    }, {\n      id: '6',\n      name: '待上线',\n      color: '#722ed1',\n      description: '资产已采购但尚未上线',\n      assetCount: 0,\n      createTime: '2023-01-01 10:00:00',\n      updateTime: '2023-01-01 10:00:00'\n    }];\n\n    // 表格列定义\n    const columns = [{\n      title: '状态编号',\n      dataIndex: 'id',\n      key: 'id',\n      fixed: 'left',\n      width: 120\n    }, {\n      title: '状态名称',\n      dataIndex: 'name',\n      key: 'name',\n      width: 150\n    }, {\n      title: '状态颜色',\n      dataIndex: 'color',\n      key: 'color',\n      width: 100\n    }, {\n      title: '描述',\n      dataIndex: 'description',\n      key: 'description',\n      width: 250\n    }, {\n      title: '关联资产数',\n      dataIndex: 'assetCount',\n      key: 'assetCount',\n      width: 120,\n      sorter: (a, b) => a.assetCount - b.assetCount\n    }, {\n      title: '创建时间',\n      dataIndex: 'createTime',\n      key: 'createTime',\n      width: 180\n    }, {\n      title: '更新时间',\n      dataIndex: 'updateTime',\n      key: 'updateTime',\n      width: 180\n    }, {\n      title: '操作',\n      key: 'operation',\n      fixed: 'right',\n      width: 120\n    }];\n\n    // 处理搜索\n    const handleSearch = () => {\n      console.log('搜索条件:', {\n        keyword: searchKeyword.value\n      });\n      // 这里应该调用API获取数据\n    };\n\n    // 处理重置\n    const handleReset = () => {\n      searchKeyword.value = '';\n    };\n\n    // 处理表格分页变化\n    const handleTableChange = (pagination, filters, sorter) => {\n      console.log('分页变化:', pagination);\n      // 这里应该根据分页信息重新获取数据\n    };\n\n    // 新增状态\n    const handleAddStatus = () => {\n      console.log('新增状态');\n      // 这里应该打开新增状态的模态框\n    };\n\n    // 处理编辑操作\n    const handleEdit = id => {\n      console.log('编辑状态:', id);\n      // 这里应该打开编辑状态的模态框\n    };\n\n    // 处理删除操作\n    const handleDelete = id => {\n      console.log('删除状态:', id);\n      // 这里应该显示确认删除的模态框，然后调用API删除状态\n    };\n    const __returned__ = {\n      searchKeyword,\n      pagination,\n      statusData,\n      columns,\n      handleSearch,\n      handleReset,\n      handleTableChange,\n      handleAddStatus,\n      handleEdit,\n      handleDelete,\n      ref,\n      get Input() {\n        return Input;\n      },\n      get Button() {\n        return Button;\n      },\n      get Table() {\n        return Table;\n      },\n      get Card() {\n        return Card;\n      },\n      get Row() {\n        return Row;\n      },\n      get Col() {\n        return Col;\n      },\n      get PlusOutlined() {\n        return PlusOutlined;\n      },\n      get DownloadOutlined() {\n        return DownloadOutlined;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","Input","Button","Table","Card","Row","Col","PlusOutlined","DownloadOutlined","searchKeyword","pagination","current","pageSize","pageSizeOptions","showSizeChanger","showQuickJumper","showTotal","total","statusData","id","name","color","description","assetCount","createTime","updateTime","columns","title","dataIndex","key","fixed","width","sorter","a","b","handleSearch","console","log","keyword","value","handleReset","handleTableChange","filters","handleAddStatus","handleEdit","handleDelete"],"sources":["E:/A_project/yuanchi/AIops/frontend/src/views/business/AssetStatusList.vue"],"sourcesContent":["<template>\r\n  <div class=\"asset-status-list-container\">\r\n    <div class=\"page-header\">\r\n      <h1>资产状态管理</h1>\r\n      <p>管理资产状态信息</p>\r\n    </div>\r\n    \r\n    <a-card :bordered=\"false\" class=\"search-card\">\r\n      <a-row gutter=\"[16, 16]\">\r\n        <a-col :span=\"6\">\r\n          <a-input v-model:value=\"searchKeyword\" placeholder=\"状态名称\" allow-clear />\r\n        </a-col>\r\n        <a-col :span=\"18\" style=\"text-align: right;\">\r\n          <a-button type=\"primary\" @click=\"handleSearch\">搜索</a-button>\r\n          <a-button style=\"margin-left: 8px;\" @click=\"handleReset\">重置</a-button>\r\n        </a-col>\r\n      </a-row>\r\n    </a-card>\r\n    \r\n    <div class=\"action-bar\">\r\n      <a-button type=\"primary\" icon=\"plus\" @click=\"handleAddStatus\">新增状态</a-button>\r\n      <a-button icon=\"download\">导出数据</a-button>\r\n    </div>\r\n    \r\n    <a-card :bordered=\"false\" class=\"table-card\">\r\n      <a-table \r\n        :columns=\"columns\" \r\n        :data-source=\"statusData\" \r\n        row-key=\"id\" \r\n        :pagination=\"pagination\" \r\n        @change=\"handleTableChange\"\r\n      >\r\n        <template #headerCell=\"{ column }\">\r\n          <span v-if=\"column.key === 'id'\">{{ column.title }} ({{ statusData.length }})</span>\r\n          <span v-else>{{ column.title }}</span>\r\n        </template>\r\n        <template #bodyCell=\"{ column, record }\">\r\n          <template v-if=\"column.key === 'color'\">\r\n            <span class=\"color-sample\" :style=\"{ backgroundColor: record.color }\"></span>\r\n          </template>\r\n          <template v-if=\"column.key === 'operation'\">\r\n            <a-button type=\"link\" @click=\"handleEdit(record.id)\">编辑</a-button>\r\n            <a-button type=\"link\" danger @click=\"handleDelete(record.id)\">删除</a-button>\r\n          </template>\r\n        </template>\r\n      </a-table>\r\n    </a-card>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue';\r\nimport { Input, Button, Table, Card, Row, Col } from 'ant-design-vue';\r\nimport { PlusOutlined, DownloadOutlined } from '@ant-design/icons-vue';\r\n\r\n// 搜索条件\r\nconst searchKeyword = ref('');\r\n\r\n// 分页配置\r\nconst pagination = {\r\n  current: 1,\r\n  pageSize: 10,\r\n  pageSizeOptions: ['10', '20', '50', '100'],\r\n  showSizeChanger: true,\r\n  showQuickJumper: true,\r\n  showTotal: (total) => `共 ${total} 条记录`,\r\n};\r\n\r\n// 模拟数据\r\nconst statusData = [\r\n  {\r\n    id: '1',\r\n    name: '在线',\r\n    color: '#52c41a',\r\n    description: '资产正常运行中',\r\n    assetCount: 112,\r\n    createTime: '2023-01-01 10:00:00',\r\n    updateTime: '2023-01-01 10:00:00'\r\n  },\r\n  {\r\n    id: '2',\r\n    name: '离线',\r\n    color: '#fa8c16',\r\n    description: '资产当前不在线',\r\n    assetCount: 8,\r\n    createTime: '2023-01-01 10:00:00',\r\n    updateTime: '2023-01-01 10:00:00'\r\n  },\r\n  {\r\n    id: '3',\r\n    name: '维护中',\r\n    color: '#1890ff',\r\n    description: '资产正在进行维护',\r\n    assetCount: 4,\r\n    createTime: '2023-01-01 10:00:00',\r\n    updateTime: '2023-01-01 10:00:00'\r\n  },\r\n  {\r\n    id: '4',\r\n    name: '已下线',\r\n    color: '#8c8c8c',\r\n    description: '资产已停止使用',\r\n    assetCount: 4,\r\n    createTime: '2023-01-01 10:00:00',\r\n    updateTime: '2023-01-01 10:00:00'\r\n  },\r\n  {\r\n    id: '5',\r\n    name: '故障',\r\n    color: '#f5222d',\r\n    description: '资产出现故障',\r\n    assetCount: 0,\r\n    createTime: '2023-01-01 10:00:00',\r\n    updateTime: '2023-01-01 10:00:00'\r\n  },\r\n  {\r\n    id: '6',\r\n    name: '待上线',\r\n    color: '#722ed1',\r\n    description: '资产已采购但尚未上线',\r\n    assetCount: 0,\r\n    createTime: '2023-01-01 10:00:00',\r\n    updateTime: '2023-01-01 10:00:00'\r\n  }\r\n];\r\n\r\n// 表格列定义\r\nconst columns = [\r\n  {\r\n    title: '状态编号',\r\n    dataIndex: 'id',\r\n    key: 'id',\r\n    fixed: 'left',\r\n    width: 120\r\n  },\r\n  {\r\n    title: '状态名称',\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n    width: 150\r\n  },\r\n  {\r\n    title: '状态颜色',\r\n    dataIndex: 'color',\r\n    key: 'color',\r\n    width: 100\r\n  },\r\n  {\r\n    title: '描述',\r\n    dataIndex: 'description',\r\n    key: 'description',\r\n    width: 250\r\n  },\r\n  {\r\n    title: '关联资产数',\r\n    dataIndex: 'assetCount',\r\n    key: 'assetCount',\r\n    width: 120,\r\n    sorter: (a, b) => a.assetCount - b.assetCount\r\n  },\r\n  {\r\n    title: '创建时间',\r\n    dataIndex: 'createTime',\r\n    key: 'createTime',\r\n    width: 180\r\n  },\r\n  {\r\n    title: '更新时间',\r\n    dataIndex: 'updateTime',\r\n    key: 'updateTime',\r\n    width: 180\r\n  },\r\n  {\r\n    title: '操作',\r\n    key: 'operation',\r\n    fixed: 'right',\r\n    width: 120\r\n  }\r\n];\r\n\r\n// 处理搜索\r\nconst handleSearch = () => {\r\n  console.log('搜索条件:', {\r\n    keyword: searchKeyword.value\r\n  });\r\n  // 这里应该调用API获取数据\r\n};\r\n\r\n// 处理重置\r\nconst handleReset = () => {\r\n  searchKeyword.value = '';\r\n};\r\n\r\n// 处理表格分页变化\r\nconst handleTableChange = (pagination, filters, sorter) => {\r\n  console.log('分页变化:', pagination);\r\n  // 这里应该根据分页信息重新获取数据\r\n};\r\n\r\n// 新增状态\r\nconst handleAddStatus = () => {\r\n  console.log('新增状态');\r\n  // 这里应该打开新增状态的模态框\r\n};\r\n\r\n// 处理编辑操作\r\nconst handleEdit = (id) => {\r\n  console.log('编辑状态:', id);\r\n  // 这里应该打开编辑状态的模态框\r\n};\r\n\r\n// 处理删除操作\r\nconst handleDelete = (id) => {\r\n  console.log('删除状态:', id);\r\n  // 这里应该显示确认删除的模态框，然后调用API删除状态\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.asset-status-list-container {\r\n  padding: 24px;\r\n}\r\n\r\n.page-header {\r\n  margin-bottom: 24px;\r\n}\r\n\r\n.page-header h1 {\r\n  margin: 0 0 8px 0;\r\n  font-size: 24px;\r\n  font-weight: 600;\r\n}\r\n\r\n.page-header p {\r\n  margin: 0;\r\n  color: rgba(0, 0, 0, 0.45);\r\n}\r\n\r\n.search-card {\r\n  margin-bottom: 16px;\r\n  padding: 16px;\r\n}\r\n\r\n.action-bar {\r\n  margin-bottom: 16px;\r\n}\r\n\r\n.table-card {\r\n  overflow: hidden;\r\n}\r\n\r\n.color-sample {\r\n  display: inline-block;\r\n  width: 20px;\r\n  height: 20px;\r\n  border-radius: 50%;\r\n  border: 1px solid #d9d9d9;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}