{"ast":null,"code":"import { ref, computed, watch } from 'vue';\nimport { message } from 'ant-design-vue';\nimport { softwareAssetApi } from '@/api/softwareAsset';\nimport { formatDateTime } from '@/utils/date';\n\n// Props\n\nexport default {\n  __name: 'SoftwareAssetDetail',\n  props: {\n    visible: {\n      type: Boolean,\n      default: false\n    },\n    assetData: {\n      type: Object,\n      default: null\n    }\n  },\n  emits: ['update:visible', 'edit'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const props = __props;\n\n    // Emits\n    const emit = __emit;\n\n    // 响应式数据\n    const activeTab = ref('basic');\n    const licenseHistory = ref([]);\n    const versionHistory = ref([]);\n    const licenseHistoryLoading = ref(false);\n    const versionHistoryLoading = ref(false);\n\n    // 表格列配置\n    const serverColumns = [{\n      title: '服务器主机名/IP',\n      dataIndex: 'hostname',\n      key: 'hostname',\n      width: 200\n    }, {\n      title: '描述',\n      dataIndex: 'description',\n      key: 'description'\n    }];\n    const licenseHistoryColumns = [{\n      title: '更新时间',\n      dataIndex: 'update_time',\n      key: 'update_time',\n      width: 180,\n      customRender: ({\n        text\n      }) => formatDateTime(text)\n    }, {\n      title: '更新方式',\n      dataIndex: 'update_method',\n      key: 'update_method',\n      width: 100\n    }, {\n      title: '更新前许可证类型',\n      dataIndex: 'old_license_type',\n      key: 'old_license_type',\n      width: 120\n    }, {\n      title: '更新后许可证类型',\n      dataIndex: 'new_license_type',\n      key: 'new_license_type',\n      width: 120\n    }, {\n      title: '更新前许可证期限',\n      key: 'old_license_period',\n      width: 200,\n      customRender: ({\n        record\n      }) => `${record.old_license_start_date} ~ ${record.old_license_end_date}`\n    }, {\n      title: '更新后许可证期限',\n      key: 'new_license_period',\n      width: 200,\n      customRender: ({\n        record\n      }) => `${record.new_license_start_date} ~ ${record.new_license_end_date}`\n    }];\n    const versionHistoryColumns = [{\n      title: '更新时间',\n      dataIndex: 'update_time',\n      key: 'update_time',\n      width: 180,\n      customRender: ({\n        text\n      }) => formatDateTime(text)\n    }, {\n      title: '更新前版本',\n      dataIndex: 'old_version',\n      key: 'old_version',\n      width: 150\n    }, {\n      title: '更新后版本',\n      dataIndex: 'new_version',\n      key: 'new_version',\n      width: 150\n    }, {\n      title: '更新说明',\n      dataIndex: 'update_notes',\n      key: 'update_notes'\n    }];\n\n    // 计算属性\n    const dialogVisible = computed({\n      get: () => props.visible,\n      set: value => emit('update:visible', value)\n    });\n    const deploymentServerList = computed(() => {\n      if (!props.assetData?.deployment_servers) return [];\n      return props.assetData.deployment_servers;\n    });\n\n    // 方法\n    const getSoftwareTypeText = type => {\n      const typeMap = {\n        'system': '系统软件',\n        'application': '应用软件',\n        'development': '开发工具',\n        'database': '数据库',\n        'security': '安全软件',\n        'other': '其他'\n      };\n      return typeMap[type] || type;\n    };\n    const getSoftwareTypeColor = type => {\n      const colorMap = {\n        'system': 'blue',\n        'application': 'green',\n        'development': 'orange',\n        'database': 'purple',\n        'security': 'red',\n        'other': 'default'\n      };\n      return colorMap[type] || 'default';\n    };\n    const getAssetStatusText = status => {\n      const statusMap = {\n        'active': '激活',\n        'inactive': '未激活',\n        'expired': '过期',\n        'retired': '退役'\n      };\n      return statusMap[status] || status;\n    };\n    const getAssetStatusColor = status => {\n      const colorMap = {\n        'active': 'green',\n        'inactive': 'orange',\n        'expired': 'red',\n        'retired': 'default'\n      };\n      return colorMap[status] || 'default';\n    };\n    const getLicenseTypeText = type => {\n      const typeMap = {\n        'perpetual': '永久许可',\n        'subscription': '订阅许可',\n        'trial': '试用许可',\n        'open_source': '开源许可'\n      };\n      return typeMap[type] || type;\n    };\n    const getLicenseTypeColor = type => {\n      const colorMap = {\n        'perpetual': 'green',\n        'subscription': 'blue',\n        'trial': 'orange',\n        'open_source': 'purple'\n      };\n      return colorMap[type] || 'default';\n    };\n    const getLicenseStatusText = status => {\n      const statusMap = {\n        'active': '有效',\n        'expired': '已过期',\n        'near_expired': '即将过期'\n      };\n      return statusMap[status] || status;\n    };\n    const getLicenseStatusColor = status => {\n      const colorMap = {\n        'active': 'green',\n        'expired': 'red',\n        'near_expired': 'orange'\n      };\n      return colorMap[status] || 'default';\n    };\n    const getRemainingDaysClass = days => {\n      if (days <= 30) return 'text-danger';\n      if (days <= 90) return 'text-warning';\n      return 'text-success';\n    };\n    const loadLicenseHistory = async () => {\n      if (!props.assetData?.id) return;\n      licenseHistoryLoading.value = true;\n      try {\n        const response = await softwareAssetApi.getLicenseHistory(props.assetData.id);\n        licenseHistory.value = response.data || [];\n      } catch (error) {\n        console.error('Load license history error:', error);\n        message.error('获取许可证更新记录失败');\n      } finally {\n        licenseHistoryLoading.value = false;\n      }\n    };\n    const loadVersionHistory = async () => {\n      if (!props.assetData?.id) return;\n      versionHistoryLoading.value = true;\n      try {\n        const response = await softwareAssetApi.getVersionHistory(props.assetData.id);\n        versionHistory.value = response.data || [];\n      } catch (error) {\n        console.error('Load version history error:', error);\n        message.error('获取版本更新记录失败');\n      } finally {\n        versionHistoryLoading.value = false;\n      }\n    };\n    const handleEdit = () => {\n      emit('edit', props.assetData);\n    };\n    const handleClose = () => {\n      dialogVisible.value = false;\n    };\n\n    // 监听器\n    watch(() => props.visible, newVal => {\n      if (newVal && props.assetData) {\n        activeTab.value = 'basic';\n        // 延迟加载历史记录，避免初始加载时的性能问题\n        setTimeout(() => {\n          if (activeTab.value === 'license-history') {\n            loadLicenseHistory();\n          } else if (activeTab.value === 'version-history') {\n            loadVersionHistory();\n          }\n        }, 100);\n      }\n    });\n    watch(activeTab, newTab => {\n      if (newTab === 'license-history' && licenseHistory.value.length === 0) {\n        loadLicenseHistory();\n      } else if (newTab === 'version-history' && versionHistory.value.length === 0) {\n        loadVersionHistory();\n      }\n    });\n    const __returned__ = {\n      props,\n      emit,\n      activeTab,\n      licenseHistory,\n      versionHistory,\n      licenseHistoryLoading,\n      versionHistoryLoading,\n      serverColumns,\n      licenseHistoryColumns,\n      versionHistoryColumns,\n      dialogVisible,\n      deploymentServerList,\n      getSoftwareTypeText,\n      getSoftwareTypeColor,\n      getAssetStatusText,\n      getAssetStatusColor,\n      getLicenseTypeText,\n      getLicenseTypeColor,\n      getLicenseStatusText,\n      getLicenseStatusColor,\n      getRemainingDaysClass,\n      loadLicenseHistory,\n      loadVersionHistory,\n      handleEdit,\n      handleClose,\n      ref,\n      computed,\n      watch,\n      get message() {\n        return message;\n      },\n      get softwareAssetApi() {\n        return softwareAssetApi;\n      },\n      get formatDateTime() {\n        return formatDateTime;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","watch","message","softwareAssetApi","formatDateTime","props","__props","emit","__emit","activeTab","licenseHistory","versionHistory","licenseHistoryLoading","versionHistoryLoading","serverColumns","title","dataIndex","key","width","licenseHistoryColumns","customRender","text","record","old_license_start_date","old_license_end_date","new_license_start_date","new_license_end_date","versionHistoryColumns","dialogVisible","get","visible","set","value","deploymentServerList","assetData","deployment_servers","getSoftwareTypeText","type","typeMap","getSoftwareTypeColor","colorMap","getAssetStatusText","status","statusMap","getAssetStatusColor","getLicenseTypeText","getLicenseTypeColor","getLicenseStatusText","getLicenseStatusColor","getRemainingDaysClass","days","loadLicenseHistory","id","response","getLicenseHistory","data","error","console","loadVersionHistory","getVersionHistory","handleEdit","handleClose","newVal","setTimeout","newTab","length"],"sources":["E:/A_project/yuanchi/AIops/frontend/src/components/business/SoftwareAssetDetail.vue"],"sourcesContent":["<template>\r\n  <a-modal\r\n    v-model:open=\"dialogVisible\"\r\n    title=\"软件资产详情\"\r\n    width=\"900px\"\r\n    :before-close=\"handleClose\"\r\n  >\r\n    <div v-if=\"assetData\" class=\"detail-container\">\r\n      <a-tabs v-model:activeKey=\"activeTab\">\r\n        <!-- 基本信息 -->\r\n        <a-tab-pane tab=\"基本1信息\" key=\"basic\">\r\n          <a-descriptions :column=\"2\" bordered>\r\n            <a-descriptions-item label=\"软件名称\">\r\n              <a-tag color=\"blue\">{{ assetData.software_name }}</a-tag>\r\n            </a-descriptions-item>\r\n            <a-descriptions-item label=\"软件版本\">\r\n              {{ assetData.version }}\r\n            </a-descriptions-item>\r\n            <a-descriptions-item label=\"软件类型\">\r\n              <a-tag :color=\"getSoftwareTypeColor(assetData.software_type)\">\r\n                {{ getSoftwareTypeText(assetData.software_type) }}\r\n              </a-tag>\r\n            </a-descriptions-item>\r\n            <a-descriptions-item label=\"资产责任人\">\r\n              {{ assetData.asset_owner }}\r\n            </a-descriptions-item>\r\n            <a-descriptions-item label=\"供应商\">\r\n              {{ assetData.supplier_name }}\r\n            </a-descriptions-item>\r\n            <a-descriptions-item label=\"供应商联系人\">\r\n              {{ assetData.supplier_contact || '-' }}\r\n            </a-descriptions-item>\r\n            <a-descriptions-item label=\"采购日期\">\r\n              {{ assetData.purchase_date }}\r\n            </a-descriptions-item>\r\n            <a-descriptions-item label=\"资产状态\">\r\n              <a-tag :color=\"getAssetStatusColor(assetData.asset_status)\">\r\n                {{ getAssetStatusText(assetData.asset_status) }}\r\n              </a-tag>\r\n            </a-descriptions-item>\r\n          </a-descriptions>\r\n        </a-tab-pane>\r\n        \r\n        <!-- 许可证信息 -->\r\n        <a-tab-pane tab=\"许可证信息\" key=\"license\">\r\n          <a-descriptions :column=\"2\" bordered>\r\n            <a-descriptions-item label=\"许可证类型\">\r\n              <a-tag :color=\"getLicenseTypeColor(assetData.license_type)\">\r\n                {{ getLicenseTypeText(assetData.license_type) }}\r\n              </a-tag>\r\n            </a-descriptions-item>\r\n            <a-descriptions-item label=\"许可证数量\">\r\n              {{ assetData.license_count }}\r\n            </a-descriptions-item>\r\n            <a-descriptions-item label=\"许可证开始日期\">\r\n              {{ assetData.license_start_date }}\r\n            </a-descriptions-item>\r\n            <a-descriptions-item label=\"许可证结束日期\">\r\n              {{ assetData.license_end_date }}\r\n            </a-descriptions-item>\r\n            <a-descriptions-item label=\"许可证状态\">\r\n              <a-tag :color=\"getLicenseStatusColor(assetData.license_status)\">\r\n                {{ getLicenseStatusText(assetData.license_status) }}\r\n              </a-tag>\r\n            </a-descriptions-item>\r\n            <a-descriptions-item label=\"剩余有效天数\" v-if=\"assetData.license_status !== 'expired'\">\r\n              <span :class=\"getRemainingDaysClass(assetData.license_remaining_days)\">\r\n                {{ assetData.license_remaining_days }}天\r\n              </span>\r\n            </a-descriptions-item>\r\n            <a-descriptions-item label=\"许可证密钥\" :span=\"2\" v-if=\"assetData.license_key\">\r\n              <a-typography-text code copyable>\r\n                {{ assetData.license_key }}\r\n              </a-typography-text>\r\n            </a-descriptions-item>\r\n          </a-descriptions>\r\n        </a-tab-pane>\r\n        \r\n        <!-- 部署信息 -->\r\n        <a-tab-pane tab=\"部署信息\" key=\"deployment\">\r\n          <a-descriptions :column=\"2\" bordered>\r\n            <a-descriptions-item label=\"安装路径\">\r\n              {{ assetData.installation_path || '-' }}\r\n            </a-descriptions-item>\r\n            <a-descriptions-item label=\"配置文件路径\">\r\n              {{ assetData.config_path || '-' }}\r\n            </a-descriptions-item>\r\n            <a-descriptions-item label=\"备注\" :span=\"2\">\r\n              {{ assetData.notes || '-' }}\r\n            </a-descriptions-item>\r\n          </a-descriptions>\r\n          \r\n          <!-- 部署服务器 -->\r\n          <div class=\"deployment-section\">\r\n            <h4>部署服务器</h4>\r\n            <a-table\r\n              :data-source=\"deploymentServerList\"\r\n              :columns=\"serverColumns\"\r\n              bordered\r\n              :pagination=\"false\"\r\n              :locale=\"{ emptyText: '暂无部署服务器' }\"\r\n            />\r\n          </div>\r\n        </a-tab-pane>\r\n        \r\n        <!-- 许可证更新记录 -->\r\n        <a-tab-pane tab=\"许可证更新记录\" key=\"license-history\">\r\n          <div class=\"history-section\">\r\n            <div class=\"history-header\">\r\n              <h4>许可证更新记录</h4>\r\n              <a-button type=\"primary\" size=\"small\" @click=\"loadLicenseHistory\">\r\n                刷新记录\r\n              </a-button>\r\n            </div>\r\n            \r\n            <a-table\r\n              :data-source=\"licenseHistory\"\r\n              :columns=\"licenseHistoryColumns\"\r\n              bordered\r\n              :loading=\"licenseHistoryLoading\"\r\n              :pagination=\"false\"\r\n              :locale=\"{ emptyText: '暂无更新记录' }\"\r\n            />\r\n          </div>\r\n        </a-tab-pane>\r\n        \r\n        <!-- 版本更新记录 -->\r\n        <a-tab-pane tab=\"版本更新记录\" key=\"version-history\">\r\n          <div class=\"history-section\">\r\n            <div class=\"history-header\">\r\n              <h4>版本更新记录</h4>\r\n              <a-button type=\"primary\" size=\"small\" @click=\"loadVersionHistory\">\r\n                刷新记录\r\n              </a-button>\r\n            </div>\r\n            \r\n            <a-table\r\n              :data-source=\"versionHistory\"\r\n              :columns=\"versionHistoryColumns\"\r\n              bordered\r\n              :loading=\"versionHistoryLoading\"\r\n              :pagination=\"false\"\r\n              :locale=\"{ emptyText: '暂无更新记录' }\"\r\n            />\r\n          </div>\r\n        </a-tab-pane>\r\n      </a-tabs>\r\n    </div>\r\n    \r\n    <template #footer>\r\n      <div class=\"dialog-footer\">\r\n        <a-button @click=\"handleClose\">关闭</a-button>\r\n        <a-button type=\"primary\" @click=\"handleEdit\">\r\n          编辑\r\n        </a-button>\r\n      </div>\r\n    </template>\r\n  </a-modal>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, watch } from 'vue'\r\nimport { message } from 'ant-design-vue'\r\nimport { softwareAssetApi } from '@/api/softwareAsset'\r\nimport { formatDateTime } from '@/utils/date'\r\n\r\n// Props\r\nconst props = defineProps({\r\n  visible: {\r\n    type: Boolean,\r\n    default: false\r\n  },\r\n  assetData: {\r\n    type: Object,\r\n    default: null\r\n  }\r\n})\r\n\r\n// Emits\r\nconst emit = defineEmits(['update:visible', 'edit'])\r\n\r\n// 响应式数据\r\nconst activeTab = ref('basic')\r\nconst licenseHistory = ref([])\r\nconst versionHistory = ref([])\r\nconst licenseHistoryLoading = ref(false)\r\nconst versionHistoryLoading = ref(false)\r\n\r\n// 表格列配置\r\nconst serverColumns = [\r\n  {\r\n    title: '服务器主机名/IP',\r\n    dataIndex: 'hostname',\r\n    key: 'hostname',\r\n    width: 200\r\n  },\r\n  {\r\n    title: '描述',\r\n    dataIndex: 'description',\r\n    key: 'description'\r\n  }\r\n]\r\n\r\nconst licenseHistoryColumns = [\r\n  {\r\n    title: '更新时间',\r\n    dataIndex: 'update_time',\r\n    key: 'update_time',\r\n    width: 180,\r\n    customRender: ({ text }) => formatDateTime(text)\r\n  },\r\n  {\r\n    title: '更新方式',\r\n    dataIndex: 'update_method',\r\n    key: 'update_method',\r\n    width: 100\r\n  },\r\n  {\r\n    title: '更新前许可证类型',\r\n    dataIndex: 'old_license_type',\r\n    key: 'old_license_type',\r\n    width: 120\r\n  },\r\n  {\r\n    title: '更新后许可证类型',\r\n    dataIndex: 'new_license_type',\r\n    key: 'new_license_type',\r\n    width: 120\r\n  },\r\n  {\r\n    title: '更新前许可证期限',\r\n    key: 'old_license_period',\r\n    width: 200,\r\n    customRender: ({ record }) => `${record.old_license_start_date} ~ ${record.old_license_end_date}`\r\n  },\r\n  {\r\n    title: '更新后许可证期限',\r\n    key: 'new_license_period',\r\n    width: 200,\r\n    customRender: ({ record }) => `${record.new_license_start_date} ~ ${record.new_license_end_date}`\r\n  }\r\n]\r\n\r\nconst versionHistoryColumns = [\r\n  {\r\n    title: '更新时间',\r\n    dataIndex: 'update_time',\r\n    key: 'update_time',\r\n    width: 180,\r\n    customRender: ({ text }) => formatDateTime(text)\r\n  },\r\n  {\r\n    title: '更新前版本',\r\n    dataIndex: 'old_version',\r\n    key: 'old_version',\r\n    width: 150\r\n  },\r\n  {\r\n    title: '更新后版本',\r\n    dataIndex: 'new_version',\r\n    key: 'new_version',\r\n    width: 150\r\n  },\r\n  {\r\n    title: '更新说明',\r\n    dataIndex: 'update_notes',\r\n    key: 'update_notes'\r\n  }\r\n]\r\n\r\n// 计算属性\r\nconst dialogVisible = computed({\r\n  get: () => props.visible,\r\n  set: (value) => emit('update:visible', value)\r\n})\r\n\r\nconst deploymentServerList = computed(() => {\r\n  if (!props.assetData?.deployment_servers) return []\r\n  return props.assetData.deployment_servers\r\n})\r\n\r\n// 方法\r\nconst getSoftwareTypeText = (type) => {\r\n  const typeMap = {\r\n    'system': '系统软件',\r\n    'application': '应用软件',\r\n    'development': '开发工具',\r\n    'database': '数据库',\r\n    'security': '安全软件',\r\n    'other': '其他'\r\n  }\r\n  return typeMap[type] || type\r\n}\r\n\r\nconst getSoftwareTypeColor = (type) => {\r\n  const colorMap = {\r\n    'system': 'blue',\r\n    'application': 'green',\r\n    'development': 'orange',\r\n    'database': 'purple',\r\n    'security': 'red',\r\n    'other': 'default'\r\n  }\r\n  return colorMap[type] || 'default'\r\n}\r\n\r\nconst getAssetStatusText = (status) => {\r\n  const statusMap = {\r\n    'active': '激活',\r\n    'inactive': '未激活',\r\n    'expired': '过期',\r\n    'retired': '退役'\r\n  }\r\n  return statusMap[status] || status\r\n}\r\n\r\nconst getAssetStatusColor = (status) => {\r\n  const colorMap = {\r\n    'active': 'green',\r\n    'inactive': 'orange',\r\n    'expired': 'red',\r\n    'retired': 'default'\r\n  }\r\n  return colorMap[status] || 'default'\r\n}\r\n\r\nconst getLicenseTypeText = (type) => {\r\n  const typeMap = {\r\n    'perpetual': '永久许可',\r\n    'subscription': '订阅许可',\r\n    'trial': '试用许可',\r\n    'open_source': '开源许可'\r\n  }\r\n  return typeMap[type] || type\r\n}\r\n\r\nconst getLicenseTypeColor = (type) => {\r\n  const colorMap = {\r\n    'perpetual': 'green',\r\n    'subscription': 'blue',\r\n    'trial': 'orange',\r\n    'open_source': 'purple'\r\n  }\r\n  return colorMap[type] || 'default'\r\n}\r\n\r\nconst getLicenseStatusText = (status) => {\r\n  const statusMap = {\r\n    'active': '有效',\r\n    'expired': '已过期',\r\n    'near_expired': '即将过期'\r\n  }\r\n  return statusMap[status] || status\r\n}\r\n\r\nconst getLicenseStatusColor = (status) => {\r\n  const colorMap = {\r\n    'active': 'green',\r\n    'expired': 'red',\r\n    'near_expired': 'orange'\r\n  }\r\n  return colorMap[status] || 'default'\r\n}\r\n\r\nconst getRemainingDaysClass = (days) => {\r\n  if (days <= 30) return 'text-danger'\r\n  if (days <= 90) return 'text-warning'\r\n  return 'text-success'\r\n}\r\n\r\nconst loadLicenseHistory = async () => {\r\n  if (!props.assetData?.id) return\r\n  \r\n  licenseHistoryLoading.value = true\r\n  try {\r\n    const response = await softwareAssetApi.getLicenseHistory(props.assetData.id)\r\n    licenseHistory.value = response.data || []\r\n  } catch (error) {\r\n    console.error('Load license history error:', error)\r\n    message.error('获取许可证更新记录失败')\r\n  } finally {\r\n    licenseHistoryLoading.value = false\r\n  }\r\n}\r\n\r\nconst loadVersionHistory = async () => {\r\n  if (!props.assetData?.id) return\r\n  \r\n  versionHistoryLoading.value = true\r\n  try {\r\n    const response = await softwareAssetApi.getVersionHistory(props.assetData.id)\r\n    versionHistory.value = response.data || []\r\n  } catch (error) {\r\n    console.error('Load version history error:', error)\r\n    message.error('获取版本更新记录失败')\r\n  } finally {\r\n    versionHistoryLoading.value = false\r\n  }\r\n}\r\n\r\nconst handleEdit = () => {\r\n  emit('edit', props.assetData)\r\n}\r\n\r\nconst handleClose = () => {\r\n  dialogVisible.value = false\r\n}\r\n\r\n// 监听器\r\nwatch(\r\n  () => props.visible,\r\n  (newVal) => {\r\n    if (newVal && props.assetData) {\r\n      activeTab.value = 'basic'\r\n      // 延迟加载历史记录，避免初始加载时的性能问题\r\n      setTimeout(() => {\r\n        if (activeTab.value === 'license-history') {\r\n          loadLicenseHistory()\r\n        } else if (activeTab.value === 'version-history') {\r\n          loadVersionHistory()\r\n        }\r\n      }, 100)\r\n    }\r\n  }\r\n)\r\n\r\nwatch(activeTab, (newTab) => {\r\n  if (newTab === 'license-history' && licenseHistory.value.length === 0) {\r\n    loadLicenseHistory()\r\n  } else if (newTab === 'version-history' && versionHistory.value.length === 0) {\r\n    loadVersionHistory()\r\n  }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.detail-container {\r\n  max-height: 600px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.deployment-section {\r\n  margin-top: 20px;\r\n}\r\n\r\n.deployment-section h4 {\r\n  margin-bottom: 15px;\r\n  color: #303133;\r\n}\r\n\r\n.history-section {\r\n  padding: 10px 0;\r\n}\r\n\r\n.history-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.history-header h4 {\r\n  margin: 0;\r\n  color: #303133;\r\n}\r\n\r\n.text-danger {\r\n  color: #f56c6c;\r\n  font-weight: bold;\r\n}\r\n\r\n.text-warning {\r\n  color: #e6a23c;\r\n  font-weight: bold;\r\n}\r\n\r\n.text-success {\r\n  color: #67c23a;\r\n}\r\n\r\n.dialog-footer {\r\n  text-align: right;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}