{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { ref, reactive, onMounted, computed, nextTick } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport { message, Modal } from 'ant-design-vue';\nimport dayjs from 'dayjs';\nimport { businessAPI } from '@/api/businessManagement';\nimport { ipAPI } from '@/api/ipManagement';\nimport { ArrowLeftOutlined, AppstoreOutlined, EditOutlined, ReloadOutlined, TeamOutlined, UserOutlined, CalendarOutlined, LinkOutlined, GlobalOutlined, PlusOutlined, EyeOutlined, DeleteOutlined, ExportOutlined, NodeIndexOutlined, CloseOutlined, DatabaseOutlined, ThunderboltOutlined, MessageOutlined, FolderOutlined, SettingOutlined } from '@ant-design/icons-vue';\nexport default {\n  __name: 'BusinessDetail',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const route = useRoute();\n    const router = useRouter();\n\n    // 响应式数据\n    const businessInfo = ref({});\n    const relatedIPs = ref([]);\n    const availableIPs = ref([]);\n    const loading = ref(false);\n    const ipLoading = ref(false);\n    const topologyLoading = ref(false);\n    const addIPModalVisible = ref(false);\n    const editModalVisible = ref(false);\n    const editFormRef = ref();\n\n    // 表单数据\n    const ipForm = reactive({\n      ip_id: undefined,\n      description: '',\n      service_type: 'web'\n    });\n\n    // 拓扑图相关数据\n    const showConnections = ref(true);\n    const customConnections = ref([]);\n    const isConnecting = ref(false);\n    const connectingFrom = ref(null);\n    const tempConnection = ref(null);\n    const mousePosition = ref({\n      x: 0,\n      y: 0\n    });\n    const isDragging = ref(false);\n    const dragTarget = ref(null);\n    const dragOffset = ref({\n      x: 0,\n      y: 0\n    });\n    const canvasIPs = ref([]); // 画布中的IP节点\n\n    const editForm = reactive({\n      name: '',\n      responsible_person: '',\n      online_date: null,\n      access_url: '',\n      function_purpose: '',\n      description: ''\n    });\n\n    // 编辑表单验证规则\n    const editFormRules = {\n      name: [{\n        required: true,\n        message: '请输入业务名称',\n        trigger: 'blur'\n      }],\n      responsible_person: [{\n        required: true,\n        message: '请输入责任人',\n        trigger: 'blur'\n      }],\n      online_date: [{\n        required: true,\n        message: '请选择上线日期',\n        trigger: 'change'\n      }],\n      access_url: [{\n        validator: (rule, value) => {\n          if (!value || value.trim() === '') {\n            return Promise.resolve();\n          }\n          return Promise.resolve();\n        },\n        trigger: 'blur'\n      }]\n    };\n\n    // IP列表表格列配置\n    const ipColumns = [{\n      title: 'IP地址',\n      dataIndex: 'ip_address',\n      key: 'ip_address',\n      width: 150\n    }, {\n      title: '主机名',\n      dataIndex: 'hostname',\n      key: 'hostname',\n      width: 150\n    }, {\n      title: '状态',\n      dataIndex: 'status',\n      key: 'status',\n      width: 100\n    }, {\n      title: '服务类型',\n      dataIndex: 'service_type',\n      key: 'service_type',\n      width: 120\n    }, {\n      title: 'Ping状态',\n      dataIndex: 'ping_status',\n      key: 'ping_status',\n      width: 120\n    }, {\n      title: '最后检测',\n      dataIndex: 'last_seen',\n      key: 'last_seen',\n      width: 150,\n      customRender: ({\n        text\n      }) => formatDate(text)\n    }, {\n      title: '关联说明',\n      dataIndex: 'description',\n      key: 'description',\n      ellipsis: true\n    }, {\n      title: '操作',\n      dataIndex: 'action',\n      key: 'action',\n      width: 100,\n      fixed: 'right'\n    }];\n\n    // 方法\n    const fetchBusinessDetail = async () => {\n      loading.value = true;\n      try {\n        const response = await businessAPI.getBusinessDetail(route.params.id);\n        businessInfo.value = response.data;\n\n        // 确保业务中心节点的坐标是数值类型\n        if (!businessInfo.value.x || typeof businessInfo.value.x !== 'number') {\n          businessInfo.value.x = 400; // 默认X坐标\n        }\n        if (!businessInfo.value.y || typeof businessInfo.value.y !== 'number') {\n          businessInfo.value.y = 260; // 默认Y坐标\n        }\n      } catch (error) {\n        message.error('获取业务详情失败');\n      } finally {\n        loading.value = false;\n      }\n    };\n    const fetchRelatedIPs = async () => {\n      ipLoading.value = true;\n      try {\n        const response = await businessAPI.getBusinessIPs(route.params.id);\n        relatedIPs.value = response.data || [];\n\n        // 数据加载完成后，重置IP节点位置\n        nextTick(() => {\n          resetNodePositions();\n        });\n      } catch (error) {\n        message.error('获取关联IP失败');\n      } finally {\n        ipLoading.value = false;\n      }\n    };\n    const fetchAvailableIPs = async (searchKeyword = '') => {\n      try {\n        const response = await ipAPI.getIPList({\n          search: searchKeyword,\n          page_size: 100 // 获取更多IP供选择\n        });\n        let allIPs = response.data.results || response.data || [];\n\n        // 过滤掉已经关联到当前业务的IP\n        const relatedIPIds = relatedIPs.value.map(ip => ip.ip_address);\n        availableIPs.value = allIPs.filter(ip => !relatedIPIds.includes(ip.ip_address));\n      } catch (error) {\n        console.error('获取可用IP列表失败:', error);\n        message.error('获取可用IP列表失败');\n      }\n    };\n    const handleIPSearch = value => {\n      fetchAvailableIPs(value);\n    };\n    const goBack = () => {\n      router.go(-1);\n    };\n    const editBusiness = () => {\n      // 将当前业务信息填充到编辑表单\n      Object.assign(editForm, {\n        name: businessInfo.value.name || '',\n        responsible_person: businessInfo.value.responsible_person || '',\n        online_date: businessInfo.value.online_date ? dayjs(businessInfo.value.online_date) : null,\n        access_url: businessInfo.value.access_url || '',\n        description: businessInfo.value.description || ''\n      });\n      editModalVisible.value = true;\n    };\n    const refreshData = () => {\n      fetchBusinessDetail();\n      fetchRelatedIPs();\n    };\n    const refreshIPs = () => {\n      fetchRelatedIPs();\n    };\n    const refreshTopology = () => {\n      topologyLoading.value = true;\n      // 模拟拓扑图刷新\n      setTimeout(() => {\n        topologyLoading.value = false;\n        message.success('拓扑图已刷新');\n      }, 1500);\n    };\n    const exportTopology = () => {\n      message.info('拓扑图导出功能开发中...');\n    };\n    const showAddIPModal = () => {\n      fetchAvailableIPs();\n      addIPModalVisible.value = true;\n    };\n    const handleAddIP = async () => {\n      if (!ipForm.ip_id) {\n        message.error('请选择要关联的IP');\n        return;\n      }\n      try {\n        // 找到选中的IP信息\n        const selectedIP = availableIPs.value.find(ip => ip.id === ipForm.ip_id);\n        if (!selectedIP) {\n          message.error('选中的IP信息无效');\n          return;\n        }\n\n        // 构造后端所需的数据格式\n        const submitData = {\n          ip_address: selectedIP.ip_address,\n          hostname: selectedIP.hostname || '',\n          description: ipForm.description || '',\n          service_type: ipForm.service_type || 'web',\n          status: 'unknown'\n        };\n        await businessAPI.addBusinessIP(route.params.id, submitData);\n        message.success('IP关联成功');\n        addIPModalVisible.value = false;\n        Object.assign(ipForm, {\n          ip_id: undefined,\n          description: '',\n          service_type: 'web'\n        });\n        fetchRelatedIPs();\n      } catch (error) {\n        console.error('IP关联失败:', error);\n        message.error('IP关联失败');\n      }\n    };\n    const handleCancelAddIP = () => {\n      addIPModalVisible.value = false;\n      Object.assign(ipForm, {\n        ip_id: undefined,\n        description: '',\n        service_type: 'web'\n      });\n    };\n    const handleEditSubmit = async () => {\n      try {\n        await editFormRef.value.validate();\n        const submitData = {\n          name: editForm.name,\n          responsible_person: editForm.responsible_person,\n          online_date: editForm.online_date ? dayjs(editForm.online_date).format('YYYY-MM-DD') : null,\n          access_url: editForm.access_url && editForm.access_url.trim() ? editForm.access_url.trim() : null,\n          function_purpose: editForm.function_purpose || '',\n          description: editForm.description || ''\n        };\n        await businessAPI.updateBusiness(route.params.id, submitData);\n        message.success('业务更新成功');\n        editModalVisible.value = false;\n        fetchBusinessDetail(); // 重新获取业务详情\n      } catch (error) {\n        if (error.errorFields) {\n          message.error('请检查表单输入');\n        } else {\n          message.error('业务更新失败');\n        }\n      }\n    };\n    const handleEditCancel = () => {\n      editModalVisible.value = false;\n      editFormRef.value?.resetFields();\n    };\n    const removeIP = record => {\n      Modal.confirm({\n        title: '确认移除',\n        content: `确定要移除IP \"${record.ip_address}\" 的关联吗？`,\n        okText: '确定',\n        cancelText: '取消',\n        onOk: async () => {\n          try {\n            await businessAPI.removeBusinessIP(route.params.id, record.id);\n            message.success('移除成功');\n            fetchRelatedIPs();\n          } catch (error) {\n            message.error('移除失败');\n          }\n        }\n      });\n    };\n    const viewIPDetail = record => {\n      router.push({\n        name: 'ipManagement',\n        query: {\n          highlight: record.ip_address\n        }\n      });\n    };\n    const openUrl = url => {\n      if (url) {\n        window.open(url, '_blank');\n      }\n    };\n    const formatDate = date => {\n      return date ? dayjs(date).format('YYYY-MM-DD HH:mm:ss') : '-';\n    };\n    const getStatusColor = status => {\n      const colors = {\n        'active': 'green',\n        'inactive': 'red',\n        'pending': 'orange',\n        'unknown': 'default'\n      };\n      return colors[status] || 'default';\n    };\n    const getStatusText = status => {\n      const texts = {\n        'active': '活跃',\n        'inactive': '非活跃',\n        'pending': '待确认',\n        'unknown': '未知'\n      };\n      return texts[status] || '未知';\n    };\n    const getPingStatusText = status => {\n      const texts = {\n        'online': '在线',\n        'offline': '离线',\n        'timeout': '超时'\n      };\n      return texts[status] || '未知';\n    };\n    const getServiceTypeText = serviceType => {\n      const texts = {\n        'web': 'Web服务',\n        'database': '数据库',\n        'cache': '缓存服务',\n        'message_queue': '消息队列',\n        'file_storage': '文件存储',\n        'monitoring': '监控服务',\n        'other': '其他'\n      };\n      return texts[serviceType] || '其他';\n    };\n    const filterOption = (input, option) => {\n      return option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n    };\n\n    // 计算节点中心点坐标的统一方法\n    const getNodeCenterCoordinates = node => {\n      if (node.type === 'business') {\n        // 业务中心节点：120x80px，中心点偏移60,40\n        return {\n          x: businessInfo.value.x + 60,\n          y: businessInfo.value.y + 40\n        };\n      } else {\n        // IP节点：120x80px，中心点偏移60,40\n        return {\n          x: (node.x || 0) + 60,\n          y: (node.y || 0) + 40\n        };\n      }\n    };\n\n    // 自定义连线相关方法\n    const startConnection = node => {\n      if (isConnecting.value) {\n        // 如果已经在连线模式，完成连线\n        finishConnection(node);\n      } else {\n        // 开始连线\n        isConnecting.value = true;\n        connectingFrom.value = {\n          ...node\n        };\n\n        // 计算起点坐标\n        const centerCoords = getNodeCenterCoordinates(node);\n        connectingFrom.value.x = centerCoords.x;\n        connectingFrom.value.y = centerCoords.y;\n      }\n    };\n    const finishConnection = toNode => {\n      if (!connectingFrom.value || !toNode) return;\n\n      // 不能连接到自己\n      if (connectingFrom.value.type === toNode.type && connectingFrom.value.id === toNode.id) {\n        return;\n      }\n\n      // 计算目标节点的中心点坐标\n      const toCenterCoords = getNodeCenterCoordinates(toNode);\n      const toX = toCenterCoords.x;\n      const toY = toCenterCoords.y;\n\n      // 创建连线\n      const connection = {\n        id: Date.now() + Math.random(),\n        from: {\n          type: connectingFrom.value.type,\n          id: connectingFrom.value.id,\n          name: connectingFrom.value.name,\n          x: connectingFrom.value.x,\n          y: connectingFrom.value.y\n        },\n        to: {\n          type: toNode.type,\n          id: toNode.id,\n          name: toNode.name,\n          x: toX,\n          y: toY\n        }\n      };\n      customConnections.value.push(connection);\n\n      // 重置连线状态\n      isConnecting.value = false;\n      connectingFrom.value = null;\n      tempConnection.value = null;\n      message.success(`已创建从 ${connection.from.name} 到 ${connection.to.name} 的连线`);\n    };\n    const cancelConnection = () => {\n      isConnecting.value = false;\n      connectingFrom.value = null;\n      tempConnection.value = null;\n    };\n    const removeConnection = connectionId => {\n      const index = customConnections.value.findIndex(conn => conn.id === connectionId);\n      if (index > -1) {\n        customConnections.value.splice(index, 1);\n        message.success('连线已删除');\n      }\n    };\n    const clearAllConnections = () => {\n      Modal.confirm({\n        title: '确认清除',\n        content: '确定要清除所有自定义连线吗？',\n        onOk() {\n          customConnections.value = [];\n          message.success('已清除所有自定义连线');\n        }\n      });\n    };\n    const getNodeCenter = node => {\n      return {\n        x: node.x + 60,\n        // 节点宽度的一半\n        y: node.y + 40 // 节点高度的一半\n      };\n    };\n    const onMouseMove = event => {\n      if (isConnecting.value && connectingFrom.value) {\n        const rect = event.currentTarget.getBoundingClientRect();\n        mousePosition.value = {\n          x: event.clientX - rect.left,\n          y: event.clientY - rect.top\n        };\n        tempConnection.value = {\n          from: {\n            x: connectingFrom.value.x,\n            y: connectingFrom.value.y\n          },\n          to: {\n            x: mousePosition.value.x,\n            y: mousePosition.value.y\n          }\n        };\n      }\n    };\n\n    // 获取节点默认位置（围绕中心点排列）\n    const getDefaultNodePosition = index => {\n      // 获取业务中心节点的中心坐标\n      const businessCenter = getNodeCenterCoordinates({\n        type: 'business'\n      });\n      const centerX = businessCenter.x;\n      const centerY = businessCenter.y;\n      const radius = 150; // 围绕中心的半径\n      const totalNodes = relatedIPs.value.length;\n      if (totalNodes === 1) {\n        // 单个节点放在中心右侧\n        return {\n          x: centerX + 120,\n          y: centerY - 40\n        };\n      }\n\n      // 多个节点围绕中心排列\n      const angle = 2 * Math.PI * index / totalNodes;\n      const x = centerX + radius * Math.cos(angle) - 60; // 减去节点宽度的一半\n      const y = centerY + radius * Math.sin(angle) - 40; // 减去节点高度的一半\n\n      return {\n        x: Math.max(0, x),\n        y: Math.max(0, y)\n      };\n    };\n    const resetNodePositions = () => {\n      relatedIPs.value.forEach((ip, index) => {\n        const pos = getDefaultNodePosition(index);\n        ip.x = pos.x;\n        ip.y = pos.y;\n      });\n      message.success('节点位置已重置');\n    };\n\n    // 处理侧边栏节点点击事件\n    const handleSidebarNodeClick = (event, ip) => {\n      // 如果刚刚完成拖拽，不触发连线\n      if (isDragging.value) {\n        return;\n      }\n\n      // 检查是否已在画布中\n      const existsInCanvas = canvasIPs.value.find(canvasIP => canvasIP.id === ip.id);\n      if (existsInCanvas) {\n        message.info('该IP节点已在画布中');\n        return;\n      }\n\n      // 显示IP详情或其他操作\n      console.log('点击侧边栏IP节点:', ip);\n    };\n\n    // 处理画布节点点击事件\n    const handleCanvasNodeClick = (event, ip) => {\n      // 如果刚刚完成拖拽，不触发连线\n      if (isDragging.value) {\n        return;\n      }\n\n      // 触发连线\n      startConnection({\n        type: 'ip',\n        id: ip.id,\n        name: ip.ip_address,\n        x: ip.x,\n        y: ip.y\n      });\n    };\n\n    // 从画布移除IP节点\n    const removeCanvasNode = ipId => {\n      const index = canvasIPs.value.findIndex(ip => ip.id === ipId);\n      if (index !== -1) {\n        canvasIPs.value.splice(index, 1);\n\n        // 移除相关连线\n        customConnections.value = customConnections.value.filter(conn => !(conn.from.id === ipId || conn.to.id === ipId));\n        message.success('已从画布移除IP节点');\n      }\n    };\n\n    // 处理业务节点点击事件\n    const handleBusinessNodeClick = event => {\n      // 如果刚刚完成拖拽，不触发连线\n      if (isDragging.value) {\n        return;\n      }\n\n      // 触发连线\n      startConnection({\n        type: 'business',\n        id: businessInfo.value.id,\n        name: businessInfo.value.name\n      });\n    };\n    const startDrag = (event, ip) => {\n      if (isConnecting.value) return; // 连线模式下不允许拖拽\n\n      isDragging.value = true;\n      dragTarget.value = ip;\n\n      // 获取容器的位置\n      const container = document.querySelector('.main-canvas');\n      if (!container) return;\n      const containerRect = container.getBoundingClientRect();\n\n      // 设置较小的偏移，让节点中心跟随鼠标\n      dragOffset.value = {\n        x: 60,\n        // 节点宽度的一半\n        y: 40 // 节点高度的一半\n      };\n      document.addEventListener('mousemove', onDrag);\n      document.addEventListener('mouseup', stopDrag);\n      event.preventDefault();\n      event.stopPropagation();\n    };\n\n    // 从侧边栏拖拽IP节点到画布\n    const startDragFromSidebar = (event, ip) => {\n      if (isConnecting.value) return; // 连线模式下不允许拖拽\n\n      // 检查IP是否已经在画布中\n      const existingIndex = canvasIPs.value.findIndex(canvasIP => canvasIP.id === ip.id);\n      if (existingIndex !== -1) {\n        message.warning('该IP节点已在画布中');\n        return;\n      }\n\n      // 创建新的画布IP节点\n      const newCanvasIP = {\n        ...ip,\n        x: 100,\n        // 默认位置\n        y: 100\n      };\n      canvasIPs.value.push(newCanvasIP);\n      isDragging.value = true;\n      dragTarget.value = newCanvasIP;\n\n      // 设置较小的偏移，让节点中心跟随鼠标\n      dragOffset.value = {\n        x: 60,\n        // 节点宽度的一半\n        y: 40 // 节点高度的一半\n      };\n      document.addEventListener('mousemove', onCanvasDrag);\n      document.addEventListener('mouseup', stopCanvasDrag);\n      event.preventDefault();\n      event.stopPropagation();\n    };\n\n    // 业务中心节点拖拽处理\n    const startBusinessDrag = event => {\n      if (isConnecting.value) return; // 连线模式下不允许拖拽\n\n      isDragging.value = true;\n      dragTarget.value = {\n        type: 'business',\n        data: businessInfo.value\n      };\n\n      // 获取容器的位置\n      const container = document.querySelector('.enhanced-topology');\n      if (!container) return;\n      const containerRect = container.getBoundingClientRect();\n\n      // 设置较小的偏移，让节点中心跟随鼠标\n      dragOffset.value = {\n        x: 60,\n        // 节点宽度的一半\n        y: 40 // 节点高度的一半\n      };\n      document.addEventListener('mousemove', onBusinessDrag);\n      document.addEventListener('mouseup', stopBusinessDrag);\n      event.preventDefault();\n      event.stopPropagation();\n    };\n    const onDrag = event => {\n      if (!isDragging.value || !dragTarget.value) return;\n      const container = document.querySelector('.main-canvas');\n      if (!container) return;\n      const rect = container.getBoundingClientRect();\n\n      // 计算新位置（鼠标位置减去偏移量）\n      const newX = event.clientX - rect.left - dragOffset.value.x;\n      const newY = event.clientY - rect.top - dragOffset.value.y;\n\n      // 限制在容器范围内\n      dragTarget.value.x = Math.max(0, Math.min(newX, rect.width - 120));\n      dragTarget.value.y = Math.max(0, Math.min(newY, rect.height - 80));\n\n      // 更新相关的自定义连线\n      const centerCoords = getNodeCenterCoordinates(dragTarget.value);\n      customConnections.value.forEach(connection => {\n        if (connection.from.type === 'ip' && connection.from.id === dragTarget.value.id) {\n          connection.from.x = centerCoords.x;\n          connection.from.y = centerCoords.y;\n        }\n        if (connection.to.type === 'ip' && connection.to.id === dragTarget.value.id) {\n          connection.to.x = centerCoords.x;\n          connection.to.y = centerCoords.y;\n        }\n      });\n    };\n    const stopDrag = () => {\n      document.removeEventListener('mousemove', onDrag);\n      document.removeEventListener('mouseup', stopDrag);\n\n      // 延迟重置拖拽状态，避免立即触发点击事件\n      setTimeout(() => {\n        isDragging.value = false;\n        dragTarget.value = null;\n      }, 100);\n    };\n\n    // 画布IP节点拖拽移动\n    const onCanvasDrag = event => {\n      if (!isDragging.value || !dragTarget.value) return;\n      const container = document.querySelector('.main-canvas');\n      if (!container) return;\n      const rect = container.getBoundingClientRect();\n\n      // 计算新位置（鼠标位置减去偏移量）\n      const newX = event.clientX - rect.left - dragOffset.value.x;\n      const newY = event.clientY - rect.top - dragOffset.value.y;\n\n      // 限制在容器范围内\n      dragTarget.value.x = Math.max(0, Math.min(newX, rect.width - 120));\n      dragTarget.value.y = Math.max(0, Math.min(newY, rect.height - 80));\n\n      // 更新相关的自定义连线\n      const centerCoords = getNodeCenterCoordinates(dragTarget.value);\n      customConnections.value.forEach(connection => {\n        if (connection.from.type === 'ip' && connection.from.id === dragTarget.value.id) {\n          connection.from.x = centerCoords.x;\n          connection.from.y = centerCoords.y;\n        }\n        if (connection.to.type === 'ip' && connection.to.id === dragTarget.value.id) {\n          connection.to.x = centerCoords.x;\n          connection.to.y = centerCoords.y;\n        }\n      });\n    };\n\n    // 停止画布IP节点拖拽\n    const stopCanvasDrag = () => {\n      document.removeEventListener('mousemove', onCanvasDrag);\n      document.removeEventListener('mouseup', stopCanvasDrag);\n\n      // 延迟重置拖拽状态，避免立即触发点击事件\n      setTimeout(() => {\n        isDragging.value = false;\n        dragTarget.value = null;\n      }, 100);\n    };\n\n    // 业务中心节点拖拽移动\n    const onBusinessDrag = event => {\n      if (!isDragging.value || !dragTarget.value || dragTarget.value.type !== 'business') return;\n      const container = document.querySelector('.main-canvas');\n      if (!container) return;\n      const rect = container.getBoundingClientRect();\n\n      // 计算新位置（鼠标位置减去偏移量）\n      const newX = event.clientX - rect.left - dragOffset.value.x;\n      const newY = event.clientY - rect.top - dragOffset.value.y;\n\n      // 限制在容器范围内\n      businessInfo.value.x = Math.max(0, Math.min(newX, rect.width - 120));\n      businessInfo.value.y = Math.max(0, Math.min(newY, rect.height - 80));\n\n      // 更新相关的自定义连线\n      const centerCoords = getNodeCenterCoordinates({\n        type: 'business'\n      });\n      customConnections.value.forEach(connection => {\n        if (connection.from.type === 'business') {\n          connection.from.x = centerCoords.x;\n          connection.from.y = centerCoords.y;\n        }\n        if (connection.to.type === 'business') {\n          connection.to.x = centerCoords.x;\n          connection.to.y = centerCoords.y;\n        }\n      });\n    };\n\n    // 业务中心节点停止拖拽\n    const stopBusinessDrag = () => {\n      document.removeEventListener('mousemove', onBusinessDrag);\n      document.removeEventListener('mouseup', stopBusinessDrag);\n\n      // 延迟重置拖拽状态，避免立即触发点击事件\n      setTimeout(() => {\n        isDragging.value = false;\n        dragTarget.value = null;\n      }, 100);\n    };\n    const getServiceIcon = serviceType => {\n      const icons = {\n        'web': 'GlobalOutlined',\n        'database': 'DatabaseOutlined',\n        'cache': 'ThunderboltOutlined',\n        'message_queue': 'MessageOutlined',\n        'file_storage': 'FolderOutlined',\n        'monitoring': 'EyeOutlined',\n        'other': 'SettingOutlined'\n      };\n      return icons[serviceType] || 'SettingOutlined';\n    };\n\n    // 生命周期\n    onMounted(() => {\n      fetchBusinessDetail();\n      fetchRelatedIPs();\n    });\n    const __returned__ = {\n      route,\n      router,\n      businessInfo,\n      relatedIPs,\n      availableIPs,\n      loading,\n      ipLoading,\n      topologyLoading,\n      addIPModalVisible,\n      editModalVisible,\n      editFormRef,\n      ipForm,\n      showConnections,\n      customConnections,\n      isConnecting,\n      connectingFrom,\n      tempConnection,\n      mousePosition,\n      isDragging,\n      dragTarget,\n      dragOffset,\n      canvasIPs,\n      editForm,\n      editFormRules,\n      ipColumns,\n      fetchBusinessDetail,\n      fetchRelatedIPs,\n      fetchAvailableIPs,\n      handleIPSearch,\n      goBack,\n      editBusiness,\n      refreshData,\n      refreshIPs,\n      refreshTopology,\n      exportTopology,\n      showAddIPModal,\n      handleAddIP,\n      handleCancelAddIP,\n      handleEditSubmit,\n      handleEditCancel,\n      removeIP,\n      viewIPDetail,\n      openUrl,\n      formatDate,\n      getStatusColor,\n      getStatusText,\n      getPingStatusText,\n      getServiceTypeText,\n      filterOption,\n      getNodeCenterCoordinates,\n      startConnection,\n      finishConnection,\n      cancelConnection,\n      removeConnection,\n      clearAllConnections,\n      getNodeCenter,\n      onMouseMove,\n      getDefaultNodePosition,\n      resetNodePositions,\n      handleSidebarNodeClick,\n      handleCanvasNodeClick,\n      removeCanvasNode,\n      handleBusinessNodeClick,\n      startDrag,\n      startDragFromSidebar,\n      startBusinessDrag,\n      onDrag,\n      stopDrag,\n      onCanvasDrag,\n      stopCanvasDrag,\n      onBusinessDrag,\n      stopBusinessDrag,\n      getServiceIcon,\n      ref,\n      reactive,\n      onMounted,\n      computed,\n      nextTick,\n      get useRoute() {\n        return useRoute;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      get message() {\n        return message;\n      },\n      get Modal() {\n        return Modal;\n      },\n      get dayjs() {\n        return dayjs;\n      },\n      get businessAPI() {\n        return businessAPI;\n      },\n      get ipAPI() {\n        return ipAPI;\n      },\n      get ArrowLeftOutlined() {\n        return ArrowLeftOutlined;\n      },\n      get AppstoreOutlined() {\n        return AppstoreOutlined;\n      },\n      get EditOutlined() {\n        return EditOutlined;\n      },\n      get ReloadOutlined() {\n        return ReloadOutlined;\n      },\n      get TeamOutlined() {\n        return TeamOutlined;\n      },\n      get UserOutlined() {\n        return UserOutlined;\n      },\n      get CalendarOutlined() {\n        return CalendarOutlined;\n      },\n      get LinkOutlined() {\n        return LinkOutlined;\n      },\n      get GlobalOutlined() {\n        return GlobalOutlined;\n      },\n      get PlusOutlined() {\n        return PlusOutlined;\n      },\n      get EyeOutlined() {\n        return EyeOutlined;\n      },\n      get DeleteOutlined() {\n        return DeleteOutlined;\n      },\n      get ExportOutlined() {\n        return ExportOutlined;\n      },\n      get NodeIndexOutlined() {\n        return NodeIndexOutlined;\n      },\n      get CloseOutlined() {\n        return CloseOutlined;\n      },\n      get DatabaseOutlined() {\n        return DatabaseOutlined;\n      },\n      get ThunderboltOutlined() {\n        return ThunderboltOutlined;\n      },\n      get MessageOutlined() {\n        return MessageOutlined;\n      },\n      get FolderOutlined() {\n        return FolderOutlined;\n      },\n      get SettingOutlined() {\n        return SettingOutlined;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","computed","nextTick","useRoute","useRouter","message","Modal","dayjs","businessAPI","ipAPI","ArrowLeftOutlined","AppstoreOutlined","EditOutlined","ReloadOutlined","TeamOutlined","UserOutlined","CalendarOutlined","LinkOutlined","GlobalOutlined","PlusOutlined","EyeOutlined","DeleteOutlined","ExportOutlined","NodeIndexOutlined","CloseOutlined","DatabaseOutlined","ThunderboltOutlined","MessageOutlined","FolderOutlined","SettingOutlined","route","router","businessInfo","relatedIPs","availableIPs","loading","ipLoading","topologyLoading","addIPModalVisible","editModalVisible","editFormRef","ipForm","ip_id","undefined","description","service_type","showConnections","customConnections","isConnecting","connectingFrom","tempConnection","mousePosition","x","y","isDragging","dragTarget","dragOffset","canvasIPs","editForm","name","responsible_person","online_date","access_url","function_purpose","editFormRules","required","trigger","validator","rule","value","trim","Promise","resolve","ipColumns","title","dataIndex","key","width","customRender","text","formatDate","ellipsis","fixed","fetchBusinessDetail","response","getBusinessDetail","params","id","data","error","fetchRelatedIPs","getBusinessIPs","resetNodePositions","fetchAvailableIPs","searchKeyword","getIPList","search","page_size","allIPs","results","relatedIPIds","map","ip","ip_address","filter","includes","console","handleIPSearch","goBack","go","editBusiness","Object","assign","refreshData","refreshIPs","refreshTopology","setTimeout","success","exportTopology","info","showAddIPModal","handleAddIP","selectedIP","find","submitData","hostname","status","addBusinessIP","handleCancelAddIP","handleEditSubmit","validate","format","updateBusiness","errorFields","handleEditCancel","resetFields","removeIP","record","confirm","content","okText","cancelText","onOk","removeBusinessIP","viewIPDetail","push","query","highlight","openUrl","url","window","open","date","getStatusColor","colors","getStatusText","texts","getPingStatusText","getServiceTypeText","serviceType","filterOption","input","option","children","toLowerCase","indexOf","getNodeCenterCoordinates","node","type","startConnection","finishConnection","centerCoords","toNode","toCenterCoords","toX","toY","connection","Date","now","Math","random","from","to","cancelConnection","removeConnection","connectionId","index","findIndex","conn","splice","clearAllConnections","getNodeCenter","onMouseMove","event","rect","currentTarget","getBoundingClientRect","clientX","left","clientY","top","getDefaultNodePosition","businessCenter","centerX","centerY","radius","totalNodes","length","angle","PI","cos","sin","max","forEach","pos","handleSidebarNodeClick","existsInCanvas","canvasIP","log","handleCanvasNodeClick","removeCanvasNode","ipId","handleBusinessNodeClick","startDrag","container","document","querySelector","containerRect","addEventListener","onDrag","stopDrag","preventDefault","stopPropagation","startDragFromSidebar","existingIndex","warning","newCanvasIP","onCanvasDrag","stopCanvasDrag","startBusinessDrag","onBusinessDrag","stopBusinessDrag","newX","newY","min","height","removeEventListener","getServiceIcon","icons"],"sources":["E:/A_project/yuanchi/AIops/frontend/src/views/business/BusinessDetail.vue"],"sourcesContent":["<template>\r\n  <div class=\"business-detail\">\r\n    <!-- 页面头部 -->\r\n    <div class=\"page-header\">\r\n      <div class=\"header-content\">\r\n        <div class=\"header-left\">\r\n          <a-button type=\"text\" @click=\"goBack\" class=\"back-btn\">\r\n            <template #icon><ArrowLeftOutlined /></template>\r\n            返回\r\n          </a-button>\r\n          <h2 class=\"page-title\">\r\n            <AppstoreOutlined class=\"title-icon\" />\r\n            {{ businessInfo.name || '业务详情' }}\r\n          </h2>\r\n        </div>\r\n        <div class=\"header-actions\">\r\n          <a-space>\r\n            <a-button @click=\"editBusiness\">\r\n              <template #icon><EditOutlined /></template>\r\n              编辑\r\n            </a-button>\r\n            <a-button type=\"primary\" @click=\"refreshData\">\r\n              <template #icon><ReloadOutlined /></template>\r\n              刷新\r\n            </a-button>\r\n          </a-space>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 业务基本信息 -->\r\n    <div class=\"info-section\">\r\n      <a-card title=\"基本信息\" :bordered=\"false\">\r\n        <a-row :gutter=\"24\">\r\n          <a-col :span=\"12\">\r\n            <div class=\"info-item\">\r\n              <span class=\"label\">业务名称：</span>\r\n              <span class=\"value\">{{ businessInfo.name }}</span>\r\n            </div>\r\n          </a-col>\r\n          <a-col :span=\"12\">\r\n            <div class=\"info-item\">\r\n              <span class=\"label\">责任人：</span>\r\n              <span class=\"value\">\r\n                <UserOutlined class=\"icon\" />\r\n                {{ businessInfo.responsible_person }}\r\n              </span>\r\n            </div>\r\n          </a-col>\r\n        </a-row>\r\n        <a-row :gutter=\"24\" style=\"margin-top: 16px\">\r\n          <a-col :span=\"12\">\r\n            <div class=\"info-item\">\r\n              <span class=\"label\">上线日期：</span>\r\n              <span class=\"value\">\r\n                <CalendarOutlined class=\"icon\" />\r\n                {{ formatDate(businessInfo.online_date) }}\r\n              </span>\r\n            </div>\r\n          </a-col>\r\n          <a-col :span=\"12\">\r\n            <div class=\"info-item\">\r\n              <span class=\"label\">访问地址：</span>\r\n              <span class=\"value\">\r\n                <a-button\r\n                  v-if=\"businessInfo.access_url\"\r\n                  type=\"link\"\r\n                  size=\"small\"\r\n                  @click=\"openUrl(businessInfo.access_url)\"\r\n                >\r\n                  <template #icon><LinkOutlined /></template>\r\n                  {{ businessInfo.access_url }}\r\n                </a-button>\r\n                <span v-else class=\"no-data\">未设置</span>\r\n              </span>\r\n            </div>\r\n          </a-col>\r\n        </a-row>\r\n        <a-row :gutter=\"24\" style=\"margin-top: 16px\">\r\n          <a-col :span=\"24\">\r\n            <div class=\"info-item\">\r\n              <span class=\"label\">功能用途：</span>\r\n              <span class=\"value\">\r\n                <span v-if=\"businessInfo.description\" class=\"function-purpose-text\">\r\n                  {{ businessInfo.description }}\r\n                </span>\r\n                <span v-else class=\"no-data\">暂无功能用途描述</span>\r\n              </span>\r\n            </div>\r\n          </a-col>\r\n        </a-row>\r\n      </a-card>\r\n    </div>\r\n\r\n\r\n\r\n    <!-- 关联IP列表 -->\r\n    <div class=\"ip-section\">\r\n      <a-card :bordered=\"false\">\r\n        <template #title>\r\n          <div class=\"section-title\">\r\n            <GlobalOutlined class=\"title-icon\" />\r\n            关联IP列表\r\n            <a-badge :count=\"relatedIPs.length\" class=\"count-badge\" />\r\n          </div>\r\n        </template>\r\n        <template #extra>\r\n          <a-space>\r\n            <a-button size=\"small\" @click=\"showAddIPModal\">\r\n              <template #icon><PlusOutlined /></template>\r\n              添加IP\r\n            </a-button>\r\n            <a-button size=\"small\" @click=\"refreshIPs\">\r\n              <template #icon><ReloadOutlined /></template>\r\n              刷新\r\n            </a-button>\r\n          </a-space>\r\n        </template>\r\n        \r\n        <a-table\r\n          :columns=\"ipColumns\"\r\n          :data-source=\"relatedIPs\"\r\n          :loading=\"ipLoading\"\r\n          :pagination=\"false\"\r\n          size=\"small\"\r\n        >\r\n          <template #bodyCell=\"{ column, record }\">\r\n            <template v-if=\"column.dataIndex === 'ip_address'\">\r\n              <div class=\"ip-info\">\r\n                <a-tag color=\"blue\">{{ record.ip_address }}</a-tag>\r\n              </div>\r\n            </template>\r\n            \r\n            <template v-else-if=\"column.dataIndex === 'status'\">\r\n              <a-tag :color=\"getStatusColor(record.status)\">\r\n                {{ getStatusText(record.status) }}\r\n              </a-tag>\r\n            </template>\r\n            \r\n            <template v-else-if=\"column.dataIndex === 'service_type'\">\r\n              <a-tag color=\"purple\">\r\n                {{ getServiceTypeText(record.service_type) }}\r\n              </a-tag>\r\n            </template>\r\n            \r\n            <template v-else-if=\"column.dataIndex === 'ping_status'\">\r\n              <div class=\"ping-status\">\r\n                <span :class=\"['status-dot', record.ping_status]\" />\r\n                {{ getPingStatusText(record.ping_status) }}\r\n              </div>\r\n            </template>\r\n            \r\n            <template v-else-if=\"column.dataIndex === 'action'\">\r\n              <a-space>\r\n                <a-tooltip title=\"移除关联\">\r\n                  <a-button\r\n                    type=\"text\"\r\n                    size=\"small\"\r\n                    danger\r\n                    @click=\"removeIP(record)\"\r\n                  >\r\n                    <template #icon><DeleteOutlined /></template>\r\n                  </a-button>\r\n                </a-tooltip>\r\n              </a-space>\r\n            </template>\r\n          </template>\r\n        </a-table>\r\n      </a-card>\r\n    </div>\r\n\r\n    <!-- 业务拓扑 -->\r\n    <div class=\"topology-section\">\r\n      <a-card title=\"业务拓扑\" :bordered=\"false\">\r\n        <template #extra>\r\n          <a-space>\r\n            <a-button size=\"small\" @click=\"refreshTopology\">\r\n              <template #icon><ReloadOutlined /></template>\r\n              刷新拓扑\r\n            </a-button>\r\n            <a-button size=\"small\" @click=\"exportTopology\">\r\n              <template #icon><ExportOutlined /></template>\r\n              导出\r\n            </a-button>\r\n            <!-- 拓扑图控制面板 -->\r\n            <a-divider type=\"vertical\" v-if=\"relatedIPs.length > 0\" />\r\n            <a-tag v-if=\"relatedIPs.length > 0\" color=\"green\" @click=\"resetNodePositions\" style=\"cursor: pointer\">\r\n              重置位置\r\n            </a-tag>\r\n            <a-tag v-if=\"isConnecting\" color=\"orange\" @click=\"cancelConnection\" style=\"cursor: pointer\">\r\n              <CloseOutlined /> 取消连线\r\n            </a-tag>\r\n            <a-tag v-if=\"customConnections.length > 0\" color=\"red\" @click=\"clearAllConnections\" style=\"cursor: pointer\">\r\n              <DeleteOutlined /> 清除自定义连线\r\n            </a-tag>\r\n            <a-tag v-if=\"isConnecting\" color=\"purple\" class=\"connecting-tip\">\r\n              点击节点完成连线\r\n            </a-tag>\r\n          </a-space>\r\n        </template>\r\n        \r\n        <div class=\"topology-container\">\r\n          <div v-if=\"topologyLoading\" class=\"topology-loading\">\r\n            <a-spin size=\"large\" />\r\n            <p>正在生成业务拓扑图...</p>\r\n          </div>\r\n          <div v-else-if=\"relatedIPs.length === 0\" class=\"no-topology\">\r\n            <a-empty description=\"暂无关联IP，无法生成拓扑图\" />\r\n          </div>\r\n          <div v-else class=\"topology-content\">\r\n            <!-- 业务拓扑图 -->\r\n            <div class=\"topology-layout\">\r\n              <!-- 左侧IP节点列表 -->\r\n              <div class=\"ip-nodes-sidebar\">\r\n                <div class=\"sidebar-header\">\r\n                  <h4 class=\"sidebar-title\">IP节点列表</h4>\r\n                  <span class=\"node-count\">{{ relatedIPs.length }} 个节点</span>\r\n                </div>\r\n                <div class=\"sidebar-nodes\">\r\n                  <div\r\n                    v-for=\"(ip, index) in relatedIPs\"\r\n                    :key=\"ip.id\"\r\n                    class=\"sidebar-ip-node\"\r\n                    :class=\"[ip.ping_status, { \r\n                      'connecting-from': connectingFrom && connectingFrom.type === 'ip' && connectingFrom.id === ip.id \r\n                    }]\"\r\n                    @mousedown=\"startDragFromSidebar($event, ip)\"\r\n                    @click=\"handleSidebarNodeClick($event, ip)\"\r\n                    @contextmenu.prevent=\"startConnection({ type: 'ip', id: ip.id, name: ip.ip_address, x: 50, y: 50 + index * 90 })\"\r\n                  >\r\n                    <div class=\"node-icon\">\r\n                      <component :is=\"getServiceIcon(ip.service_type)\" />\r\n                    </div>\r\n                    <div class=\"node-info\">\r\n                      <div class=\"node-title\">{{ ip.ip_address }}</div>\r\n                      <div class=\"node-subtitle\">{{ getServiceTypeText(ip.service_type) }}</div>\r\n                    </div>\r\n                    <div class=\"node-status\" :class=\"ip.ping_status\">\r\n                      <span class=\"status-dot\" />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              <!-- 主画布区域 -->\r\n              <div class=\"main-canvas\" :class=\"{ 'connecting-mode': isConnecting }\">\r\n                <!-- 网络连接层 -->\r\n                <div class=\"topology-network\" @mousemove=\"onMouseMove\">\r\n                  <svg width=\"100%\" height=\"100%\" class=\"connection-svg\">\r\n                    <!-- 定义箭头标记和渐变 -->\r\n                    <defs>\r\n                      <!-- 科技风渐变 -->\r\n                      <linearGradient id=\"techGradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\r\n                        <stop offset=\"0%\" style=\"stop-color:#00d4ff;stop-opacity:1\" />\r\n                        <stop offset=\"50%\" style=\"stop-color:#0099ff;stop-opacity:1\" />\r\n                        <stop offset=\"100%\" style=\"stop-color:#0066ff;stop-opacity:1\" />\r\n                      </linearGradient>\r\n                      \r\n                      <!-- 发光效果滤镜 -->\r\n                      <filter id=\"glow\">\r\n                        <feGaussianBlur stdDeviation=\"3\" result=\"coloredBlur\"/>\r\n                        <feMerge> \r\n                          <feMergeNode in=\"coloredBlur\"/>\r\n                          <feMergeNode in=\"SourceGraphic\"/>\r\n                        </feMerge>\r\n                      </filter>\r\n                      \r\n                      <marker id=\"arrowhead\" markerWidth=\"10\" markerHeight=\"7\" \r\n                              refX=\"9\" refY=\"3.5\" orient=\"auto\">\r\n                        <polygon points=\"0 0, 10 3.5, 0 7\" fill=\"#1890ff\" />\r\n                      </marker>\r\n                      <marker id=\"custom-arrowhead\" markerWidth=\"12\" markerHeight=\"8\" \r\n                              refX=\"11\" refY=\"4\" orient=\"auto\">\r\n                        <polygon points=\"0 0, 12 4, 0 8\" fill=\"url(#techGradient)\" filter=\"url(#glow)\" />\r\n                      </marker>\r\n                    </defs>\r\n                    \r\n                    <!-- 自定义连线 -->\r\n                    <g>\r\n                      <!-- 背景连线 -->\r\n                      <line\r\n                        v-for=\"connection in customConnections\"\r\n                        :key=\"'bg-' + connection.id\"\r\n                        :x1=\"connection.from.x\"\r\n                        :y1=\"connection.from.y\"\r\n                        :x2=\"connection.to.x\"\r\n                        :y2=\"connection.to.y\"\r\n                        stroke=\"#1a1a2e\"\r\n                        stroke-width=\"6\"\r\n                        class=\"connection-background\"\r\n                      />\r\n                      <!-- 主连线 -->\r\n                      <line\r\n                        v-for=\"connection in customConnections\"\r\n                        :key=\"'main-' + connection.id\"\r\n                        :x1=\"connection.from.x\"\r\n                        :y1=\"connection.from.y\"\r\n                        :x2=\"connection.to.x\"\r\n                        :y2=\"connection.to.y\"\r\n                        stroke=\"url(#techGradient)\"\r\n                        stroke-width=\"3\"\r\n                        marker-end=\"url(#custom-arrowhead)\"\r\n                        class=\"custom-connection-line tech-line\"\r\n                        @click=\"removeConnection(connection.id)\"\r\n                      />\r\n                      <!-- 流动光效 -->\r\n                      <line\r\n                        v-for=\"connection in customConnections\"\r\n                        :key=\"'flow-' + connection.id\"\r\n                        :x1=\"connection.from.x\"\r\n                        :y1=\"connection.from.y\"\r\n                        :x2=\"connection.to.x\"\r\n                        :y2=\"connection.to.y\"\r\n                        stroke=\"#00ffff\"\r\n                        stroke-width=\"1\"\r\n                        stroke-dasharray=\"10,20\"\r\n                        class=\"flow-effect\"\r\n                      />\r\n                    </g>\r\n                    \r\n                    <!-- 临时连线（连线过程中显示） -->\r\n                    <g v-if=\"tempConnection\">\r\n                      <!-- 临时连线背景 -->\r\n                      <line\r\n                        :x1=\"tempConnection.from.x\"\r\n                        :y1=\"tempConnection.from.y\"\r\n                        :x2=\"tempConnection.to.x\"\r\n                        :y2=\"tempConnection.to.y\"\r\n                        stroke=\"#1a1a2e\"\r\n                        stroke-width=\"4\"\r\n                        class=\"temp-connection-bg\"\r\n                      />\r\n                      <!-- 临时连线主体 -->\r\n                      <line\r\n                        :x1=\"tempConnection.from.x\"\r\n                        :y1=\"tempConnection.from.y\"\r\n                        :x2=\"tempConnection.to.x\"\r\n                        :y2=\"tempConnection.to.y\"\r\n                        stroke=\"url(#techGradient)\"\r\n                        stroke-width=\"2\"\r\n                        stroke-dasharray=\"8,4\"\r\n                        class=\"temp-connection-line tech-temp-line\"\r\n                        filter=\"url(#glow)\"\r\n                      />\r\n                    </g>\r\n                  </svg>\r\n                </div>\r\n                \r\n                <!-- 业务中心节点 -->\r\n                <div \r\n                  class=\"business-center-node\"\r\n                  :class=\"{ 'connecting-from': connectingFrom && connectingFrom.type === 'business' }\"\r\n                  :style=\"{ left: businessInfo.x + 'px', top: businessInfo.y + 'px' }\"\r\n                  @mousedown=\"startBusinessDrag($event)\"\r\n                  @click=\"handleBusinessNodeClick($event)\"\r\n                  @contextmenu.prevent=\"startConnection({ type: 'business', id: businessInfo.id, name: businessInfo.name })\"\r\n                >\r\n                  <AppstoreOutlined class=\"node-icon\" />\r\n                  <div class=\"node-info\">\r\n                    <div class=\"node-title\">{{ businessInfo.name }}</div>\r\n                    <div class=\"node-subtitle\">业务中心</div>\r\n                  </div>\r\n                  <div v-if=\"connectingFrom && connectingFrom.type === 'business'\" class=\"connecting-indicator\">\r\n                    连线起点\r\n                  </div>\r\n                </div>\r\n                \r\n                <!-- 画布中的IP节点（从侧边栏拖拽过来的） -->\r\n                <div\r\n                  v-for=\"ip in canvasIPs\"\r\n                  :key=\"'canvas-' + ip.id\"\r\n                  class=\"canvas-ip-node\"\r\n                  :class=\"[ip.ping_status, { \r\n                    'connecting-from': connectingFrom && connectingFrom.type === 'ip' && connectingFrom.id === ip.id \r\n                  }]\"\r\n                  :style=\"{\r\n                    left: ip.x + 'px',\r\n                    top: ip.y + 'px'\r\n                  }\"\r\n                  @mousedown=\"startDrag($event, ip)\"\r\n                  @click=\"handleCanvasNodeClick($event, ip)\"\r\n                  @contextmenu.prevent=\"startConnection({ type: 'ip', id: ip.id, name: ip.ip_address, x: ip.x + 60, y: ip.y + 40 })\"\r\n                >\r\n                  <div class=\"node-icon\">\r\n                    <component :is=\"getServiceIcon(ip.service_type)\" />\r\n                  </div>\r\n                  <div class=\"node-info\">\r\n                    <div class=\"node-title\">{{ ip.ip_address }}</div>\r\n                    <div class=\"node-subtitle\">{{ getServiceTypeText(ip.service_type) }}</div>\r\n                  </div>\r\n                  <div class=\"node-status\" :class=\"ip.ping_status\">\r\n                    <span class=\"status-dot\" />\r\n                    {{ getPingStatusText(ip.ping_status) }}\r\n                  </div>\r\n                  <div v-if=\"connectingFrom && connectingFrom.type === 'ip' && connectingFrom.id === ip.id\" class=\"connecting-indicator\">\r\n                    连线起点\r\n                  </div>\r\n                  <!-- 删除按钮 -->\r\n                  <div class=\"node-remove-btn\" @click.stop=\"removeCanvasNode(ip.id)\" title=\"从画布移除\">\r\n                    <CloseOutlined />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            </div>\r\n            </div>\r\n\r\n      </a-card>\r\n    </div>\r\n\r\n    <!-- 添加IP模态框 -->\r\n    <a-modal\r\n      v-model:open=\"addIPModalVisible\"\r\n      title=\"添加关联IP\"\r\n      @ok=\"handleAddIP\"\r\n      @cancel=\"handleCancelAddIP\"\r\n    >\r\n      <a-form layout=\"vertical\">\r\n        <a-form-item label=\"选择IP\" required>\r\n          <a-select\r\n            v-model:value=\"ipForm.ip_id\"\r\n            placeholder=\"请选择要关联的IP\"\r\n            show-search\r\n            :filter-option=\"false\"\r\n            @search=\"handleIPSearch\"\r\n            :loading=\"ipLoading\"\r\n          >\r\n            <a-select-option\r\n              v-for=\"ip in availableIPs\"\r\n              :key=\"ip.id\"\r\n              :value=\"ip.id\"\r\n            >\r\n              {{ ip.ip_address }} - {{ ip.hostname || '未知主机' }}\r\n            </a-select-option>\r\n          </a-select>\r\n        </a-form-item>\r\n        <a-form-item label=\"服务类型\">\r\n          <a-select\r\n            v-model:value=\"ipForm.service_type\"\r\n            placeholder=\"请选择服务类型\"\r\n          >\r\n            <a-select-option value=\"web\">Web服务</a-select-option>\r\n            <a-select-option value=\"database\">数据库</a-select-option>\r\n            <a-select-option value=\"cache\">缓存服务</a-select-option>\r\n            <a-select-option value=\"message_queue\">消息队列</a-select-option>\r\n            <a-select-option value=\"file_storage\">文件存储</a-select-option>\r\n            <a-select-option value=\"monitoring\">监控服务</a-select-option>\r\n            <a-select-option value=\"other\">其他</a-select-option>\r\n          </a-select>\r\n        </a-form-item>\r\n        <a-form-item label=\"关联说明\">\r\n          <a-textarea\r\n            v-model:value=\"ipForm.description\"\r\n            placeholder=\"请输入关联说明（可选）\"\r\n            :rows=\"3\"\r\n          />\r\n        </a-form-item>\r\n      </a-form>\r\n    </a-modal>\r\n\r\n    <!-- 编辑业务模态框 -->\r\n    <a-modal\r\n      v-model:open=\"editModalVisible\"\r\n      title=\"编辑业务\"\r\n      width=\"800px\"\r\n      @ok=\"handleEditSubmit\"\r\n      @cancel=\"handleEditCancel\"\r\n    >\r\n      <a-form\r\n        ref=\"editFormRef\"\r\n        :model=\"editForm\"\r\n        :rules=\"editFormRules\"\r\n        layout=\"vertical\"\r\n      >\r\n        <a-row :gutter=\"16\">\r\n          <a-col :span=\"12\">\r\n            <a-form-item label=\"业务名称\" name=\"name\">\r\n              <a-input\r\n                v-model:value=\"editForm.name\"\r\n                placeholder=\"请输入业务名称\"\r\n              />\r\n            </a-form-item>\r\n          </a-col>\r\n          <a-col :span=\"12\">\r\n            <a-form-item label=\"上线日期\" name=\"online_date\">\r\n              <a-date-picker\r\n                v-model:value=\"editForm.online_date\"\r\n                style=\"width: 100%\"\r\n                format=\"YYYY-MM-DD\"\r\n              />\r\n            </a-form-item>\r\n          </a-col>\r\n        </a-row>\r\n\r\n        <a-row :gutter=\"16\">\r\n          <a-col :span=\"12\">\r\n            <a-form-item label=\"责任人\" name=\"responsible_person\">\r\n              <a-input\r\n                v-model:value=\"editForm.responsible_person\"\r\n                placeholder=\"请输入责任人\"\r\n              />\r\n            </a-form-item>\r\n          </a-col>\r\n          <a-col :span=\"12\">\r\n            <a-form-item label=\"访问地址\" name=\"access_url\">\r\n              <a-input\r\n                v-model:value=\"editForm.access_url\"\r\n                placeholder=\"请输入访问地址\"\r\n              />\r\n            </a-form-item>\r\n          </a-col>\r\n        </a-row>\r\n\r\n        <a-form-item label=\"功能用途\" name=\"function_purpose\">\r\n          <a-textarea\r\n            v-model:value=\"editForm.function_purpose\"\r\n            placeholder=\"请输入功能用途\"\r\n            :rows=\"3\"\r\n          />\r\n        </a-form-item>\r\n\r\n        <a-form-item label=\"业务描述\" name=\"description\">\r\n          <a-textarea\r\n            v-model:value=\"editForm.description\"\r\n            placeholder=\"请输入业务描述\"\r\n            :rows=\"4\"\r\n          />\r\n        </a-form-item>\r\n      </a-form>\r\n    </a-modal>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, onMounted, computed, nextTick } from 'vue';\r\nimport { useRoute, useRouter } from 'vue-router';\r\nimport { message, Modal } from 'ant-design-vue';\r\nimport dayjs from 'dayjs';\r\nimport { businessAPI } from '@/api/businessManagement';\r\nimport { ipAPI } from '@/api/ipManagement';\r\nimport {\r\n  ArrowLeftOutlined,\r\n  AppstoreOutlined,\r\n  EditOutlined,\r\n  ReloadOutlined,\r\n  TeamOutlined,\r\n  UserOutlined,\r\n  CalendarOutlined,\r\n  LinkOutlined,\r\n  GlobalOutlined,\r\n  PlusOutlined,\r\n  EyeOutlined,\r\n  DeleteOutlined,\r\n  ExportOutlined,\r\n  NodeIndexOutlined,\r\n  CloseOutlined,\r\n  DatabaseOutlined,\r\n  ThunderboltOutlined,\r\n  MessageOutlined,\r\n  FolderOutlined,\r\n  SettingOutlined\r\n} from '@ant-design/icons-vue';\r\n\r\nconst route = useRoute();\r\nconst router = useRouter();\r\n\r\n// 响应式数据\r\nconst businessInfo = ref({});\r\nconst relatedIPs = ref([]);\r\nconst availableIPs = ref([]);\r\nconst loading = ref(false);\r\nconst ipLoading = ref(false);\r\nconst topologyLoading = ref(false);\r\nconst addIPModalVisible = ref(false);\r\nconst editModalVisible = ref(false);\r\nconst editFormRef = ref();\r\n\r\n// 表单数据\r\nconst ipForm = reactive({\r\n  ip_id: undefined,\r\n  description: '',\r\n  service_type: 'web'\r\n});\r\n\r\n// 拓扑图相关数据\r\nconst showConnections = ref(true);\r\nconst customConnections = ref([]);\r\nconst isConnecting = ref(false);\r\nconst connectingFrom = ref(null);\r\nconst tempConnection = ref(null);\r\nconst mousePosition = ref({ x: 0, y: 0 });\r\nconst isDragging = ref(false);\r\nconst dragTarget = ref(null);\r\nconst dragOffset = ref({ x: 0, y: 0 });\r\nconst canvasIPs = ref([]); // 画布中的IP节点\r\n\r\nconst editForm = reactive({\r\n  name: '',\r\n  responsible_person: '',\r\n  online_date: null,\r\n  access_url: '',\r\n  function_purpose: '',\r\n  description: ''\r\n});\r\n\r\n// 编辑表单验证规则\r\nconst editFormRules = {\r\n  name: [{ required: true, message: '请输入业务名称', trigger: 'blur' }],\r\n  responsible_person: [{ required: true, message: '请输入责任人', trigger: 'blur' }],\r\n  online_date: [{ required: true, message: '请选择上线日期', trigger: 'change' }],\r\n  access_url: [\r\n    { \r\n      validator: (rule, value) => {\r\n        if (!value || value.trim() === '') {\r\n          return Promise.resolve();\r\n        }\r\n        return Promise.resolve();\r\n      },\r\n      trigger: 'blur'\r\n    }\r\n  ]\r\n};\r\n\r\n// IP列表表格列配置\r\nconst ipColumns = [\r\n  {\r\n    title: 'IP地址',\r\n    dataIndex: 'ip_address',\r\n    key: 'ip_address',\r\n    width: 150\r\n  },\r\n  {\r\n    title: '主机名',\r\n    dataIndex: 'hostname',\r\n    key: 'hostname',\r\n    width: 150\r\n  },\r\n  {\r\n    title: '状态',\r\n    dataIndex: 'status',\r\n    key: 'status',\r\n    width: 100\r\n  },\r\n  {\r\n    title: '服务类型',\r\n    dataIndex: 'service_type',\r\n    key: 'service_type',\r\n    width: 120\r\n  },\r\n  {\r\n    title: 'Ping状态',\r\n    dataIndex: 'ping_status',\r\n    key: 'ping_status',\r\n    width: 120\r\n  },\r\n  {\r\n    title: '最后检测',\r\n    dataIndex: 'last_seen',\r\n    key: 'last_seen',\r\n    width: 150,\r\n    customRender: ({ text }) => formatDate(text)\r\n  },\r\n  {\r\n    title: '关联说明',\r\n    dataIndex: 'description',\r\n    key: 'description',\r\n    ellipsis: true\r\n  },\r\n  {\r\n    title: '操作',\r\n    dataIndex: 'action',\r\n    key: 'action',\r\n    width: 100,\r\n    fixed: 'right'\r\n  }\r\n];\r\n\r\n// 方法\r\nconst fetchBusinessDetail = async () => {\r\n  loading.value = true;\r\n  try {\r\n    const response = await businessAPI.getBusinessDetail(route.params.id);\r\n    businessInfo.value = response.data;\r\n    \r\n    // 确保业务中心节点的坐标是数值类型\r\n    if (!businessInfo.value.x || typeof businessInfo.value.x !== 'number') {\r\n      businessInfo.value.x = 400; // 默认X坐标\r\n    }\r\n    if (!businessInfo.value.y || typeof businessInfo.value.y !== 'number') {\r\n      businessInfo.value.y = 260; // 默认Y坐标\r\n    }\r\n  } catch (error) {\r\n    message.error('获取业务详情失败');\r\n  } finally {\r\n    loading.value = false;\r\n  }\r\n};\r\n\r\nconst fetchRelatedIPs = async () => {\r\n  ipLoading.value = true;\r\n  try {\r\n    const response = await businessAPI.getBusinessIPs(route.params.id);\r\n    relatedIPs.value = response.data || [];\r\n    \r\n    // 数据加载完成后，重置IP节点位置\r\n    nextTick(() => {\r\n      resetNodePositions();\r\n    });\r\n  } catch (error) {\r\n    message.error('获取关联IP失败');\r\n  } finally {\r\n    ipLoading.value = false;\r\n  }\r\n};\r\n\r\nconst fetchAvailableIPs = async (searchKeyword = '') => {\r\n  try {\r\n    const response = await ipAPI.getIPList({\r\n      search: searchKeyword,\r\n      page_size: 100 // 获取更多IP供选择\r\n    });\r\n    \r\n    let allIPs = response.data.results || response.data || [];\r\n    \r\n    // 过滤掉已经关联到当前业务的IP\r\n    const relatedIPIds = relatedIPs.value.map(ip => ip.ip_address);\r\n    availableIPs.value = allIPs.filter(ip => !relatedIPIds.includes(ip.ip_address));\r\n  } catch (error) {\r\n    console.error('获取可用IP列表失败:', error);\r\n    message.error('获取可用IP列表失败');\r\n  }\r\n};\r\n\r\nconst handleIPSearch = (value) => {\r\n  fetchAvailableIPs(value);\r\n};\r\n\r\nconst goBack = () => {\r\n  router.go(-1);\r\n};\r\n\r\nconst editBusiness = () => {\r\n  // 将当前业务信息填充到编辑表单\r\n  Object.assign(editForm, {\r\n    name: businessInfo.value.name || '',\r\n    responsible_person: businessInfo.value.responsible_person || '',\r\n    online_date: businessInfo.value.online_date ? dayjs(businessInfo.value.online_date) : null,\r\n    access_url: businessInfo.value.access_url || '',\r\n    description: businessInfo.value.description || ''\r\n  });\r\n  editModalVisible.value = true;\r\n};\r\n\r\nconst refreshData = () => {\r\n  fetchBusinessDetail();\r\n  fetchRelatedIPs();\r\n};\r\n\r\nconst refreshIPs = () => {\r\n  fetchRelatedIPs();\r\n};\r\n\r\nconst refreshTopology = () => {\r\n  topologyLoading.value = true;\r\n  // 模拟拓扑图刷新\r\n  setTimeout(() => {\r\n    topologyLoading.value = false;\r\n    message.success('拓扑图已刷新');\r\n  }, 1500);\r\n};\r\n\r\nconst exportTopology = () => {\r\n  message.info('拓扑图导出功能开发中...');\r\n};\r\n\r\nconst showAddIPModal = () => {\r\n  fetchAvailableIPs();\r\n  addIPModalVisible.value = true;\r\n};\r\n\r\nconst handleAddIP = async () => {\r\n  if (!ipForm.ip_id) {\r\n    message.error('请选择要关联的IP');\r\n    return;\r\n  }\r\n  \r\n  try {\r\n    // 找到选中的IP信息\r\n    const selectedIP = availableIPs.value.find(ip => ip.id === ipForm.ip_id);\r\n    if (!selectedIP) {\r\n      message.error('选中的IP信息无效');\r\n      return;\r\n    }\r\n    \r\n    // 构造后端所需的数据格式\r\n    const submitData = {\r\n      ip_address: selectedIP.ip_address,\r\n      hostname: selectedIP.hostname || '',\r\n      description: ipForm.description || '',\r\n      service_type: ipForm.service_type || 'web',\r\n      status: 'unknown'\r\n    };\r\n    \r\n    await businessAPI.addBusinessIP(route.params.id, submitData);\r\n    message.success('IP关联成功');\r\n    addIPModalVisible.value = false;\r\n    Object.assign(ipForm, { ip_id: undefined, description: '', service_type: 'web' });\r\n    fetchRelatedIPs();\r\n  } catch (error) {\r\n    console.error('IP关联失败:', error);\r\n    message.error('IP关联失败');\r\n  }\r\n};\r\n\r\nconst handleCancelAddIP = () => {\r\n  addIPModalVisible.value = false;\r\n  Object.assign(ipForm, { ip_id: undefined, description: '', service_type: 'web' });\r\n};\r\n\r\nconst handleEditSubmit = async () => {\r\n  try {\r\n    await editFormRef.value.validate();\r\n    \r\n    const submitData = {\r\n      name: editForm.name,\r\n      responsible_person: editForm.responsible_person,\r\n      online_date: editForm.online_date ? dayjs(editForm.online_date).format('YYYY-MM-DD') : null,\r\n      access_url: editForm.access_url && editForm.access_url.trim() ? editForm.access_url.trim() : null,\r\n      function_purpose: editForm.function_purpose || '',\r\n      description: editForm.description || ''\r\n    };\r\n    \r\n    await businessAPI.updateBusiness(route.params.id, submitData);\r\n    message.success('业务更新成功');\r\n    editModalVisible.value = false;\r\n    fetchBusinessDetail(); // 重新获取业务详情\r\n  } catch (error) {\r\n    if (error.errorFields) {\r\n      message.error('请检查表单输入');\r\n    } else {\r\n      message.error('业务更新失败');\r\n    }\r\n  }\r\n};\r\n\r\nconst handleEditCancel = () => {\r\n  editModalVisible.value = false;\r\n  editFormRef.value?.resetFields();\r\n};\r\n\r\nconst removeIP = (record) => {\r\n  Modal.confirm({\r\n    title: '确认移除',\r\n    content: `确定要移除IP \"${record.ip_address}\" 的关联吗？`,\r\n    okText: '确定',\r\n    cancelText: '取消',\r\n    onOk: async () => {\r\n      try {\r\n        await businessAPI.removeBusinessIP(route.params.id, record.id);\r\n        message.success('移除成功');\r\n        fetchRelatedIPs();\r\n      } catch (error) {\r\n        message.error('移除失败');\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\nconst viewIPDetail = (record) => {\r\n  router.push({\r\n    name: 'ipManagement',\r\n    query: { highlight: record.ip_address }\r\n  });\r\n};\r\n\r\nconst openUrl = (url) => {\r\n  if (url) {\r\n    window.open(url, '_blank');\r\n  }\r\n};\r\n\r\nconst formatDate = (date) => {\r\n  return date ? dayjs(date).format('YYYY-MM-DD HH:mm:ss') : '-';\r\n};\r\n\r\nconst getStatusColor = (status) => {\r\n  const colors = {\r\n    'active': 'green',\r\n    'inactive': 'red',\r\n    'pending': 'orange',\r\n    'unknown': 'default'\r\n  };\r\n  return colors[status] || 'default';\r\n};\r\n\r\nconst getStatusText = (status) => {\r\n  const texts = {\r\n    'active': '活跃',\r\n    'inactive': '非活跃',\r\n    'pending': '待确认',\r\n    'unknown': '未知'\r\n  };\r\n  return texts[status] || '未知';\r\n};\r\n\r\nconst getPingStatusText = (status) => {\r\n  const texts = {\r\n    'online': '在线',\r\n    'offline': '离线',\r\n    'timeout': '超时'\r\n  };\r\n  return texts[status] || '未知';\r\n};\r\n\r\nconst getServiceTypeText = (serviceType) => {\r\n  const texts = {\r\n    'web': 'Web服务',\r\n    'database': '数据库',\r\n    'cache': '缓存服务',\r\n    'message_queue': '消息队列',\r\n    'file_storage': '文件存储',\r\n    'monitoring': '监控服务',\r\n    'other': '其他'\r\n  };\r\n  return texts[serviceType] || '其他';\r\n};\r\n\r\nconst filterOption = (input, option) => {\r\n  return option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\r\n};\r\n\r\n// 计算节点中心点坐标的统一方法\r\nconst getNodeCenterCoordinates = (node) => {\r\n  if (node.type === 'business') {\r\n    // 业务中心节点：120x80px，中心点偏移60,40\r\n    return {\r\n      x: businessInfo.value.x + 60,\r\n      y: businessInfo.value.y + 40\r\n    };\r\n  } else {\r\n    // IP节点：120x80px，中心点偏移60,40\r\n    return {\r\n      x: (node.x || 0) + 60,\r\n      y: (node.y || 0) + 40\r\n    };\r\n  }\r\n};\r\n\r\n// 自定义连线相关方法\r\nconst startConnection = (node) => {\r\n  if (isConnecting.value) {\r\n    // 如果已经在连线模式，完成连线\r\n    finishConnection(node);\r\n  } else {\r\n    // 开始连线\r\n    isConnecting.value = true;\r\n    connectingFrom.value = { ...node };\r\n    \r\n    // 计算起点坐标\r\n    const centerCoords = getNodeCenterCoordinates(node);\r\n    connectingFrom.value.x = centerCoords.x;\r\n    connectingFrom.value.y = centerCoords.y;\r\n  }\r\n};\r\n\r\nconst finishConnection = (toNode) => {\r\n  if (!connectingFrom.value || !toNode) return;\r\n  \r\n  // 不能连接到自己\r\n  if (connectingFrom.value.type === toNode.type && connectingFrom.value.id === toNode.id) {\r\n    return;\r\n  }\r\n  \r\n  // 计算目标节点的中心点坐标\r\n  const toCenterCoords = getNodeCenterCoordinates(toNode);\r\n  const toX = toCenterCoords.x;\r\n  const toY = toCenterCoords.y;\r\n  \r\n  // 创建连线\r\n  const connection = {\r\n    id: Date.now() + Math.random(),\r\n    from: {\r\n      type: connectingFrom.value.type,\r\n      id: connectingFrom.value.id,\r\n      name: connectingFrom.value.name,\r\n      x: connectingFrom.value.x,\r\n      y: connectingFrom.value.y\r\n    },\r\n    to: {\r\n      type: toNode.type,\r\n      id: toNode.id,\r\n      name: toNode.name,\r\n      x: toX,\r\n      y: toY\r\n    }\r\n  };\r\n  \r\n  customConnections.value.push(connection);\r\n  \r\n  // 重置连线状态\r\n  isConnecting.value = false;\r\n  connectingFrom.value = null;\r\n  tempConnection.value = null;\r\n  \r\n  message.success(`已创建从 ${connection.from.name} 到 ${connection.to.name} 的连线`);\r\n};\r\n\r\nconst cancelConnection = () => {\r\n  isConnecting.value = false;\r\n  connectingFrom.value = null;\r\n  tempConnection.value = null;\r\n};\r\n\r\nconst removeConnection = (connectionId) => {\r\n  const index = customConnections.value.findIndex(conn => conn.id === connectionId);\r\n  if (index > -1) {\r\n    customConnections.value.splice(index, 1);\r\n    message.success('连线已删除');\r\n  }\r\n};\r\n\r\nconst clearAllConnections = () => {\r\n  Modal.confirm({\r\n    title: '确认清除',\r\n    content: '确定要清除所有自定义连线吗？',\r\n    onOk() {\r\n      customConnections.value = [];\r\n      message.success('已清除所有自定义连线');\r\n    }\r\n  });\r\n};\r\n\r\nconst getNodeCenter = (node) => {\r\n  return {\r\n    x: node.x + 60, // 节点宽度的一半\r\n    y: node.y + 40  // 节点高度的一半\r\n  };\r\n};\r\n\r\nconst onMouseMove = (event) => {\r\n  if (isConnecting.value && connectingFrom.value) {\r\n    const rect = event.currentTarget.getBoundingClientRect();\r\n    mousePosition.value = {\r\n      x: event.clientX - rect.left,\r\n      y: event.clientY - rect.top\r\n    };\r\n    \r\n    tempConnection.value = {\r\n      from: {\r\n        x: connectingFrom.value.x,\r\n        y: connectingFrom.value.y\r\n      },\r\n      to: {\r\n        x: mousePosition.value.x,\r\n        y: mousePosition.value.y\r\n      }\r\n    };\r\n  }\r\n};\r\n\r\n// 获取节点默认位置（围绕中心点排列）\r\nconst getDefaultNodePosition = (index) => {\r\n  // 获取业务中心节点的中心坐标\r\n  const businessCenter = getNodeCenterCoordinates({ type: 'business' });\r\n  const centerX = businessCenter.x;\r\n  const centerY = businessCenter.y;\r\n  const radius = 150; // 围绕中心的半径\r\n  const totalNodes = relatedIPs.value.length;\r\n  \r\n  if (totalNodes === 1) {\r\n    // 单个节点放在中心右侧\r\n    return { x: centerX + 120, y: centerY - 40 };\r\n  }\r\n  \r\n  // 多个节点围绕中心排列\r\n  const angle = (2 * Math.PI * index) / totalNodes;\r\n  const x = centerX + radius * Math.cos(angle) - 60; // 减去节点宽度的一半\r\n  const y = centerY + radius * Math.sin(angle) - 40; // 减去节点高度的一半\r\n  \r\n  return { x: Math.max(0, x), y: Math.max(0, y) };\r\n};\r\n\r\nconst resetNodePositions = () => {\r\n  relatedIPs.value.forEach((ip, index) => {\r\n    const pos = getDefaultNodePosition(index);\r\n    ip.x = pos.x;\r\n    ip.y = pos.y;\r\n  });\r\n  message.success('节点位置已重置');\r\n};\r\n\r\n// 处理侧边栏节点点击事件\r\nconst handleSidebarNodeClick = (event, ip) => {\r\n  // 如果刚刚完成拖拽，不触发连线\r\n  if (isDragging.value) {\r\n    return;\r\n  }\r\n  \r\n  // 检查是否已在画布中\r\n  const existsInCanvas = canvasIPs.value.find(canvasIP => canvasIP.id === ip.id);\r\n  if (existsInCanvas) {\r\n    message.info('该IP节点已在画布中');\r\n    return;\r\n  }\r\n  \r\n  // 显示IP详情或其他操作\r\n  console.log('点击侧边栏IP节点:', ip);\r\n};\r\n\r\n// 处理画布节点点击事件\r\nconst handleCanvasNodeClick = (event, ip) => {\r\n  // 如果刚刚完成拖拽，不触发连线\r\n  if (isDragging.value) {\r\n    return;\r\n  }\r\n  \r\n  // 触发连线\r\n  startConnection({ \r\n    type: 'ip', \r\n    id: ip.id, \r\n    name: ip.ip_address, \r\n    x: ip.x, \r\n    y: ip.y \r\n  });\r\n};\r\n\r\n// 从画布移除IP节点\r\nconst removeCanvasNode = (ipId) => {\r\n  const index = canvasIPs.value.findIndex(ip => ip.id === ipId);\r\n  if (index !== -1) {\r\n    canvasIPs.value.splice(index, 1);\r\n    \r\n    // 移除相关连线\r\n    customConnections.value = customConnections.value.filter(conn => \r\n      !(conn.from.id === ipId || conn.to.id === ipId)\r\n    );\r\n    \r\n    message.success('已从画布移除IP节点');\r\n  }\r\n};\r\n\r\n// 处理业务节点点击事件\r\nconst handleBusinessNodeClick = (event) => {\r\n  // 如果刚刚完成拖拽，不触发连线\r\n  if (isDragging.value) {\r\n    return;\r\n  }\r\n  \r\n  // 触发连线\r\n  startConnection({ type: 'business', id: businessInfo.value.id, name: businessInfo.value.name });\r\n};\r\n\r\nconst startDrag = (event, ip) => {\r\n  if (isConnecting.value) return; // 连线模式下不允许拖拽\r\n  \r\n  isDragging.value = true;\r\n  dragTarget.value = ip;\r\n  \r\n  // 获取容器的位置\r\n  const container = document.querySelector('.main-canvas');\r\n  if (!container) return;\r\n  \r\n  const containerRect = container.getBoundingClientRect();\r\n  \r\n  // 设置较小的偏移，让节点中心跟随鼠标\r\n  dragOffset.value = {\r\n    x: 60, // 节点宽度的一半\r\n    y: 40  // 节点高度的一半\r\n  };\r\n  \r\n  document.addEventListener('mousemove', onDrag);\r\n  document.addEventListener('mouseup', stopDrag);\r\n  event.preventDefault();\r\n  event.stopPropagation();\r\n};\r\n\r\n// 从侧边栏拖拽IP节点到画布\r\nconst startDragFromSidebar = (event, ip) => {\r\n  if (isConnecting.value) return; // 连线模式下不允许拖拽\r\n  \r\n  // 检查IP是否已经在画布中\r\n  const existingIndex = canvasIPs.value.findIndex(canvasIP => canvasIP.id === ip.id);\r\n  if (existingIndex !== -1) {\r\n    message.warning('该IP节点已在画布中');\r\n    return;\r\n  }\r\n  \r\n  // 创建新的画布IP节点\r\n  const newCanvasIP = {\r\n    ...ip,\r\n    x: 100, // 默认位置\r\n    y: 100\r\n  };\r\n  \r\n  canvasIPs.value.push(newCanvasIP);\r\n  \r\n  isDragging.value = true;\r\n  dragTarget.value = newCanvasIP;\r\n  \r\n  // 设置较小的偏移，让节点中心跟随鼠标\r\n  dragOffset.value = {\r\n    x: 60, // 节点宽度的一半\r\n    y: 40  // 节点高度的一半\r\n  };\r\n  \r\n  document.addEventListener('mousemove', onCanvasDrag);\r\n  document.addEventListener('mouseup', stopCanvasDrag);\r\n  event.preventDefault();\r\n  event.stopPropagation();\r\n};\r\n\r\n// 业务中心节点拖拽处理\r\nconst startBusinessDrag = (event) => {\r\n  if (isConnecting.value) return; // 连线模式下不允许拖拽\r\n  \r\n  isDragging.value = true;\r\n  dragTarget.value = { type: 'business', data: businessInfo.value };\r\n  \r\n  // 获取容器的位置\r\n  const container = document.querySelector('.enhanced-topology');\r\n  if (!container) return;\r\n  \r\n  const containerRect = container.getBoundingClientRect();\r\n  \r\n  // 设置较小的偏移，让节点中心跟随鼠标\r\n  dragOffset.value = {\r\n    x: 60, // 节点宽度的一半\r\n    y: 40  // 节点高度的一半\r\n  };\r\n  \r\n  document.addEventListener('mousemove', onBusinessDrag);\r\n  document.addEventListener('mouseup', stopBusinessDrag);\r\n  event.preventDefault();\r\n  event.stopPropagation();\r\n};\r\n\r\nconst onDrag = (event) => {\r\n  if (!isDragging.value || !dragTarget.value) return;\r\n  \r\n  const container = document.querySelector('.main-canvas');\r\n  if (!container) return;\r\n  \r\n  const rect = container.getBoundingClientRect();\r\n  \r\n  // 计算新位置（鼠标位置减去偏移量）\r\n  const newX = event.clientX - rect.left - dragOffset.value.x;\r\n  const newY = event.clientY - rect.top - dragOffset.value.y;\r\n  \r\n  // 限制在容器范围内\r\n  dragTarget.value.x = Math.max(0, Math.min(newX, rect.width - 120));\r\n  dragTarget.value.y = Math.max(0, Math.min(newY, rect.height - 80));\r\n  \r\n  // 更新相关的自定义连线\r\n  const centerCoords = getNodeCenterCoordinates(dragTarget.value);\r\n  customConnections.value.forEach(connection => {\r\n    if (connection.from.type === 'ip' && connection.from.id === dragTarget.value.id) {\r\n      connection.from.x = centerCoords.x;\r\n      connection.from.y = centerCoords.y;\r\n    }\r\n    if (connection.to.type === 'ip' && connection.to.id === dragTarget.value.id) {\r\n      connection.to.x = centerCoords.x;\r\n      connection.to.y = centerCoords.y;\r\n    }\r\n  });\r\n};\r\n\r\nconst stopDrag = () => {\r\n  document.removeEventListener('mousemove', onDrag);\r\n  document.removeEventListener('mouseup', stopDrag);\r\n  \r\n  // 延迟重置拖拽状态，避免立即触发点击事件\r\n  setTimeout(() => {\r\n    isDragging.value = false;\r\n    dragTarget.value = null;\r\n  }, 100);\r\n};\r\n\r\n// 画布IP节点拖拽移动\r\nconst onCanvasDrag = (event) => {\r\n  if (!isDragging.value || !dragTarget.value) return;\r\n  \r\n  const container = document.querySelector('.main-canvas');\r\n  if (!container) return;\r\n  \r\n  const rect = container.getBoundingClientRect();\r\n  \r\n  // 计算新位置（鼠标位置减去偏移量）\r\n  const newX = event.clientX - rect.left - dragOffset.value.x;\r\n  const newY = event.clientY - rect.top - dragOffset.value.y;\r\n  \r\n  // 限制在容器范围内\r\n  dragTarget.value.x = Math.max(0, Math.min(newX, rect.width - 120));\r\n  dragTarget.value.y = Math.max(0, Math.min(newY, rect.height - 80));\r\n  \r\n  // 更新相关的自定义连线\r\n  const centerCoords = getNodeCenterCoordinates(dragTarget.value);\r\n  customConnections.value.forEach(connection => {\r\n    if (connection.from.type === 'ip' && connection.from.id === dragTarget.value.id) {\r\n      connection.from.x = centerCoords.x;\r\n      connection.from.y = centerCoords.y;\r\n    }\r\n    if (connection.to.type === 'ip' && connection.to.id === dragTarget.value.id) {\r\n      connection.to.x = centerCoords.x;\r\n      connection.to.y = centerCoords.y;\r\n    }\r\n  });\r\n};\r\n\r\n// 停止画布IP节点拖拽\r\nconst stopCanvasDrag = () => {\r\n  document.removeEventListener('mousemove', onCanvasDrag);\r\n  document.removeEventListener('mouseup', stopCanvasDrag);\r\n  \r\n  // 延迟重置拖拽状态，避免立即触发点击事件\r\n  setTimeout(() => {\r\n    isDragging.value = false;\r\n    dragTarget.value = null;\r\n  }, 100);\r\n};\r\n\r\n// 业务中心节点拖拽移动\r\nconst onBusinessDrag = (event) => {\r\n  if (!isDragging.value || !dragTarget.value || dragTarget.value.type !== 'business') return;\r\n  \r\n  const container = document.querySelector('.main-canvas');\r\n  if (!container) return;\r\n  \r\n  const rect = container.getBoundingClientRect();\r\n  \r\n  // 计算新位置（鼠标位置减去偏移量）\r\n  const newX = event.clientX - rect.left - dragOffset.value.x;\r\n  const newY = event.clientY - rect.top - dragOffset.value.y;\r\n  \r\n  // 限制在容器范围内\r\n  businessInfo.value.x = Math.max(0, Math.min(newX, rect.width - 120));\r\n  businessInfo.value.y = Math.max(0, Math.min(newY, rect.height - 80));\r\n  \r\n  // 更新相关的自定义连线\r\n  const centerCoords = getNodeCenterCoordinates({ type: 'business' });\r\n  customConnections.value.forEach(connection => {\r\n    if (connection.from.type === 'business') {\r\n      connection.from.x = centerCoords.x;\r\n      connection.from.y = centerCoords.y;\r\n    }\r\n    if (connection.to.type === 'business') {\r\n      connection.to.x = centerCoords.x;\r\n      connection.to.y = centerCoords.y;\r\n    }\r\n  });\r\n};\r\n\r\n// 业务中心节点停止拖拽\r\nconst stopBusinessDrag = () => {\r\n  document.removeEventListener('mousemove', onBusinessDrag);\r\n  document.removeEventListener('mouseup', stopBusinessDrag);\r\n  \r\n  // 延迟重置拖拽状态，避免立即触发点击事件\r\n  setTimeout(() => {\r\n    isDragging.value = false;\r\n    dragTarget.value = null;\r\n  }, 100);\r\n};\r\n\r\nconst getServiceIcon = (serviceType) => {\r\n  const icons = {\r\n    'web': 'GlobalOutlined',\r\n    'database': 'DatabaseOutlined',\r\n    'cache': 'ThunderboltOutlined',\r\n    'message_queue': 'MessageOutlined',\r\n    'file_storage': 'FolderOutlined',\r\n    'monitoring': 'EyeOutlined',\r\n    'other': 'SettingOutlined'\r\n  };\r\n  return icons[serviceType] || 'SettingOutlined';\r\n};\r\n\r\n// 生命周期\r\nonMounted(() => {\r\n  fetchBusinessDetail();\r\n  fetchRelatedIPs();\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.business-detail {\r\n  min-height: 100vh;\r\n}\r\n\r\n.page-header {\r\n  margin-bottom: 24px;\r\n}\r\n\r\n.header-content {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  background: white;\r\n  padding: 16px 24px;\r\n  border-radius: 8px;\r\n}\r\n\r\n.header-left {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.back-btn {\r\n  margin-right: 16px;\r\n  color: #666;\r\n}\r\n\r\n.page-title {\r\n  margin: 0;\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  color: #262626;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.title-icon {\r\n  margin-right: 8px;\r\n  color: #1890ff;\r\n}\r\n\r\n.info-section,\r\n.ip-section,\r\n.topology-section {\r\n  margin-bottom: 24px;\r\n}\r\n\r\n.info-item {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.label {\r\n  font-weight: 500;\r\n  color: #666;\r\n  margin-right: 8px;\r\n  min-width: 80px;\r\n}\r\n\r\n.value {\r\n  color: #262626;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.icon {\r\n  margin-right: 4px;\r\n  color: #1890ff;\r\n}\r\n\r\n.no-data {\r\n  color: #ccc;\r\n}\r\n\r\n.function-purpose-text {\r\n  line-height: 1.6;\r\n  color: #262626;\r\n}\r\n\r\n.section-title {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.count-badge {\r\n  margin-left: 8px;\r\n}\r\n\r\n.ip-info {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.ping-status {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.status-dot {\r\n  width: 8px;\r\n  height: 8px;\r\n  border-radius: 50%;\r\n  margin-right: 6px;\r\n  animation: pulse 2s infinite;\r\n}\r\n\r\n.status-dot.online {\r\n  background-color: #52c41a;\r\n}\r\n\r\n.status-dot.offline {\r\n  background-color: #ff4d4f;\r\n}\r\n\r\n.status-dot.timeout {\r\n  background-color: #faad14;\r\n}\r\n\r\n@keyframes pulse {\r\n  0% {\r\n    box-shadow: 0 0 0 0 rgba(82, 196, 26, 0.7);\r\n  }\r\n  70% {\r\n    box-shadow: 0 0 0 10px rgba(82, 196, 26, 0);\r\n  }\r\n  100% {\r\n    box-shadow: 0 0 0 0 rgba(82, 196, 26, 0);\r\n  }\r\n}\r\n\r\n.topology-container {\r\n  min-height: 300px;\r\n  width: 100%;\r\n  overflow-x: auto;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 16px;\r\n}\r\n\r\n.topology-loading {\r\n  text-align: center;\r\n  color: #666;\r\n}\r\n\r\n.topology-placeholder {\r\n  text-align: center;\r\n  color: #666;\r\n}\r\n\r\n.topology-icon {\r\n  font-size: 48px;\r\n  color: #1890ff;\r\n  margin-bottom: 16px;\r\n}\r\n\r\n.topology-desc {\r\n  color: #999;\r\n  margin-bottom: 24px;\r\n}\r\n\r\n.simple-topology {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 24px;\r\n}\r\n\r\n.business-node {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 16px;\r\n  background: #e6f7ff;\r\n  border: 2px solid #1890ff;\r\n  border-radius: 8px;\r\n  font-weight: 500;\r\n}\r\n\r\n/* 增强拓扑图样式 - 蓝色简约风格 */\r\n.topology-layout {\r\n  display: flex;\r\n  width: 100%;\r\n  height: 600px;\r\n  border: 2px solid #1890ff;\r\n  border-radius: 12px;\r\n  overflow: hidden;\r\n  box-shadow: 0 4px 16px rgba(24, 144, 255, 0.1);\r\n  margin: 16px 0;\r\n}\r\n\r\n.ip-nodes-sidebar {\r\n  width: 250px;\r\n  background: linear-gradient(180deg, #f0f8ff 0%, #e6f3ff 100%);\r\n  border-right: 1px solid #d9d9d9;\r\n  padding: 16px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.sidebar-title {\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  color: #1890ff;\r\n  margin-bottom: 12px;\r\n  text-align: center;\r\n}\r\n\r\n.sidebar-ip-node {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 8px 12px;\r\n  margin-bottom: 8px;\r\n  background: white;\r\n  border: 1px solid #d9d9d9;\r\n  border-radius: 6px;\r\n  cursor: grab;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.sidebar-ip-node:hover {\r\n  border-color: #1890ff;\r\n  box-shadow: 0 2px 8px rgba(24, 144, 255, 0.15);\r\n}\r\n\r\n.sidebar-ip-node:active {\r\n  cursor: grabbing;\r\n}\r\n\r\n.main-canvas {\r\n  flex: 1;\r\n  position: relative;\r\n  background: linear-gradient(135deg, #f8fbff 0%, #f0f7ff 50%, #e8f3ff 100%);\r\n  overflow: visible;\r\n}\r\n\r\n.enhanced-topology {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 600px;\r\n  background: linear-gradient(135deg, #f8fbff 0%, #f0f7ff 50%, #e8f3ff 100%);\r\n  border: 1px solid rgba(0, 102, 255, 0.2);\r\n  border-radius: 20px;\r\n  overflow: visible;\r\n  box-shadow: 0 8px 32px rgba(0, 102, 255, 0.1), inset 0 1px 0 rgba(255, 255, 255, 0.8);\r\n  margin: 16px 0;\r\n  backdrop-filter: blur(10px);\r\n}\r\n\r\n\r\n\r\n.topology-network {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.connection-lines {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  pointer-events: none;\r\n}\r\n\r\n.connection-lines line {\r\n  pointer-events: stroke;\r\n}\r\n\r\n.connection-line {\r\n  transition: all 0.3s ease;\r\n  filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.1));\r\n}\r\n\r\n.connection-line.success {\r\n  stroke: #52c41a;\r\n  animation: pulse-success 2s infinite;\r\n}\r\n\r\n.connection-line.failed {\r\n  stroke: #ff4d4f;\r\n  animation: pulse-failed 2s infinite;\r\n}\r\n\r\n.connection-line.timeout {\r\n  stroke: #faad14;\r\n  animation: pulse-timeout 2s infinite;\r\n}\r\n\r\n@keyframes pulse-success {\r\n  0%, 100% { opacity: 0.6; }\r\n  50% { opacity: 1; }\r\n}\r\n\r\n@keyframes pulse-failed {\r\n  0%, 100% { opacity: 0.4; }\r\n  50% { opacity: 0.8; }\r\n}\r\n\r\n@keyframes pulse-timeout {\r\n  0%, 100% { opacity: 0.5; }\r\n  50% { opacity: 0.9; }\r\n}\r\n\r\n.center-node {\r\n  position: absolute;\r\n  width: 120px;\r\n  height: 120px;\r\n  background: linear-gradient(135deg, #1890ff 0%, #40a9ff 100%);\r\n  border-radius: 50%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: white;\r\n  font-weight: 600;\r\n  box-shadow: 0 6px 20px rgba(24, 144, 255, 0.3);\r\n  border: 3px solid #ffffff;\r\n  transition: all 0.3s ease;\r\n  z-index: 10;\r\n}\r\n\r\n.center-node:hover {\r\n  box-shadow: 0 8px 24px rgba(24, 144, 255, 0.4);\r\n}\r\n\r\n.business-center {\r\n  background: linear-gradient(135deg, #1890ff 0%, #40a9ff 100%);\r\n}\r\n\r\n.ip-topology-node {\r\n  position: absolute;\r\n  width: 80px;\r\n  height: 80px;\r\n  background: #ffffff;\r\n  border-radius: 12px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #1890ff;\r\n  font-size: 11px;\r\n  font-weight: 500;\r\n  box-shadow: 0 4px 12px rgba(24, 144, 255, 0.15);\r\n  border: 2px solid #1890ff;\r\n  transition: all 0.3s ease;\r\n  cursor: move;\r\n  user-select: none;\r\n  z-index: 5;\r\n}\r\n\r\n.ip-topology-node:hover {\r\n  box-shadow: 0 6px 16px rgba(24, 144, 255, 0.25);\r\n  background: #f0f8ff;\r\n}\r\n\r\n.ip-topology-node.success {\r\n  background: #f6ffed;\r\n  border-color: #52c41a;\r\n  color: #52c41a;\r\n}\r\n\r\n.ip-topology-node.failed {\r\n  background: #fff2f0;\r\n  border-color: #ff4d4f;\r\n  color: #ff4d4f;\r\n}\r\n\r\n.ip-topology-node.timeout {\r\n  background: #fffbe6;\r\n  border-color: #faad14;\r\n  color: #faad14;\r\n}\r\n\r\n.node-icon {\r\n  font-size: 24px;\r\n  margin-bottom: 4px;\r\n  opacity: 0.8;\r\n}\r\n\r\n.center-node .node-icon {\r\n  font-size: 32px;\r\n  color: rgba(255, 255, 255, 0.9);\r\n}\r\n\r\n.node-info {\r\n  text-align: center;\r\n  line-height: 1.2;\r\n}\r\n\r\n.node-title {\r\n  font-weight: 600;\r\n  font-size: 12px;\r\n  margin-bottom: 2px;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  max-width: 70px;\r\n}\r\n\r\n.center-node .node-title {\r\n  font-size: 14px;\r\n  color: rgba(255, 255, 255, 0.95);\r\n  max-width: 100px;\r\n}\r\n\r\n.node-subtitle {\r\n  font-size: 10px;\r\n  opacity: 0.7;\r\n  white-space: nowrap;\r\n}\r\n\r\n.center-node .node-subtitle {\r\n  color: rgba(255, 255, 255, 0.8);\r\n}\r\n\r\n.node-type {\r\n  font-size: 9px;\r\n  opacity: 0.6;\r\n  margin-top: 2px;\r\n}\r\n\r\n.node-status {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 4px;\r\n  font-size: 9px;\r\n  margin-top: 4px;\r\n  padding: 2px 6px;\r\n  border-radius: 10px;\r\n  background: rgba(255, 255, 255, 0.2);\r\n}\r\n\r\n.node-status.success {\r\n  color: #52c41a;\r\n  background: rgba(82, 196, 26, 0.1);\r\n}\r\n\r\n.node-status.failed {\r\n  color: #ff4d4f;\r\n  background: rgba(255, 77, 79, 0.1);\r\n}\r\n\r\n.node-status.timeout {\r\n  color: #faad14;\r\n  background: rgba(250, 173, 20, 0.1);\r\n}\r\n\r\n.status-dot {\r\n  width: 6px;\r\n  height: 6px;\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n}\r\n\r\n.status-dot.success {\r\n  background-color: #52c41a;\r\n  box-shadow: 0 0 6px rgba(82, 196, 26, 0.6);\r\n}\r\n\r\n.status-dot.failed {\r\n  background-color: #ff4d4f;\r\n  box-shadow: 0 0 6px rgba(255, 77, 79, 0.6);\r\n}\r\n\r\n.status-dot.timeout {\r\n  background-color: #faad14;\r\n  box-shadow: 0 0 6px rgba(250, 173, 20, 0.6);\r\n}\r\n\r\n/* 自定义连线相关样式 */\r\n.connecting-mode {\r\n  cursor: crosshair !important;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.connecting-mode:hover {\r\n  box-shadow: 0 0 15px rgba(24, 144, 255, 0.5);\r\n}\r\n\r\n.connecting-from {\r\n  border: 2px solid #1890ff;\r\n  box-shadow: 0 0 10px rgba(24, 144, 255, 0.6);\r\n  animation: pulse 1.5s infinite;\r\n}\r\n\r\n@keyframes pulse {\r\n  0% {\r\n    box-shadow: 0 0 10px rgba(24, 144, 255, 0.6);\r\n  }\r\n  50% {\r\n    box-shadow: 0 0 20px rgba(24, 144, 255, 0.8);\r\n  }\r\n  100% {\r\n    box-shadow: 0 0 10px rgba(24, 144, 255, 0.6);\r\n  }\r\n}\r\n\r\n.connecting-indicator {\r\n  position: absolute;\r\n  top: -25px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  background: #1890ff;\r\n  color: white;\r\n  padding: 2px 8px;\r\n  border-radius: 4px;\r\n  font-size: 10px;\r\n  white-space: nowrap;\r\n  z-index: 1000;\r\n}\r\n\r\n.connecting-indicator::after {\r\n  content: '';\r\n  position: absolute;\r\n  top: 100%;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  border: 4px solid transparent;\r\n  border-top-color: #1890ff;\r\n}\r\n\r\n/* 连线背景样式 */\r\n.connection-background {\r\n  opacity: 0.3;\r\n}\r\n\r\n/* 主连线样式 */\r\n.custom-connection-line {\r\n  transition: all 0.3s ease;\r\n  filter: url(#glow);\r\n}\r\n\r\n.custom-connection-line:hover {\r\n  stroke-width: 4;\r\n  filter: url(#glow) brightness(1.5);\r\n}\r\n\r\n/* 科技风连线动画 */\r\n.tech-line {\r\n  animation: techPulse 2s ease-in-out infinite;\r\n}\r\n\r\n@keyframes techPulse {\r\n  0%, 100% {\r\n    opacity: 0.8;\r\n    stroke-width: 3;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n    stroke-width: 3.5;\r\n  }\r\n}\r\n\r\n/* 流动光效动画 */\r\n.flow-effect {\r\n  animation: flowAnimation 2s linear infinite;\r\n  opacity: 0.7;\r\n}\r\n\r\n@keyframes flowAnimation {\r\n  0% {\r\n    stroke-dashoffset: 0;\r\n  }\r\n  100% {\r\n    stroke-dashoffset: 30;\r\n  }\r\n}\r\n\r\n/* 临时连线样式 */\r\n.temp-connection-line {\r\n  pointer-events: none;\r\n}\r\n\r\n.temp-connection-bg {\r\n  opacity: 0.2;\r\n}\r\n\r\n.tech-temp-line {\r\n  animation: tempLineFlow 1s linear infinite;\r\n}\r\n\r\n@keyframes tempLineFlow {\r\n  0% {\r\n    stroke-dashoffset: 0;\r\n    opacity: 0.6;\r\n  }\r\n  100% {\r\n    stroke-dashoffset: 12;\r\n    opacity: 0.9;\r\n  }\r\n}\r\n\r\n.topology-controls .ant-tag {\r\n  margin: 0;\r\n  animation: blink 1s infinite;\r\n}\r\n\r\n/* 头部控制标签样式 */\r\n.ant-card-extra .ant-tag {\r\n  margin: 2px;\r\n  font-size: 12px;\r\n  border-radius: 6px;\r\n  transition: all 0.3s ease;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.ant-card-extra .ant-tag:hover {\r\n  transform: translateY(-1px);\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);\r\n}\r\n\r\n.ant-card-extra .connecting-tip {\r\n  animation: blink 1s infinite;\r\n}\r\n\r\n@keyframes blink {\r\n  0%, 50% {\r\n    opacity: 1;\r\n  }\r\n  51%, 100% {\r\n    opacity: 0.5;\r\n  }\r\n}\r\n\r\n.ip-nodes {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 12px;\r\n  justify-content: center;\r\n  max-width: 600px;\r\n}\r\n\r\n.ip-node {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 8px 12px;\r\n  background: #f6ffed;\r\n  border: 1px solid #b7eb8f;\r\n  border-radius: 6px;\r\n  font-size: 12px;\r\n  min-width: 80px;\r\n}\r\n\r\n.ip-node.offline {\r\n  background: #fff2f0;\r\n  border-color: #ffccc7;\r\n}\r\n\r\n.ip-node.timeout {\r\n  background: #fffbe6;\r\n  border-color: #ffe58f;\r\n}\r\n\r\n.more-nodes {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 8px 12px;\r\n  background: #fafafa;\r\n  border: 1px dashed #d9d9d9;\r\n  border-radius: 6px;\r\n  color: #666;\r\n  font-size: 12px;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .business-detail {\r\n    padding: 16px;\r\n  }\r\n  \r\n  .header-content {\r\n    flex-direction: column;\r\n    gap: 16px;\r\n    align-items: stretch;\r\n  }\r\n  \r\n  .header-left {\r\n    justify-content: center;\r\n  }\r\n  \r\n  .info-item {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n  }\r\n  \r\n  .label {\r\n    margin-bottom: 4px;\r\n  }\r\n  \r\n  .ip-nodes {\r\n    max-width: 100%;\r\n  }\r\n}\r\n\r\n/* 自定义连线功能样式 */\r\n.connecting-mode {\r\n  cursor: crosshair;\r\n}\r\n\r\n.connecting-mode .ip-topology-node:hover,\r\n.connecting-mode .business-center-node:hover {\r\n  box-shadow: 0 0 20px rgba(0, 102, 255, 0.6);\r\n  border-color: rgba(0, 102, 255, 0.8);\r\n}\r\n\r\n.connecting-from {\r\n  animation: pulse 1.5s infinite;\r\n  box-shadow: 0 0 20px rgba(24, 144, 255, 0.8) !important;\r\n}\r\n\r\n@keyframes pulse {\r\n  0% {\r\n    box-shadow: 0 0 20px rgba(24, 144, 255, 0.8);\r\n  }\r\n  50% {\r\n    box-shadow: 0 0 30px rgba(24, 144, 255, 1);\r\n  }\r\n  100% {\r\n    box-shadow: 0 0 20px rgba(24, 144, 255, 0.8);\r\n  }\r\n}\r\n\r\n.connecting-indicator {\r\n  position: absolute;\r\n  top: -25px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  background: #1890ff;\r\n  color: white;\r\n  padding: 2px 8px;\r\n  border-radius: 4px;\r\n  font-size: 10px;\r\n  white-space: nowrap;\r\n  z-index: 10;\r\n}\r\n\r\n.connecting-indicator::after {\r\n  content: '';\r\n  position: absolute;\r\n  top: 100%;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  border: 4px solid transparent;\r\n  border-top-color: #1890ff;\r\n}\r\n\r\n.custom-connection-line {\r\n  cursor: pointer;\r\n  transition: stroke-width 0.2s;\r\n}\r\n\r\n.custom-connection-line:hover {\r\n  stroke-width: 5;\r\n  stroke: #ff4d4f;\r\n}\r\n\r\n.temp-connection-line {\r\n  pointer-events: none;\r\n}\r\n\r\n\r\n\r\n@keyframes blink {\r\n  0%, 50% {\r\n    opacity: 1;\r\n  }\r\n  51%, 100% {\r\n    opacity: 0.5;\r\n  }\r\n}\r\n\r\n.business-center-node {\r\n  position: absolute;\r\n  width: 120px;\r\n  height: 80px;\r\n  background: #1890ff;\r\n  border-radius: 8px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: white;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n  border: 1px solid #1890ff;\r\n  z-index: 5;\r\n}\r\n\r\n.business-center-node:hover {\r\n  background: #40a9ff;\r\n  border-color: #40a9ff;\r\n}\r\n\r\n.business-center-node .node-icon {\r\n  font-size: 24px;\r\n  margin-bottom: 4px;\r\n}\r\n\r\n.business-center-node .node-info {\r\n  text-align: center;\r\n}\r\n\r\n.business-center-node .node-title {\r\n  font-size: 12px;\r\n  font-weight: 600;\r\n  margin-bottom: 2px;\r\n}\r\n\r\n.business-center-node .node-subtitle {\r\n  font-size: 10px;\r\n  opacity: 0.8;\r\n}\r\n.topology-content{\r\n  width: 100%;\r\n}\r\n\r\n/* 画布中的IP节点样式 */\r\n.canvas-ip-node {\r\n  position: absolute;\r\n  width: 120px;\r\n  height: 80px;\r\n  background: #f0f8ff;\r\n  border-radius: 6px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #1890ff;\r\n  font-size: 11px;\r\n  font-weight: 600;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n  border: 1px solid #d9d9d9;\r\n  transition: all 0.2s ease;\r\n  cursor: move;\r\n  user-select: none;\r\n  z-index: 5;\r\n}\r\n\r\n\r\n\r\n.canvas-ip-node:hover {\r\n  background: #e6f7ff;\r\n  border-color: #1890ff;\r\n}\r\n\r\n.canvas-ip-node.success {\r\n  background: #f6ffed;\r\n  border-color: #52c41a;\r\n  color: #389e0d;\r\n}\r\n\r\n.canvas-ip-node.failed {\r\n  background: #fff2f0;\r\n  border-color: #ff4d4f;\r\n  color: #cf1322;\r\n}\r\n\r\n.canvas-ip-node.timeout {\r\n  background: #fffbe6;\r\n  border-color: #faad14;\r\n  color: #d48806;\r\n}\r\n\r\n.canvas-ip-node.connecting-from {\r\n  background: #e6f7ff;\r\n  border-color: #1890ff;\r\n  color: #1890ff;\r\n  border-width: 2px;\r\n}\r\n\r\n.canvas-ip-node .node-icon {\r\n  font-size: 24px;\r\n  margin-bottom: 4px;\r\n  opacity: 0.8;\r\n}\r\n\r\n.canvas-ip-node .node-info {\r\n  text-align: center;\r\n  line-height: 1.2;\r\n}\r\n\r\n.canvas-ip-node .node-title {\r\n  font-weight: 600;\r\n  font-size: 12px;\r\n  margin-bottom: 2px;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  max-width: 100px;\r\n}\r\n\r\n.canvas-ip-node .node-subtitle {\r\n  font-size: 10px;\r\n  opacity: 0.7;\r\n  white-space: nowrap;\r\n}\r\n\r\n.canvas-ip-node .node-status {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 4px;\r\n  font-size: 9px;\r\n  margin-top: 4px;\r\n  padding: 2px 6px;\r\n  border-radius: 10px;\r\n  background: rgba(255, 255, 255, 0.2);\r\n}\r\n\r\n.canvas-ip-node .status-dot {\r\n  width: 6px;\r\n  height: 6px;\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n}\r\n\r\n.canvas-ip-node.success .status-dot {\r\n  background: #52c41a;\r\n}\r\n\r\n.canvas-ip-node.failed .status-dot {\r\n  background: #ff4d4f;\r\n}\r\n\r\n.canvas-ip-node.timeout .status-dot {\r\n  background: #faad14;\r\n}\r\n\r\n.canvas-ip-node .connecting-indicator {\r\n  position: absolute;\r\n  top: -8px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  background: #1890ff;\r\n  color: white;\r\n  padding: 2px 8px;\r\n  border-radius: 4px;\r\n  font-size: 10px;\r\n  white-space: nowrap;\r\n  z-index: 10;\r\n}\r\n\r\n.canvas-ip-node .connecting-indicator::after {\r\n  content: '';\r\n  position: absolute;\r\n  top: 100%;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  border: 4px solid transparent;\r\n  border-top-color: #1890ff;\r\n}\r\n\r\n/* 删除按钮样式 */\r\n.node-remove-btn {\r\n  position: absolute;\r\n  top: -8px;\r\n  right: -8px;\r\n  width: 20px;\r\n  height: 20px;\r\n  background: #ff4d4f;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: white;\r\n  font-size: 10px;\r\n  cursor: pointer;\r\n  opacity: 0;\r\n  transition: all 0.2s ease;\r\n  z-index: 10;\r\n}\r\n\r\n.canvas-ip-node:hover .node-remove-btn {\r\n  opacity: 1;\r\n}\r\n\r\n.node-remove-btn:hover {\r\n  background: #ff7875;\r\n  transform: scale(1.1);\r\n}\r\n\r\n/* 优化侧边栏样式 */\r\n.sidebar-header {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n\r\n.sidebar-title {\r\n  margin: 0;\r\n  color: #1890ff;\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n}\r\n\r\n.node-count {\r\n  color: #666;\r\n  font-size: 12px;\r\n  background: #f0f0f0;\r\n  padding: 2px 8px;\r\n  border-radius: 12px;\r\n}\r\n\r\n.sidebar-ip-node:hover {\r\n  transform: translateY(-1px);\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}