{"ast":null,"code":"import { ref, reactive, onMounted, computed } from 'vue';\nimport { message } from 'ant-design-vue';\nimport { ContactsOutlined, ExportOutlined, PlusOutlined, SearchOutlined, ReloadOutlined, EyeOutlined, EditOutlined, DeleteOutlined, PhoneOutlined, MailOutlined, ApartmentOutlined } from '@ant-design/icons-vue';\nimport dayjs from 'dayjs';\nimport { getEmployees, getEmployeeDetail, createEmployee, updateEmployee, deleteEmployee, getDepartmentEmployees, getPositionEmployees, getAvailableUsers, changeEmployeeStatus } from '@/api/organization';\nimport { getDepartments, getPositions } from '@/api/organization';\n\n// 响应式数据\n\nexport default {\n  __name: 'AdminEmployees',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const loading = ref(false);\n    const searchText = ref('');\n    const statusFilter = ref('');\n    const departmentFilter = ref('');\n    const positionFilter = ref('');\n    const activeCategory = ref('all');\n    const modalVisible = ref(false);\n    const detailModalVisible = ref(false);\n    const isEdit = ref(false);\n    const selectedEmployee = ref(null);\n    const formRef = ref();\n\n    // 表单数据\n    const formData = reactive({\n      name: '',\n      employee_id: '',\n      user: null,\n      department: null,\n      position: null,\n      supervisor: null,\n      phone: '',\n      email: '',\n      hire_date: null,\n      notes: ''\n    });\n\n    // 表单验证规则\n    const formRules = {\n      name: [{\n        required: true,\n        message: '请输入员工姓名',\n        trigger: 'blur'\n      }],\n      employee_id: [{\n        required: true,\n        message: '请输入员工工号',\n        trigger: 'blur'\n      }],\n      department: [{\n        required: true,\n        message: '请选择所属部门',\n        trigger: 'change'\n      }],\n      position: [{\n        required: true,\n        message: '请选择职位',\n        trigger: 'change'\n      }],\n      status: [{\n        required: true,\n        message: '请选择员工状态',\n        trigger: 'change'\n      }],\n      phone: [{\n        pattern: /^1[3-9]\\d{9}$/,\n        message: '请输入正确的手机号码',\n        trigger: 'blur'\n      }],\n      email: [{\n        type: 'email',\n        message: '请输入正确的邮箱地址',\n        trigger: 'blur'\n      }]\n    };\n\n    // 数据\n    const employeeList = ref([]);\n    const userList = ref([]);\n    const departmentList = ref([]);\n    const positionList = ref([]);\n\n    // 分类列表\n    const categoryList = ref([]);\n\n    // 表格列定义\n    const columns = [{\n      title: '员工姓名',\n      key: 'employee_info',\n      width: 200\n    }, {\n      title: '所属部门',\n      dataIndex: 'department_name',\n      key: 'department_name',\n      width: 120\n    }, {\n      title: '职位',\n      dataIndex: 'position_name',\n      key: 'position_name',\n      width: 150\n    }, {\n      title: '直属上级',\n      dataIndex: 'supervisor_name',\n      key: 'supervisor_name',\n      width: 120\n    }, {\n      title: '联系方式',\n      key: 'contact',\n      width: 180\n    }, {\n      title: '入职日期',\n      dataIndex: 'hire_date',\n      key: 'hire_date',\n      width: 120\n    }, {\n      title: '操作',\n      key: 'action',\n      width: 150,\n      fixed: 'right'\n    }];\n\n    // 分页配置\n    const pagination = reactive({\n      current: 1,\n      pageSize: 10,\n      total: 0,\n      showSizeChanger: true,\n      showQuickJumper: true,\n      showTotal: (total, range) => `第 ${range[0]}-${range[1]} 条，共 ${total} 条`\n    });\n\n    // 计算属性\n    const modalTitle = computed(() => {\n      return isEdit.value ? '编辑员工' : '新建员工';\n    });\n    const filteredPositions = computed(() => {\n      console.log('positionList:', positionList.value);\n      console.log('formData.department:', formData.department);\n      if (!Array.isArray(positionList.value)) return [];\n\n      // 如果没有选择部门，返回所有职位\n      if (!formData.department) {\n        return positionList.value;\n      }\n\n      // 根据选择的部门过滤职位\n      const filtered = positionList.value.filter(pos => {\n        console.log('pos.department:', pos.department, 'pos.department?.id:', pos.department?.id);\n        return pos.department?.id === formData.department;\n      });\n      console.log('filtered positions:', filtered);\n      return filtered;\n    });\n\n    // 方法\n    const getAvatarColor = name => {\n      const colors = ['#f56a00', '#7265e6', '#ffbf00', '#00a2ae', '#87d068'];\n      const index = name.charCodeAt(0) % colors.length;\n      return colors[index];\n    };\n    const getStatusColor = status => {\n      const colors = {\n        'active': 'green',\n        'inactive': 'red',\n        'probation': 'orange'\n      };\n      return colors[status] || 'default';\n    };\n    const getStatusText = status => {\n      const texts = {\n        'active': '在职',\n        'inactive': '离职',\n        'probation': '试用期'\n      };\n      return texts[status] || '未知';\n    };\n    const handleCategoryChange = key => {\n      activeCategory.value = key;\n      // 根据选择的分类设置部门筛选\n      if (key === 'all') {\n        departmentFilter.value = '';\n      } else {\n        departmentFilter.value = key;\n      }\n      loadEmployees();\n    };\n    const handleSearch = () => {\n      loadEmployees();\n    };\n    const handleSearchChange = () => {\n      if (!searchText.value) {\n        loadEmployees();\n      }\n    };\n    const handleFilterChange = () => {\n      loadEmployees();\n    };\n    const handleDepartmentChange = () => {\n      formData.position = null; // 清空职位选择\n      console.log('部门选择变更:', formData.department);\n    };\n    const resetFilters = () => {\n      searchText.value = '';\n      statusFilter.value = '';\n      departmentFilter.value = '';\n      positionFilter.value = '';\n      activeCategory.value = 'all';\n      // 重置部门分类时也要重置部门筛选\n      departmentFilter.value = '';\n      loadEmployees();\n    };\n    const handleTableChange = (pag, filters, sorter) => {\n      pagination.current = pag.current;\n      pagination.pageSize = pag.pageSize;\n      loadEmployees();\n    };\n    const loadEmployees = async () => {\n      loading.value = true;\n      try {\n        const response = await getEmployees({\n          page: pagination.current,\n          page_size: pagination.pageSize,\n          search: searchText.value,\n          status: statusFilter.value,\n          department: departmentFilter.value,\n          position: positionFilter.value\n        });\n        const results = response.data?.results || response.results || [];\n        employeeList.value = Array.isArray(results) ? results : [];\n        pagination.total = response.data?.total || response.total || response.count || 0;\n      } catch (error) {\n        console.error('加载员工列表失败:', error);\n        message.error('加载员工列表失败');\n      } finally {\n        loading.value = false;\n      }\n    };\n    const showAddModal = () => {\n      isEdit.value = false;\n      resetForm();\n      modalVisible.value = true;\n    };\n    const editEmployee = record => {\n      isEdit.value = true;\n      Object.assign(formData, {\n        id: record.id,\n        name: record.name,\n        employee_id: record.employee_id,\n        user: record.user?.id || null,\n        department: record.department?.id || null,\n        position: record.position?.id || null,\n        supervisor: record.direct_supervisor?.id || null,\n        phone: record.phone || record.mobile,\n        email: record.email,\n        hire_date: record.hire_date ? dayjs(record.hire_date) : null,\n        notes: record.notes\n      });\n      modalVisible.value = true;\n    };\n    const viewEmployee = record => {\n      selectedEmployee.value = record;\n      detailModalVisible.value = true;\n    };\n    const handleDeleteEmployee = async record => {\n      try {\n        await deleteEmployee(record.id);\n        message.success('删除成功');\n        loadEmployees();\n      } catch (error) {\n        console.error('删除员工失败:', error);\n        message.error('删除失败');\n      }\n    };\n    const handleModalOk = async () => {\n      try {\n        await formRef.value.validate();\n        console.log('提交前的formData:', formData);\n\n        // 格式化数据，将前端字段名转换为后端API期望的字段名\n        const submitData = {\n          name: formData.name,\n          employee_id: formData.employee_id,\n          user_id: formData.user,\n          department_id: formData.department,\n          position_id: formData.position,\n          direct_supervisor_id: formData.supervisor,\n          phone: formData.phone,\n          mobile: formData.phone,\n          // 后端使用mobile字段\n          email: formData.email,\n          office_location: null,\n          hire_date: formData.hire_date ? formData.hire_date.format('YYYY-MM-DD') : null,\n          probation_end_date: null,\n          contract_type: 'full_time',\n          employment_status: 'probation',\n          emergency_contact_name: null,\n          emergency_contact_phone: null,\n          notes: formData.notes || ''\n        };\n        if (isEdit.value) {\n          // 编辑时需要包含ID\n          const updateData = {\n            ...submitData,\n            id: formData.id\n          };\n          await updateEmployee(formData.id, updateData);\n          message.success('更新成功');\n        } else {\n          await createEmployee(submitData);\n          message.success('创建成功');\n        }\n        modalVisible.value = false;\n        loadEmployees();\n      } catch (error) {\n        console.error('保存员工失败:', error);\n\n        // 处理表单验证错误\n        if (error.errorFields) {\n          message.error('请检查表单输入');\n          return;\n        }\n\n        // 处理API返回的错误\n        if (error.response && error.response.data) {\n          const errorData = error.response.data;\n\n          // 处理字段特定错误\n          if (errorData.employee_id && Array.isArray(errorData.employee_id)) {\n            message.error(`员工工号错误: ${errorData.employee_id[0]}`);\n            return;\n          }\n          if (errorData.name && Array.isArray(errorData.name)) {\n            message.error(`员工姓名错误: ${errorData.name[0]}`);\n            return;\n          }\n          if (errorData.user && Array.isArray(errorData.user)) {\n            message.error(`关联用户错误: ${errorData.user[0]}`);\n            return;\n          }\n          if (errorData.phone && Array.isArray(errorData.phone)) {\n            message.error(`手机号码错误: ${errorData.phone[0]}`);\n            return;\n          }\n          if (errorData.email && Array.isArray(errorData.email)) {\n            message.error(`邮箱地址错误: ${errorData.email[0]}`);\n            return;\n          }\n\n          // 处理其他字段错误\n          const firstErrorField = Object.keys(errorData)[0];\n          if (firstErrorField && Array.isArray(errorData[firstErrorField])) {\n            message.error(`${firstErrorField}: ${errorData[firstErrorField][0]}`);\n            return;\n          }\n\n          // 处理通用错误消息\n          if (errorData.detail) {\n            message.error(errorData.detail);\n            return;\n          }\n          if (errorData.message) {\n            message.error(errorData.message);\n            return;\n          }\n        }\n\n        // 默认错误消息\n        message.error(isEdit.value ? '更新失败' : '创建失败');\n      }\n    };\n    const handleModalCancel = () => {\n      modalVisible.value = false;\n      resetForm();\n    };\n    const resetForm = () => {\n      Object.assign(formData, {\n        name: '',\n        employee_id: '',\n        user: null,\n        department: null,\n        position: null,\n        supervisor: null,\n        phone: '',\n        email: '',\n        hire_date: null,\n        notes: ''\n      });\n      if (formRef.value) {\n        formRef.value.resetFields();\n      }\n    };\n    const exportEmployees = () => {\n      // 导出功能实现\n      message.info('导出功能开发中...');\n    };\n    const filterOption = (input, option) => {\n      return option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n    };\n    const getCurrentCategoryName = () => {\n      const category = categoryList.value.find(cat => cat.key === activeCategory.value);\n      return category ? category.name : '员工管理';\n    };\n    const refreshData = () => {\n      loadDepartments();\n      loadPositions();\n      loadEmployees();\n    };\n    const loadDepartments = async () => {\n      try {\n        const response = await getDepartments();\n        console.log(response.data.results);\n        if (response.status == 200) {\n          const departments = response.data.results || response.results || [];\n          console.log(departments);\n          departmentList.value = Array.isArray(departments) ? departments : [];\n\n          // 生成部门分类列表\n          const categories = [{\n            key: 'all',\n            name: '全部员工',\n            icon: 'ContactsOutlined',\n            count: 0\n          }];\n          departments.forEach(dept => {\n            categories.push({\n              key: dept.id.toString(),\n              name: dept.name,\n              icon: 'ApartmentOutlined',\n              count: dept.employee_count || 0\n            });\n          });\n          categoryList.value = categories;\n        }\n      } catch (error) {\n        console.error('加载部门列表失败:', error);\n        message.error('加载部门列表失败');\n      }\n    };\n    const loadPositions = async () => {\n      try {\n        const response = await getPositions();\n        if (response.status == 200) {\n          console.log(response.data.results);\n          const positions = response.data?.results || response.results || [];\n          positionList.value = Array.isArray(positions) ? positions : [];\n        }\n      } catch (error) {\n        console.error('加载职位列表失败:', error);\n        message.error('加载职位列表失败');\n      }\n    };\n\n    // 生命周期\n    onMounted(() => {\n      loadEmployees();\n      loadDepartments();\n      loadPositions();\n    });\n    const __returned__ = {\n      loading,\n      searchText,\n      statusFilter,\n      departmentFilter,\n      positionFilter,\n      activeCategory,\n      modalVisible,\n      detailModalVisible,\n      isEdit,\n      selectedEmployee,\n      formRef,\n      formData,\n      formRules,\n      employeeList,\n      userList,\n      departmentList,\n      positionList,\n      categoryList,\n      columns,\n      pagination,\n      modalTitle,\n      filteredPositions,\n      getAvatarColor,\n      getStatusColor,\n      getStatusText,\n      handleCategoryChange,\n      handleSearch,\n      handleSearchChange,\n      handleFilterChange,\n      handleDepartmentChange,\n      resetFilters,\n      handleTableChange,\n      loadEmployees,\n      showAddModal,\n      editEmployee,\n      viewEmployee,\n      handleDeleteEmployee,\n      handleModalOk,\n      handleModalCancel,\n      resetForm,\n      exportEmployees,\n      filterOption,\n      getCurrentCategoryName,\n      refreshData,\n      loadDepartments,\n      loadPositions,\n      ref,\n      reactive,\n      onMounted,\n      computed,\n      get message() {\n        return message;\n      },\n      get ContactsOutlined() {\n        return ContactsOutlined;\n      },\n      get ExportOutlined() {\n        return ExportOutlined;\n      },\n      get PlusOutlined() {\n        return PlusOutlined;\n      },\n      get SearchOutlined() {\n        return SearchOutlined;\n      },\n      get ReloadOutlined() {\n        return ReloadOutlined;\n      },\n      get EyeOutlined() {\n        return EyeOutlined;\n      },\n      get EditOutlined() {\n        return EditOutlined;\n      },\n      get DeleteOutlined() {\n        return DeleteOutlined;\n      },\n      get PhoneOutlined() {\n        return PhoneOutlined;\n      },\n      get MailOutlined() {\n        return MailOutlined;\n      },\n      get ApartmentOutlined() {\n        return ApartmentOutlined;\n      },\n      get dayjs() {\n        return dayjs;\n      },\n      get getEmployees() {\n        return getEmployees;\n      },\n      get getEmployeeDetail() {\n        return getEmployeeDetail;\n      },\n      get createEmployee() {\n        return createEmployee;\n      },\n      get updateEmployee() {\n        return updateEmployee;\n      },\n      get deleteEmployee() {\n        return deleteEmployee;\n      },\n      get getDepartmentEmployees() {\n        return getDepartmentEmployees;\n      },\n      get getPositionEmployees() {\n        return getPositionEmployees;\n      },\n      get getAvailableUsers() {\n        return getAvailableUsers;\n      },\n      get changeEmployeeStatus() {\n        return changeEmployeeStatus;\n      },\n      get getDepartments() {\n        return getDepartments;\n      },\n      get getPositions() {\n        return getPositions;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","computed","message","ContactsOutlined","ExportOutlined","PlusOutlined","SearchOutlined","ReloadOutlined","EyeOutlined","EditOutlined","DeleteOutlined","PhoneOutlined","MailOutlined","ApartmentOutlined","dayjs","getEmployees","getEmployeeDetail","createEmployee","updateEmployee","deleteEmployee","getDepartmentEmployees","getPositionEmployees","getAvailableUsers","changeEmployeeStatus","getDepartments","getPositions","loading","searchText","statusFilter","departmentFilter","positionFilter","activeCategory","modalVisible","detailModalVisible","isEdit","selectedEmployee","formRef","formData","name","employee_id","user","department","position","supervisor","phone","email","hire_date","notes","formRules","required","trigger","status","pattern","type","employeeList","userList","departmentList","positionList","categoryList","columns","title","key","width","dataIndex","fixed","pagination","current","pageSize","total","showSizeChanger","showQuickJumper","showTotal","range","modalTitle","value","filteredPositions","console","log","Array","isArray","filtered","filter","pos","id","getAvatarColor","colors","index","charCodeAt","length","getStatusColor","getStatusText","texts","handleCategoryChange","loadEmployees","handleSearch","handleSearchChange","handleFilterChange","handleDepartmentChange","resetFilters","handleTableChange","pag","filters","sorter","response","page","page_size","search","results","data","count","error","showAddModal","resetForm","editEmployee","record","Object","assign","direct_supervisor","mobile","viewEmployee","handleDeleteEmployee","success","handleModalOk","validate","submitData","user_id","department_id","position_id","direct_supervisor_id","office_location","format","probation_end_date","contract_type","employment_status","emergency_contact_name","emergency_contact_phone","updateData","errorFields","errorData","firstErrorField","keys","detail","handleModalCancel","resetFields","exportEmployees","info","filterOption","input","option","children","toLowerCase","indexOf","getCurrentCategoryName","category","find","cat","refreshData","loadDepartments","loadPositions","departments","categories","icon","forEach","dept","push","toString","employee_count","positions"],"sources":["E:/A_project/yuanchi/AIops/frontend/src/views/admin/AdminEmployees.vue"],"sourcesContent":["<template>\r\n  <div class=\"admin-employees admin-page\">\r\n    <!-- 页面标题区域 -->\r\n    <div class=\"page-header\">\r\n      <div class=\"header-content\">\r\n        <h1 class=\"page-title\">\r\n          <ContactsOutlined />\r\n          员工管理\r\n        </h1>\r\n        <p class=\"page-description\">管理组织架构中的员工信息</p>\r\n      </div>\r\n      <div class=\"header-actions\">\r\n        <a-space>\r\n          <a-tooltip title=\"导出员工列表为Excel文件\" placement=\"bottom\">\r\n            <a-button @click=\"exportEmployees\">\r\n              <ExportOutlined />\r\n              导出员工\r\n            </a-button>\r\n          </a-tooltip>\r\n          <a-tooltip title=\"创建新的员工\" placement=\"bottom\">\r\n            <a-button type=\"primary\" @click=\"showAddModal\">\r\n              <PlusOutlined />\r\n              新建员工\r\n            </a-button>\r\n          </a-tooltip>\r\n        </a-space>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 员工管理布局 -->\r\n    <div class=\"employees-layout admin-layout\">\r\n      <!-- 左侧菜单 -->\r\n      <div class=\"employees-menu admin-menu\">\r\n        <div class=\"menu-title\">部门分类</div>\r\n        <div class=\"menu-list\">\r\n          <div \r\n            v-for=\"category in categoryList\" \r\n            :key=\"category.key\"\r\n            :class=\"['menu-item', { 'active': activeCategory === category.key }]\"\r\n            @click=\"handleCategoryChange(category.key)\"\r\n          >\r\n            <component :is=\"category.icon\" class=\"menu-icon\" />\r\n            <span class=\"menu-text\">{{ category.name }}</span>\r\n            <a-badge \r\n              v-if=\"category.count\" \r\n              :count=\"category.count\" \r\n              class=\"menu-badge\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 右侧内容区域 -->\r\n      <div class=\"employees-content admin-content\">\r\n        <a-card>\r\n          <template #title>\r\n            {{ getCurrentCategoryName() }}\r\n          </template>\r\n          <template #extra>\r\n            <a-space>\r\n              <a-input-search\r\n                v-model:value=\"searchText\"\r\n                placeholder=\"搜索员工...\"\r\n                style=\"width: 200px\"\r\n                @search=\"handleSearch\"\r\n                @change=\"handleSearch\"\r\n              />\r\n              <a-tooltip title=\"刷新员工列表数据\" placement=\"bottom\">\r\n                <a-button @click=\"refreshData\">\r\n                  <ReloadOutlined />\r\n                </a-button>\r\n              </a-tooltip>\r\n            </a-space>\r\n          </template>\r\n\r\n          <!-- 员工表格 -->\r\n          <a-table\r\n            :columns=\"columns\"\r\n            :data-source=\"employeeList\"\r\n            :loading=\"loading\"\r\n            :pagination=\"pagination\"\r\n            row-key=\"id\"\r\n            @change=\"handleTableChange\"\r\n          >\r\n            <template #bodyCell=\"{ column, record }\">\r\n              <!-- 员工信息列 -->\r\n              <template v-if=\"column.key === 'employee_info'\">\r\n                <div class=\"employee-info\">\r\n                  <a-avatar :size=\"40\" :style=\"{ background: getAvatarColor(record.name) }\">\r\n                    {{ record.name.charAt(0) }}\r\n                  </a-avatar>\r\n                  <div class=\"info-text\">\r\n                    <div class=\"name\">{{ record.name }}</div>\r\n                    <div class=\"employee-no\">工号: {{ record.employee_id }}</div>\r\n                  </div>\r\n                </div>\r\n              </template>\r\n\r\n              <!-- 状态列 -->\r\n              <template v-else-if=\"column.key === 'status'\">\r\n                <a-tag :color=\"getStatusColor(record.employment_status)\">\r\n                  {{ getStatusText(record.employment_status) }}\r\n                </a-tag>\r\n              </template>\r\n\r\n              <!-- 部门列 -->\r\n              <template v-else-if=\"column.key === 'department_name'\">\r\n                <span>{{ record.department?.name || '-' }}</span>\r\n              </template>\r\n\r\n              <!-- 职位列 -->\r\n              <template v-else-if=\"column.key === 'position_name'\">\r\n                <span>{{ record.position?.name || '-' }}</span>\r\n              </template>\r\n\r\n              <!-- 直属上级列 -->\r\n              <template v-else-if=\"column.key === 'supervisor_name'\">\r\n                <span>{{ record.direct_supervisor?.name || '-' }}</span>\r\n              </template>\r\n\r\n              <!-- 联系方式列 -->\r\n              <template v-else-if=\"column.key === 'contact'\">\r\n                <div class=\"contact-info\">\r\n                  <div v-if=\"record.mobile || record.phone\" class=\"contact-item\">\r\n                    <PhoneOutlined class=\"contact-icon\" />\r\n                    <span>{{ record.mobile || record.phone }}</span>\r\n                  </div>\r\n                  <div v-if=\"record.email\" class=\"contact-item\">\r\n                    <MailOutlined class=\"contact-icon\" />\r\n                    <span>{{ record.email }}</span>\r\n                  </div>\r\n                </div>\r\n              </template>\r\n\r\n              <!-- 操作列 -->\r\n              <template v-else-if=\"column.key === 'action'\">\r\n              <a-space>\r\n                <a-tooltip title=\"查看详情\">\r\n                  <a-button type=\"text\" size=\"small\" @click=\"viewEmployee(record)\">\r\n                    <EyeOutlined />\r\n                  </a-button>\r\n                </a-tooltip>\r\n                <a-tooltip title=\"编辑员工\">\r\n                  <a-button type=\"text\" size=\"small\" @click=\"editEmployee(record)\">\r\n                    <EditOutlined />\r\n                  </a-button>\r\n                </a-tooltip>\r\n                <a-popconfirm\r\n                  title=\"确定要删除这个员工吗？\"\r\n                  @confirm=\"handleDeleteEmployee(record)\"\r\n                >\r\n                  <a-tooltip title=\"删除员工\">\r\n                    <a-button type=\"text\" size=\"small\" danger>\r\n                      <DeleteOutlined />\r\n                    </a-button>\r\n                  </a-tooltip>\r\n                </a-popconfirm>\r\n              </a-space>\r\n               </template>\r\n            </template>\r\n          </a-table>\r\n        </a-card>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 新建/编辑员工弹窗 -->\r\n    <a-modal\r\n      v-model:open=\"modalVisible\"\r\n      :title=\"modalTitle\"\r\n      :width=\"800\"\r\n      @ok=\"handleModalOk\"\r\n      @cancel=\"handleModalCancel\"\r\n    >\r\n      <a-form\r\n        ref=\"formRef\"\r\n        :model=\"formData\"\r\n        :rules=\"formRules\"\r\n        layout=\"vertical\"\r\n      >\r\n        <a-row :gutter=\"16\">\r\n          <a-col :span=\"8\">\r\n            <a-form-item label=\"员工姓名\" name=\"name\">\r\n              <a-input v-model:value=\"formData.name\" placeholder=\"请输入员工姓名\" />\r\n            </a-form-item>\r\n          </a-col>\r\n          <a-col :span=\"8\">\r\n            <a-form-item label=\"员工工号\" name=\"employee_id\">\r\n              <a-input v-model:value=\"formData.employee_id\" placeholder=\"请输入员工工号\" />\r\n            </a-form-item>\r\n          </a-col>\r\n          <a-col :span=\"8\">\r\n            <a-form-item label=\"关联用户\" name=\"user\">\r\n              <a-select\r\n                v-model:value=\"formData.user\"\r\n                placeholder=\"请选择关联用户\"\r\n                allow-clear\r\n                show-search\r\n                :filter-option=\"filterOption\"\r\n              >\r\n                <a-select-option v-for=\"user in userList\" :key=\"user.id\" :value=\"user.id\">\r\n                  {{ user.username }} - {{ user.first_name }} {{ user.last_name }}\r\n                </a-select-option>\r\n              </a-select>\r\n            </a-form-item>\r\n          </a-col>\r\n        </a-row>\r\n        \r\n        <a-row :gutter=\"16\">\r\n          <a-col :span=\"8\">\r\n            <a-form-item label=\"所属部门\" name=\"department\">\r\n              <a-select\r\n                v-model:value=\"formData.department\"\r\n                placeholder=\"请选择所属部门\"\r\n                allow-clear\r\n                @change=\"handleDepartmentChange\"\r\n              >\r\n                <a-select-option v-for=\"dept in departmentList\" :key=\"dept.id\" :value=\"dept.id\">\r\n                  {{ dept.name }}\r\n                </a-select-option>\r\n              </a-select>\r\n            </a-form-item>\r\n          </a-col>\r\n          <a-col :span=\"8\">\r\n            <a-form-item label=\"职位\" name=\"position\">\r\n              <a-select\r\n                v-model:value=\"formData.position\"\r\n                placeholder=\"请选择职位\"\r\n                allow-clear\r\n              >\r\n                <a-select-option v-for=\"pos in filteredPositions\" :key=\"pos.id\" :value=\"pos.id\">\r\n                  {{ pos.name }}\r\n                </a-select-option>\r\n              </a-select>\r\n            </a-form-item>\r\n          </a-col>\r\n          <a-col :span=\"8\">\r\n            <a-form-item label=\"直属上级\" name=\"supervisor\">\r\n              <a-select\r\n                v-model:value=\"formData.supervisor\"\r\n                placeholder=\"请选择直属上级\"\r\n                allow-clear\r\n                show-search\r\n                :filter-option=\"filterOption\"\r\n              >\r\n                <a-select-option v-for=\"emp in employeeList\" :key=\"emp.id\" :value=\"emp.id\">\r\n                  {{ emp.name }} - {{ emp.employee_no }}\r\n                </a-select-option>\r\n              </a-select>\r\n            </a-form-item>\r\n          </a-col>\r\n        </a-row>\r\n\r\n        <a-row :gutter=\"16\">\r\n          <a-col :span=\"8\">\r\n            <a-form-item label=\"手机号码\" name=\"phone\">\r\n              <a-input v-model:value=\"formData.phone\" placeholder=\"请输入手机号码\" />\r\n            </a-form-item>\r\n          </a-col>\r\n          <a-col :span=\"8\">\r\n            <a-form-item label=\"邮箱地址\" name=\"email\">\r\n              <a-input v-model:value=\"formData.email\" placeholder=\"请输入邮箱地址\" />\r\n            </a-form-item>\r\n          </a-col>\r\n          <a-col :span=\"8\">\r\n            <a-form-item label=\"入职日期\" name=\"hire_date\">\r\n              <a-date-picker\r\n                v-model:value=\"formData.hire_date\"\r\n                placeholder=\"请选择入职日期\"\r\n                style=\"width: 100%\"\r\n              />\r\n            </a-form-item>\r\n          </a-col>\r\n        </a-row>\r\n\r\n\r\n\r\n        <a-form-item label=\"备注\" name=\"notes\">\r\n          <a-textarea\r\n            v-model:value=\"formData.notes\"\r\n            placeholder=\"请输入备注信息\"\r\n            :rows=\"3\"\r\n          />\r\n        </a-form-item>\r\n      </a-form>\r\n    </a-modal>\r\n\r\n    <!-- 员工详情弹窗 -->\r\n    <a-modal\r\n      v-model:open=\"detailModalVisible\"\r\n      title=\"员工详情\"\r\n      :width=\"900\"\r\n      :footer=\"null\"\r\n    >\r\n      <div v-if=\"selectedEmployee\" class=\"employee-detail\">\r\n        <a-descriptions :column=\"3\" bordered>\r\n          <a-descriptions-item label=\"员工姓名\">\r\n            {{ selectedEmployee.name }}\r\n          </a-descriptions-item>\r\n          <a-descriptions-item label=\"员工工号\">\r\n            {{ selectedEmployee.employee_id }}\r\n          </a-descriptions-item>\r\n          <a-descriptions-item label=\"关联用户\">\r\n            {{ selectedEmployee.user?.username || '未关联' }}\r\n          </a-descriptions-item>\r\n          <a-descriptions-item label=\"所属部门\">\r\n            {{ selectedEmployee.department?.name || '未设置' }}\r\n          </a-descriptions-item>\r\n          <a-descriptions-item label=\"职位\">\r\n            {{ selectedEmployee.position?.name || '未设置' }}\r\n          </a-descriptions-item>\r\n          <a-descriptions-item label=\"直属上级\">\r\n            {{ selectedEmployee.direct_supervisor?.name || '无' }}\r\n          </a-descriptions-item>\r\n          <a-descriptions-item label=\"手机号码\">\r\n            {{ selectedEmployee.mobile || selectedEmployee.phone || '未填写' }}\r\n          </a-descriptions-item>\r\n          <a-descriptions-item label=\"邮箱地址\">\r\n            {{ selectedEmployee.email || '未填写' }}\r\n          </a-descriptions-item>\r\n          <a-descriptions-item label=\"入职日期\">\r\n            {{ selectedEmployee.hire_date || '未设置' }}\r\n          </a-descriptions-item>\r\n          <a-descriptions-item label=\"创建时间\">\r\n            {{ selectedEmployee.created_at ? dayjs(selectedEmployee.created_at).format('YYYY-MM-DD HH:mm:ss') : '未知' }}\r\n          </a-descriptions-item>\r\n          <a-descriptions-item label=\"备注\" :span=\"3\">\r\n            {{ selectedEmployee.notes || '无' }}\r\n          </a-descriptions-item>\r\n        </a-descriptions>\r\n      </div>\r\n    </a-modal>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, onMounted, computed } from 'vue';\r\nimport { message } from 'ant-design-vue';\r\nimport {\r\n  ContactsOutlined,\r\n  ExportOutlined,\r\n  PlusOutlined,\r\n  SearchOutlined,\r\n  ReloadOutlined,\r\n  EyeOutlined,\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  PhoneOutlined,\r\n  MailOutlined,\r\n  ApartmentOutlined\r\n} from '@ant-design/icons-vue';\r\nimport dayjs from 'dayjs';\r\nimport {\r\n  getEmployees,\r\n  getEmployeeDetail,\r\n  createEmployee,\r\n  updateEmployee,\r\n  deleteEmployee,\r\n  getDepartmentEmployees,\r\n  getPositionEmployees,\r\n  getAvailableUsers,\r\n  changeEmployeeStatus\r\n} from '@/api/organization';\r\nimport { getDepartments, getPositions } from '@/api/organization';\r\n\r\n// 响应式数据\r\nconst loading = ref(false);\r\nconst searchText = ref('');\r\nconst statusFilter = ref('');\r\nconst departmentFilter = ref('');\r\nconst positionFilter = ref('');\r\nconst activeCategory = ref('all');\r\nconst modalVisible = ref(false);\r\nconst detailModalVisible = ref(false);\r\nconst isEdit = ref(false);\r\nconst selectedEmployee = ref(null);\r\nconst formRef = ref();\r\n\r\n// 表单数据\r\nconst formData = reactive({\r\n  name: '',\r\n  employee_id: '',\r\n  user: null,\r\n  department: null,\r\n  position: null,\r\n  supervisor: null,\r\n  phone: '',\r\n  email: '',\r\n  hire_date: null,\r\n  notes: ''\r\n});\r\n\r\n// 表单验证规则\r\nconst formRules = {\r\n  name: [{ required: true, message: '请输入员工姓名', trigger: 'blur' }],\r\n  employee_id: [{ required: true, message: '请输入员工工号', trigger: 'blur' }],\r\n  department: [{ required: true, message: '请选择所属部门', trigger: 'change' }],\r\n  position: [{ required: true, message: '请选择职位', trigger: 'change' }],\r\n  status: [{ required: true, message: '请选择员工状态', trigger: 'change' }],\r\n  phone: [\r\n    { pattern: /^1[3-9]\\d{9}$/, message: '请输入正确的手机号码', trigger: 'blur' }\r\n  ],\r\n  email: [\r\n    { type: 'email', message: '请输入正确的邮箱地址', trigger: 'blur' }\r\n  ]\r\n};\r\n\r\n// 数据\r\nconst employeeList = ref([]);\r\nconst userList = ref([]);\r\nconst departmentList = ref([]);\r\nconst positionList = ref([]);\r\n\r\n// 分类列表\r\nconst categoryList = ref([]);\r\n\r\n// 表格列定义\r\nconst columns = [\r\n  {\r\n    title: '员工姓名',\r\n    key: 'employee_info',\r\n    width: 200\r\n  },\r\n  {\r\n    title: '所属部门',\r\n    dataIndex: 'department_name',\r\n    key: 'department_name',\r\n    width: 120\r\n  },\r\n  {\r\n    title: '职位',\r\n    dataIndex: 'position_name',\r\n    key: 'position_name',\r\n    width: 150\r\n  },\r\n  {\r\n    title: '直属上级',\r\n    dataIndex: 'supervisor_name',\r\n    key: 'supervisor_name',\r\n    width: 120\r\n  },\r\n  {\r\n    title: '联系方式',\r\n    key: 'contact',\r\n    width: 180\r\n  },\r\n  {\r\n    title: '入职日期',\r\n    dataIndex: 'hire_date',\r\n    key: 'hire_date',\r\n    width: 120\r\n  },\r\n  {\r\n    title: '操作',\r\n    key: 'action',\r\n    width: 150,\r\n    fixed: 'right'\r\n  }\r\n];\r\n\r\n// 分页配置\r\nconst pagination = reactive({\r\n  current: 1,\r\n  pageSize: 10,\r\n  total: 0,\r\n  showSizeChanger: true,\r\n  showQuickJumper: true,\r\n  showTotal: (total, range) => `第 ${range[0]}-${range[1]} 条，共 ${total} 条`\r\n});\r\n\r\n// 计算属性\r\nconst modalTitle = computed(() => {\r\n  return isEdit.value ? '编辑员工' : '新建员工';\r\n});\r\n\r\nconst filteredPositions = computed(() => {\r\n  console.log('positionList:', positionList.value);\r\n  console.log('formData.department:', formData.department);\r\n  \r\n  if (!Array.isArray(positionList.value)) return [];\r\n  \r\n  // 如果没有选择部门，返回所有职位\r\n  if (!formData.department) {\r\n    return positionList.value;\r\n  }\r\n  \r\n  // 根据选择的部门过滤职位\r\n  const filtered = positionList.value.filter(pos => {\r\n    console.log('pos.department:', pos.department, 'pos.department?.id:', pos.department?.id);\r\n    return pos.department?.id === formData.department;\r\n  });\r\n  \r\n  console.log('filtered positions:', filtered);\r\n  return filtered;\r\n});\r\n\r\n// 方法\r\nconst getAvatarColor = (name) => {\r\n  const colors = ['#f56a00', '#7265e6', '#ffbf00', '#00a2ae', '#87d068'];\r\n  const index = name.charCodeAt(0) % colors.length;\r\n  return colors[index];\r\n};\r\n\r\nconst getStatusColor = (status) => {\r\n  const colors = {\r\n    'active': 'green',\r\n    'inactive': 'red',\r\n    'probation': 'orange'\r\n  };\r\n  return colors[status] || 'default';\r\n};\r\n\r\nconst getStatusText = (status) => {\r\n  const texts = {\r\n    'active': '在职',\r\n    'inactive': '离职',\r\n    'probation': '试用期'\r\n  };\r\n  return texts[status] || '未知';\r\n};\r\n\r\nconst handleCategoryChange = (key) => {\r\n  activeCategory.value = key;\r\n  // 根据选择的分类设置部门筛选\r\n  if (key === 'all') {\r\n    departmentFilter.value = '';\r\n  } else {\r\n    departmentFilter.value = key;\r\n  }\r\n  loadEmployees();\r\n};\r\n\r\nconst handleSearch = () => {\r\n  loadEmployees();\r\n};\r\n\r\nconst handleSearchChange = () => {\r\n  if (!searchText.value) {\r\n    loadEmployees();\r\n  }\r\n};\r\n\r\nconst handleFilterChange = () => {\r\n  loadEmployees();\r\n};\r\n\r\nconst handleDepartmentChange = () => {\r\n  formData.position = null; // 清空职位选择\r\n  console.log('部门选择变更:', formData.department);\r\n};\r\n\r\nconst resetFilters = () => {\r\n  searchText.value = '';\r\n  statusFilter.value = '';\r\n  departmentFilter.value = '';\r\n  positionFilter.value = '';\r\n  activeCategory.value = 'all';\r\n  // 重置部门分类时也要重置部门筛选\r\n  departmentFilter.value = '';\r\n  loadEmployees();\r\n};\r\n\r\nconst handleTableChange = (pag, filters, sorter) => {\r\n  pagination.current = pag.current;\r\n  pagination.pageSize = pag.pageSize;\r\n  loadEmployees();\r\n};\r\n\r\nconst loadEmployees = async () => {\r\n  loading.value = true;\r\n  try {\r\n    const response = await getEmployees({\r\n      page: pagination.current,\r\n      page_size: pagination.pageSize,\r\n      search: searchText.value,\r\n      status: statusFilter.value,\r\n      department: departmentFilter.value,\r\n      position: positionFilter.value\r\n    });\r\n    \r\n    const results = response.data?.results || response.results || [];\r\n    employeeList.value = Array.isArray(results) ? results : [];\r\n    pagination.total = response.data?.total || response.total || response.count || 0;\r\n  } catch (error) {\r\n    console.error('加载员工列表失败:', error);\r\n    message.error('加载员工列表失败');\r\n  } finally {\r\n    loading.value = false;\r\n  }\r\n};\r\n\r\nconst showAddModal = () => {\r\n  isEdit.value = false;\r\n  resetForm();\r\n  modalVisible.value = true;\r\n};\r\n\r\nconst editEmployee = (record) => {\r\n  isEdit.value = true;\r\n  Object.assign(formData, {\r\n    id: record.id,\r\n    name: record.name,\r\n    employee_id: record.employee_id,\r\n    user: record.user?.id || null,\r\n    department: record.department?.id || null,\r\n    position: record.position?.id || null,\r\n    supervisor: record.direct_supervisor?.id || null,\r\n    phone: record.phone || record.mobile,\r\n    email: record.email,\r\n    hire_date: record.hire_date ? dayjs(record.hire_date) : null,\r\n    notes: record.notes\r\n  });\r\n  modalVisible.value = true;\r\n};\r\n\r\nconst viewEmployee = (record) => {\r\n  selectedEmployee.value = record;\r\n  detailModalVisible.value = true;\r\n};\r\n\r\nconst handleDeleteEmployee = async (record) => {\r\n  try {\r\n    await deleteEmployee(record.id);\r\n    \r\n    message.success('删除成功');\r\n    loadEmployees();\r\n  } catch (error) {\r\n    console.error('删除员工失败:', error);\r\n    message.error('删除失败');\r\n  }\r\n};\r\n\r\nconst handleModalOk = async () => {\r\n  try {\r\n    await formRef.value.validate();\r\n    \r\n    console.log('提交前的formData:', formData);\r\n    \r\n    // 格式化数据，将前端字段名转换为后端API期望的字段名\r\n    const submitData = {\r\n      name: formData.name,\r\n      employee_id: formData.employee_id,\r\n      user_id: formData.user,\r\n      department_id: formData.department,\r\n      position_id: formData.position,\r\n      direct_supervisor_id: formData.supervisor,\r\n      phone: formData.phone,\r\n      mobile: formData.phone, // 后端使用mobile字段\r\n      email: formData.email,\r\n      office_location: null,\r\n      hire_date: formData.hire_date ? formData.hire_date.format('YYYY-MM-DD') : null,\r\n      probation_end_date: null,\r\n      contract_type: 'full_time',\r\n      employment_status: 'probation',\r\n      emergency_contact_name: null,\r\n      emergency_contact_phone: null,\r\n      notes: formData.notes || ''\r\n    };\r\n    \r\n    if (isEdit.value) {\r\n      // 编辑时需要包含ID\r\n      const updateData = { ...submitData, id: formData.id };\r\n      await updateEmployee(formData.id, updateData);\r\n      message.success('更新成功');\r\n    } else {\r\n      await createEmployee(submitData);\r\n      message.success('创建成功');\r\n    }\r\n    \r\n    modalVisible.value = false;\r\n    loadEmployees();\r\n  } catch (error) {\r\n    console.error('保存员工失败:', error);\r\n    \r\n    // 处理表单验证错误\r\n    if (error.errorFields) {\r\n      message.error('请检查表单输入');\r\n      return;\r\n    }\r\n    \r\n    // 处理API返回的错误\r\n    if (error.response && error.response.data) {\r\n      const errorData = error.response.data;\r\n      \r\n      // 处理字段特定错误\r\n      if (errorData.employee_id && Array.isArray(errorData.employee_id)) {\r\n        message.error(`员工工号错误: ${errorData.employee_id[0]}`);\r\n        return;\r\n      }\r\n      \r\n      if (errorData.name && Array.isArray(errorData.name)) {\r\n        message.error(`员工姓名错误: ${errorData.name[0]}`);\r\n        return;\r\n      }\r\n      \r\n      if (errorData.user && Array.isArray(errorData.user)) {\r\n        message.error(`关联用户错误: ${errorData.user[0]}`);\r\n        return;\r\n      }\r\n      \r\n      if (errorData.phone && Array.isArray(errorData.phone)) {\r\n        message.error(`手机号码错误: ${errorData.phone[0]}`);\r\n        return;\r\n      }\r\n      \r\n      if (errorData.email && Array.isArray(errorData.email)) {\r\n        message.error(`邮箱地址错误: ${errorData.email[0]}`);\r\n        return;\r\n      }\r\n      \r\n      // 处理其他字段错误\r\n      const firstErrorField = Object.keys(errorData)[0];\r\n      if (firstErrorField && Array.isArray(errorData[firstErrorField])) {\r\n        message.error(`${firstErrorField}: ${errorData[firstErrorField][0]}`);\r\n        return;\r\n      }\r\n      \r\n      // 处理通用错误消息\r\n      if (errorData.detail) {\r\n        message.error(errorData.detail);\r\n        return;\r\n      }\r\n      \r\n      if (errorData.message) {\r\n        message.error(errorData.message);\r\n        return;\r\n      }\r\n    }\r\n    \r\n    // 默认错误消息\r\n    message.error(isEdit.value ? '更新失败' : '创建失败');\r\n  }\r\n};\r\n\r\nconst handleModalCancel = () => {\r\n  modalVisible.value = false;\r\n  resetForm();\r\n};\r\n\r\nconst resetForm = () => {\r\n  Object.assign(formData, {\r\n    name: '',\r\n    employee_id: '',\r\n    user: null,\r\n    department: null,\r\n    position: null,\r\n    supervisor: null,\r\n    phone: '',\r\n    email: '',\r\n    hire_date: null,\r\n    notes: ''\r\n  });\r\n  if (formRef.value) {\r\n    formRef.value.resetFields();\r\n  }\r\n};\r\n\r\nconst exportEmployees = () => {\r\n  // 导出功能实现\r\n  message.info('导出功能开发中...');\r\n};\r\n\r\nconst filterOption = (input, option) => {\r\n  return option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\r\n};\r\n\r\nconst getCurrentCategoryName = () => {\r\n  const category = categoryList.value.find(cat => cat.key === activeCategory.value);\r\n  return category ? category.name : '员工管理';\r\n};\r\n\r\nconst refreshData = () => {\r\n  loadDepartments();\r\n  loadPositions();\r\n  loadEmployees();\r\n};\r\n\r\nconst loadDepartments = async () => {\r\n  try {\r\n    const response = await getDepartments();\r\n    console.log(response.data.results)\r\n    if (response.status == 200){\r\n      const departments = response.data.results || response.results || [];\r\n      console.log(departments)\r\n      departmentList.value = Array.isArray(departments) ? departments : [];\r\n      \r\n      // 生成部门分类列表\r\n      const categories = [\r\n        { key: 'all', name: '全部员工', icon: 'ContactsOutlined', count: 0 }\r\n      ];\r\n      \r\n      departments.forEach(dept => {\r\n        categories.push({\r\n          key: dept.id.toString(),\r\n          name: dept.name,\r\n          icon: 'ApartmentOutlined',\r\n          count: dept.employee_count || 0\r\n        });\r\n      });\r\n      \r\n      categoryList.value = categories;\r\n    }\r\n  } catch (error) {\r\n    console.error('加载部门列表失败:', error);\r\n    message.error('加载部门列表失败');\r\n  }\r\n};\r\n\r\nconst loadPositions = async () => {\r\n  try {\r\n    const response = await getPositions();\r\n    if (response.status == 200 ){\r\n      console.log(response.data.results)\r\n      const positions = response.data?.results || response.results || [];\r\n      positionList.value = Array.isArray(positions) ? positions : [];\r\n    }\r\n  } catch (error) {\r\n    console.error('加载职位列表失败:', error);\r\n    message.error('加载职位列表失败');\r\n  }\r\n};\r\n\r\n// 生命周期\r\nonMounted(() => {\r\n  loadEmployees();\r\n  loadDepartments();\r\n  loadPositions();\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n@import '@/assets/admin-common.css';\r\n\r\n/* 员工管理页面特有的样式 */\r\n.employees-content {\r\n  height: calc(100vh - 200px);\r\n  overflow: hidden;\r\n}\r\n\r\n:deep(.ant-card) {\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n:deep(.ant-card-body) {\r\n  flex: 1;\r\n  overflow: hidden;\r\n  padding: 16px;\r\n}\r\n\r\n:deep(.ant-table-wrapper) {\r\n  height: 100%;\r\n}\r\n\r\n:deep(.ant-table) {\r\n  height: 100%;\r\n}\r\n\r\n.employee-info {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n}\r\n\r\n.info-text {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 2px;\r\n}\r\n\r\n.name {\r\n  font-weight: 500;\r\n  font-size: 14px;\r\n}\r\n\r\n.employee-no {\r\n  font-size: 12px;\r\n  color: #999;\r\n}\r\n\r\n.contact-info {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 4px;\r\n}\r\n\r\n.contact-item {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 4px;\r\n  font-size: 12px;\r\n}\r\n\r\n.contact-icon {\r\n  color: #1890ff;\r\n}\r\n\r\n.employee-detail {\r\n  padding: 16px 0;\r\n}\r\n\r\n.salary-text {\r\n  font-weight: 500;\r\n  color: #52c41a;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}