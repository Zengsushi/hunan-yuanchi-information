{"ast":null,"code":"import { ref, computed, watch, onMounted, onBeforeUnmount } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport { message } from 'ant-design-vue';\nimport { userAPI } from '@/api/users';\nimport { menuApi } from '@/api/menu';\nimport AdminLayout from '@/layouts/AdminLayout.vue';\nimport { DatabaseOutlined, UserOutlined, BellOutlined, DownOutlined, SettingOutlined, LogoutOutlined, HomeOutlined, CloudServerOutlined, BarChartOutlined, GlobalOutlined, AppstoreOutlined } from '@ant-design/icons-vue';\nexport default {\n  __name: 'App',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const collapsed = ref(false);\n    const route = useRoute();\n    const router = useRouter();\n    const selectedKeys = ref([route.path || '/']);\n    const menuItems = ref([]);\n    const loading = ref(false);\n    const visibleSubmenus = ref({});\n\n    // 用户类型和信息\n    const userType = ref(localStorage.getItem('userType') || 'user');\n    const currentUserName = ref(localStorage.getItem('username') || '用户');\n    const isAdmin = computed(() => userType.value === 'admin');\n\n    // 判断是否为管理员路由\n    const isAdminRoute = computed(() => {\n      return route.path.startsWith('/admin/');\n    });\n\n    // 图标组件映射\n    const iconComponents = {\n      'HomeOutlined': HomeOutlined,\n      'DatabaseOutlined': DatabaseOutlined,\n      'CloudServerOutlined': CloudServerOutlined,\n      'BellOutlined': BellOutlined,\n      'BarChartOutlined': BarChartOutlined,\n      'GlobalOutlined': GlobalOutlined,\n      'AppstoreOutlined': AppstoreOutlined,\n      'UserOutlined': UserOutlined,\n      'SettingOutlined': SettingOutlined\n    };\n\n    // 获取图标组件\n    const getIconComponent = iconName => {\n      return iconComponents[iconName] || HomeOutlined;\n    };\n\n    // 获取用户菜单\n    const fetchUserMenus = async () => {\n      // 只在主应用布局时获取菜单，避免在登录页面或管理员页面调用\n      if (route.meta.hideLayout || isAdminRoute.value) {\n        return;\n      }\n      try {\n        loading.value = true;\n        const response = await menuApi.getUserMenus();\n        if (response.data && response.data.data && response.data.data.results) {\n          menuItems.value = response.data.data.results;\n        } else {\n          // 如果API返回失败，使用默认菜单\n          menuItems.value = getDefaultMenus();\n        }\n      } catch (error) {\n        console.error('获取菜单失败:', error);\n        message.warning('获取菜单失败，使用默认菜单');\n        // 使用默认菜单作为后备\n        menuItems.value = getDefaultMenus();\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 默认菜单配置（空数组，菜单完全由后端提供）\n    const getDefaultMenus = () => {\n      return [];\n    };\n    watch(() => route.path, newPath => {\n      selectedKeys.value = [newPath];\n    });\n    const toggleCollapsed = () => {\n      collapsed.value = !collapsed.value;\n    };\n    const handleMenuSelect = ({\n      key\n    }) => {\n      router.push(key);\n    };\n\n    // 显示子菜单\n    const showSubmenu = key => {\n      visibleSubmenus.value[key] = true;\n    };\n\n    // 隐藏子菜单\n    const hideSubmenu = key => {\n      visibleSubmenus.value[key] = false;\n    };\n\n    // 判断子菜单是否选中\n    const isSubmenuSelected = item => {\n      if (!item.children) return false;\n      return item.children.some(child => selectedKeys.value.includes(child.key));\n    };\n\n    // 处理用户登录事件\n    const handleUserLoggedIn = () => {\n      // 延迟获取菜单，等待路由跳转完成\n      setTimeout(() => {\n        fetchUserMenus();\n      }, 600); // 稍微延迟一点，确保路由跳转完成\n    };\n\n    // 组件挂载时检查登录状态后获取菜单\n    onMounted(() => {\n      // 只在主应用布局时获取菜单，避免在登录页面调用\n      if (!route.meta.hideLayout && !isAdminRoute.value) {\n        // 检查用户登录状态\n        const isLoggedIn = localStorage.getItem('isLoggedIn');\n        const token = localStorage.getItem('token');\n        if (isLoggedIn === 'true' && token) {\n          // 用户已登录，获取菜单\n          fetchUserMenus();\n        }\n        // 移除未登录时也调用fetchUserMenus的逻辑\n      }\n\n      // 监听登录事件\n      window.addEventListener('userLoggedIn', handleUserLoggedIn);\n    });\n\n    // 组件卸载时移除事件监听\n    onBeforeUnmount(() => {\n      window.removeEventListener('userLoggedIn', handleUserLoggedIn);\n    });\n    const handleLogout = async () => {\n      try {\n        // 调用后端登出 API\n        await userAPI.logout();\n\n        // 清除本地存储的登录状态\n        localStorage.removeItem('token');\n        localStorage.removeItem('userInfo');\n        localStorage.removeItem('isLoggedIn');\n        localStorage.removeItem('userType');\n        localStorage.removeItem('username');\n        localStorage.removeItem('isAdmin');\n        localStorage.removeItem('userRole');\n        localStorage.removeItem('remember_user');\n        localStorage.removeItem('remember_mode');\n\n        // 显示成功提示\n        message.success({\n          content: '已退出登录',\n          duration: 1.5\n        });\n\n        // 延迟跳转，使用 window.location.href 强制刷新\n        setTimeout(() => {\n          window.location.href = '/#/login';\n        }, 500);\n      } catch (error) {\n        console.error('登出错误:', error);\n\n        // 即使登出 API 失败，也要清除本地状态\n        localStorage.removeItem('token');\n        localStorage.removeItem('userInfo');\n        localStorage.removeItem('isLoggedIn');\n        localStorage.removeItem('userType');\n        localStorage.removeItem('username');\n        localStorage.removeItem('isAdmin');\n        localStorage.removeItem('userRole');\n        localStorage.removeItem('remember_user');\n        localStorage.removeItem('remember_mode');\n\n        // 显示警告提示\n        message.warning({\n          content: '登出请求失败，但已清除本地登录状态',\n          duration: 1.5\n        });\n\n        // 强制跳转到登录页面\n        setTimeout(() => {\n          window.location.href = '/#/login';\n        }, 500);\n      }\n    };\n    const __returned__ = {\n      collapsed,\n      route,\n      router,\n      selectedKeys,\n      menuItems,\n      loading,\n      visibleSubmenus,\n      userType,\n      currentUserName,\n      isAdmin,\n      isAdminRoute,\n      iconComponents,\n      getIconComponent,\n      fetchUserMenus,\n      getDefaultMenus,\n      toggleCollapsed,\n      handleMenuSelect,\n      showSubmenu,\n      hideSubmenu,\n      isSubmenuSelected,\n      handleUserLoggedIn,\n      handleLogout,\n      ref,\n      computed,\n      watch,\n      onMounted,\n      onBeforeUnmount,\n      get useRoute() {\n        return useRoute;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      get message() {\n        return message;\n      },\n      get userAPI() {\n        return userAPI;\n      },\n      get menuApi() {\n        return menuApi;\n      },\n      AdminLayout,\n      get DatabaseOutlined() {\n        return DatabaseOutlined;\n      },\n      get UserOutlined() {\n        return UserOutlined;\n      },\n      get BellOutlined() {\n        return BellOutlined;\n      },\n      get DownOutlined() {\n        return DownOutlined;\n      },\n      get SettingOutlined() {\n        return SettingOutlined;\n      },\n      get LogoutOutlined() {\n        return LogoutOutlined;\n      },\n      get HomeOutlined() {\n        return HomeOutlined;\n      },\n      get CloudServerOutlined() {\n        return CloudServerOutlined;\n      },\n      get BarChartOutlined() {\n        return BarChartOutlined;\n      },\n      get GlobalOutlined() {\n        return GlobalOutlined;\n      },\n      get AppstoreOutlined() {\n        return AppstoreOutlined;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","watch","onMounted","onBeforeUnmount","useRoute","useRouter","message","userAPI","menuApi","AdminLayout","DatabaseOutlined","UserOutlined","BellOutlined","DownOutlined","SettingOutlined","LogoutOutlined","HomeOutlined","CloudServerOutlined","BarChartOutlined","GlobalOutlined","AppstoreOutlined","collapsed","route","router","selectedKeys","path","menuItems","loading","visibleSubmenus","userType","localStorage","getItem","currentUserName","isAdmin","value","isAdminRoute","startsWith","iconComponents","getIconComponent","iconName","fetchUserMenus","meta","hideLayout","response","getUserMenus","data","results","getDefaultMenus","error","console","warning","newPath","toggleCollapsed","handleMenuSelect","key","push","showSubmenu","hideSubmenu","isSubmenuSelected","item","children","some","child","includes","handleUserLoggedIn","setTimeout","isLoggedIn","token","window","addEventListener","removeEventListener","handleLogout","logout","removeItem","success","content","duration","location","href"],"sources":["E:/A_project/yuanchi/AIops/frontend/src/App.vue"],"sourcesContent":["<template>\r\n  <!-- 登录页面独立布局 -->\r\n  <router-view v-if=\"$route.meta.hideLayout\" />\r\n  \r\n  <!-- 管理员后台布局 -->\r\n  <AdminLayout v-else-if=\"isAdminRoute\" />\r\n  \r\n  <!-- 主应用布局 -->\r\n  <div v-else class=\"monitor-layout\">\r\n    <!-- 顶部导航 -->\r\n    <header class=\"monitor-header\">\r\n      <div class=\"header-container\">\r\n        <div class=\"brand\">\r\n          <div class=\"brand-icon\">\r\n            <svg t=\"1757646777321\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"8545\">\r\n              <path d=\"M453.6 679.904h100.8v113.408H453.6z\" fill=\"#7FF298\" p-id=\"8546\"></path>\r\n              <path d=\"M365.408 843.712V768.096h277.216v75.616z\" fill=\"#226CFF\" p-id=\"8547\"></path>\r\n              <path d=\"M151.2 176.416m192 0l321.6 0q192 0 192 192l0 141.088q0 192-192 192l-321.6 0q-192 0-192-192l0-141.088q0-192 192-192Z\" fill=\"#226CFF\" p-id=\"8548\"></path>\r\n              <path d=\"M576 378.272h50.4v214.208H576z\" fill=\"#FFFFFF\" p-id=\"8549\"></path>\r\n              <path d=\"M676.8 315.264h50.4v277.216H676.8z\" fill=\"#FFFFFF\" p-id=\"8550\"></path>\r\n              <path d=\"M462.592 340.48h50.4v252h-50.4z\" fill=\"#FFFFFF\" p-id=\"8551\"></path>\r\n              <path d=\"M361.792 466.464h50.4v126.016h-50.4z\" fill=\"#FFFFFF\" p-id=\"8552\"></path>\r\n            </svg>\r\n          </div>\r\n          <h1 class=\"brand-title\">运维监控系统</h1>\r\n        </div>\r\n        \r\n        <nav class=\"main-nav\">\r\n          <div class=\"custom-menu\" v-if=\"!loading\">\r\n            <template v-for=\"item in menuItems\" :key=\"item.key\">\r\n              <!-- 一级菜单项 -->\r\n              <div \r\n                v-if=\"!item.children || item.children.length === 0\" \r\n                class=\"menu-item\"\r\n                :class=\"{ 'menu-item-selected': selectedKeys.includes(item.key) }\"\r\n                @click=\"handleMenuSelect({ key: item.key })\"\r\n              >\r\n                <component :is=\"getIconComponent(item.icon)\" class=\"menu-icon\" />\r\n                <span class=\"menu-text\">{{ item.title }}</span>\r\n              </div>\r\n              \r\n              <!-- 带子菜单的菜单项 -->\r\n              <div v-else class=\"menu-submenu\" @mouseenter=\"showSubmenu(item.key)\" @mouseleave=\"hideSubmenu(item.key)\">\r\n                <div \r\n                  class=\"menu-item submenu-title\"\r\n                  :class=\"{ 'menu-item-selected': isSubmenuSelected(item) }\"\r\n                >\r\n                  <component :is=\"getIconComponent(item.icon)\" class=\"menu-icon\" />\r\n                  <span class=\"menu-text\">{{ item.title }}</span>\r\n                  <DownOutlined class=\"submenu-arrow\" />\r\n                </div>\r\n                <div \r\n                  class=\"submenu-popup\"\r\n                  :class=\"{ 'submenu-visible': visibleSubmenus[item.key] }\"\r\n                >\r\n                  <div \r\n                    v-for=\"child in item.children\" \r\n                    :key=\"child.key\"\r\n                    class=\"submenu-item\"\r\n                    :class=\"{ 'submenu-item-selected': selectedKeys.includes(child.key) }\"\r\n                    @click=\"handleMenuSelect({ key: child.key })\"\r\n                  >\r\n                    <component :is=\"getIconComponent(child.icon)\" class=\"menu-icon\" />\r\n                    <span class=\"menu-text\">{{ child.title }}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </template>\r\n          </div>\r\n          <div v-else class=\"menu-loading\">\r\n            加载中...\r\n          </div>\r\n        </nav>\r\n        \r\n        <div class=\"header-actions\">\r\n          <a-badge :count=\"3\" class=\"notification-badge\">\r\n            <a-button type=\"text\" class=\"action-btn\">\r\n              <BellOutlined />\r\n            </a-button>\r\n          </a-badge>\r\n          <a-dropdown>\r\n            <a-button type=\"text\" class=\"user-btn\">\r\n              <a-avatar size=\"small\" class=\"user-avatar\" :style=\"{ background: isAdmin ? '#faad14' : '#1890ff' }\">\r\n                {{ currentUserName.charAt(0).toUpperCase() }}\r\n              </a-avatar>\r\n              <span class=\"user-name\">{{ currentUserName }} {{ isAdmin ? '(管理员)' : '(用户)' }}</span>\r\n              <DownOutlined />\r\n            </a-button>\r\n            <template #overlay>\r\n              <a-menu>\r\n                <a-menu-item key=\"1\"><UserOutlined /> 个人中心</a-menu-item>\r\n                <a-menu-item key=\"2\"><SettingOutlined /> 系统设置</a-menu-item>\r\n                <a-menu-divider />\r\n                <a-menu-item key=\"3\" @click=\"handleLogout\">\r\n                  <LogoutOutlined /> 退出登录\r\n                </a-menu-item>\r\n              </a-menu>\r\n            </template>\r\n          </a-dropdown>\r\n        </div>\r\n      </div>\r\n    </header>\r\n\r\n    <!-- 主内容区域 -->\r\n    <main class=\"monitor-content\">\r\n      <div class=\"content-container\">\r\n        <div class=\"content-panel\">\r\n          <router-view />\r\n        </div>\r\n      </div>\r\n    </main>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, watch, onMounted, onBeforeUnmount } from 'vue';\r\nimport { useRoute, useRouter } from 'vue-router';\r\nimport { message } from 'ant-design-vue';\r\nimport { userAPI } from '@/api/users';\r\nimport { menuApi } from '@/api/menu';\r\nimport AdminLayout from '@/layouts/AdminLayout.vue';\r\nimport { \r\n  DatabaseOutlined, \r\n  UserOutlined,\r\n  BellOutlined,\r\n  DownOutlined,\r\n  SettingOutlined,\r\n  LogoutOutlined,\r\n  HomeOutlined,\r\n  CloudServerOutlined,\r\n  BarChartOutlined,\r\n  GlobalOutlined,\r\n  AppstoreOutlined\r\n} from '@ant-design/icons-vue';\r\n\r\nconst collapsed = ref(false);\r\nconst route = useRoute();\r\nconst router = useRouter();\r\n\r\n\r\n\r\nconst selectedKeys = ref([route.path || '/']);\r\nconst menuItems = ref([]);\r\nconst loading = ref(false);\r\nconst visibleSubmenus = ref({});\r\n\r\n// 用户类型和信息\r\nconst userType = ref(localStorage.getItem('userType') || 'user');\r\nconst currentUserName = ref(localStorage.getItem('username') || '用户');\r\nconst isAdmin = computed(() => userType.value === 'admin');\r\n\r\n// 判断是否为管理员路由\r\nconst isAdminRoute = computed(() => {\r\n  return route.path.startsWith('/admin/');\r\n});\r\n\r\n// 图标组件映射\r\nconst iconComponents = {\r\n  'HomeOutlined': HomeOutlined,\r\n  'DatabaseOutlined': DatabaseOutlined,\r\n  'CloudServerOutlined': CloudServerOutlined,\r\n  'BellOutlined': BellOutlined,\r\n  'BarChartOutlined': BarChartOutlined,\r\n  'GlobalOutlined': GlobalOutlined,\r\n  'AppstoreOutlined': AppstoreOutlined,\r\n  'UserOutlined': UserOutlined,\r\n  'SettingOutlined': SettingOutlined\r\n};\r\n\r\n// 获取图标组件\r\nconst getIconComponent = (iconName) => {\r\n  return iconComponents[iconName] || HomeOutlined;\r\n};\r\n\r\n// 获取用户菜单\r\nconst fetchUserMenus = async () => {\r\n  // 只在主应用布局时获取菜单，避免在登录页面或管理员页面调用\r\n  if (route.meta.hideLayout || isAdminRoute.value) {\r\n    return;\r\n  }\r\n  \r\n  try {\r\n    loading.value = true;\r\n    const response = await menuApi.getUserMenus();\r\n    if (response.data && response.data.data && response.data.data.results) {\r\n      menuItems.value = response.data.data.results;\r\n    } else {\r\n      // 如果API返回失败，使用默认菜单\r\n      menuItems.value = getDefaultMenus();\r\n    }\r\n  } catch (error) {\r\n    console.error('获取菜单失败:', error);\r\n    message.warning('获取菜单失败，使用默认菜单');\r\n    // 使用默认菜单作为后备\r\n    menuItems.value = getDefaultMenus();\r\n  } finally {\r\n    loading.value = false;\r\n  }\r\n};\r\n\r\n// 默认菜单配置（空数组，菜单完全由后端提供）\r\nconst getDefaultMenus = () => {\r\n  return [];\r\n};\r\n\r\nwatch(() => route.path, (newPath) => {\r\n  selectedKeys.value = [newPath];\r\n});\r\n\r\nconst toggleCollapsed = () => {\r\n  collapsed.value = !collapsed.value;\r\n};\r\n\r\nconst handleMenuSelect = ({ key }) => {\r\n  router.push(key);\r\n};\r\n\r\n// 显示子菜单\r\nconst showSubmenu = (key) => {\r\n  visibleSubmenus.value[key] = true;\r\n};\r\n\r\n// 隐藏子菜单\r\nconst hideSubmenu = (key) => {\r\n  visibleSubmenus.value[key] = false;\r\n};\r\n\r\n// 判断子菜单是否选中\r\nconst isSubmenuSelected = (item) => {\r\n  if (!item.children) return false;\r\n  return item.children.some(child => selectedKeys.value.includes(child.key));\r\n};\r\n\r\n// 处理用户登录事件\r\nconst handleUserLoggedIn = () => {\r\n  // 延迟获取菜单，等待路由跳转完成\r\n  setTimeout(() => {\r\n    fetchUserMenus();\r\n  }, 600); // 稍微延迟一点，确保路由跳转完成\r\n};\r\n\r\n// 组件挂载时检查登录状态后获取菜单\r\nonMounted(() => {\r\n  // 只在主应用布局时获取菜单，避免在登录页面调用\r\n  if (!route.meta.hideLayout && !isAdminRoute.value) {\r\n    // 检查用户登录状态\r\n    const isLoggedIn = localStorage.getItem('isLoggedIn');\r\n    const token = localStorage.getItem('token');\r\n    \r\n    if (isLoggedIn === 'true' && token) {\r\n      // 用户已登录，获取菜单\r\n      fetchUserMenus();\r\n    }\r\n    // 移除未登录时也调用fetchUserMenus的逻辑\r\n  }\r\n  \r\n  // 监听登录事件\r\n  window.addEventListener('userLoggedIn', handleUserLoggedIn);\r\n});\r\n\r\n// 组件卸载时移除事件监听\r\nonBeforeUnmount(() => {\r\n  window.removeEventListener('userLoggedIn', handleUserLoggedIn);\r\n});\r\n\r\nconst handleLogout = async () => {\r\n  try {\r\n    // 调用后端登出 API\r\n    await userAPI.logout();\r\n    \r\n    // 清除本地存储的登录状态\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('userInfo');\r\n    localStorage.removeItem('isLoggedIn');\r\n    localStorage.removeItem('userType');\r\n    localStorage.removeItem('username');\r\n    localStorage.removeItem('isAdmin');\r\n    localStorage.removeItem('userRole');\r\n    localStorage.removeItem('remember_user');\r\n    localStorage.removeItem('remember_mode');\r\n    \r\n    // 显示成功提示\r\n    message.success({\r\n      content: '已退出登录',\r\n      duration: 1.5\r\n    });\r\n    \r\n    // 延迟跳转，使用 window.location.href 强制刷新\r\n    setTimeout(() => {\r\n      window.location.href = '/#/login';\r\n    }, 500);\r\n    \r\n  } catch (error) {\r\n    console.error('登出错误:', error);\r\n    \r\n    // 即使登出 API 失败，也要清除本地状态\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('userInfo');\r\n    localStorage.removeItem('isLoggedIn');\r\n    localStorage.removeItem('userType');\r\n    localStorage.removeItem('username');\r\n    localStorage.removeItem('isAdmin');\r\n    localStorage.removeItem('userRole');\r\n    localStorage.removeItem('remember_user');\r\n    localStorage.removeItem('remember_mode');\r\n    \r\n    // 显示警告提示\r\n    message.warning({\r\n      content: '登出请求失败，但已清除本地登录状态',\r\n      duration: 1.5\r\n    });\r\n    \r\n    // 强制跳转到登录页面\r\n    setTimeout(() => {\r\n      window.location.href = '/#/login';\r\n    }, 500);\r\n  }\r\n};\r\n\r\n</script>\r\n\r\n<style scoped>\r\n* {\r\n  box-sizing: border-box;\r\n}\r\n\r\n.monitor-layout {\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: #f0f5ff;\r\n}\r\n\r\n/* 顶部导航 */\r\n.monitor-header {\r\n  background: linear-gradient(135deg, #ffffff 0%, #f8faff 100%);\r\n  border-bottom: 1px solid #e6f7ff;\r\n  box-shadow: 0 2px 16px rgba(24, 144, 255, 0.08);\r\n  position: sticky;\r\n  top: 0;\r\n  z-index: 1000;\r\n  backdrop-filter: blur(10px);\r\n}\r\n\r\n.header-container {\r\n  max-width: 1400px;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0 24px;\r\n  height: 64px;\r\n}\r\n\r\n.brand {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 16px;\r\n  padding: 8px 16px;\r\n  border-radius: 12px;\r\n  background: linear-gradient(135deg, rgba(255, 255, 255, 0.9) 0%, rgba(248, 250, 255, 0.8) 100%);\r\n  backdrop-filter: blur(10px);\r\n  box-shadow: 0 4px 20px rgba(24, 144, 255, 0.08);\r\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n\r\n.brand::before {\r\n  content: '';\r\n  position: absolute;\r\n  top: 0;\r\n  left: -100%;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: linear-gradient(90deg, transparent, rgba(24, 144, 255, 0.1), transparent);\r\n  transition: left 0.6s ease;\r\n}\r\n\r\n.brand:hover::before {\r\n  left: 100%;\r\n}\r\n\r\n.brand:hover {\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 8px 32px rgba(24, 144, 255, 0.15);\r\n  border-color: rgba(24, 144, 255, 0.2);\r\n}\r\n\r\n.brand-icon {\r\n  width: 40px;\r\n  height: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-right: 12px;\r\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\r\n  position: relative;\r\n  z-index: 1;\r\n}\r\n\r\n.brand-icon svg {\r\n  width: 100%;\r\n  height: 100%;\r\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\r\n}\r\n\r\n.brand:hover .brand-icon {\r\n  transform: scale(1.1) rotate(5deg);\r\n  filter: drop-shadow(0 4px 8px rgba(24, 144, 255, 0.4));\r\n}\r\n\r\n.brand-title {\r\n  margin: 0;\r\n  font-size: 24px;\r\n  font-weight: 700;\r\n  line-height: 1.2;\r\n  background: linear-gradient(135deg, #1a1a1a 0%, #2d3748 50%, #4a5568 100%);\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  background-clip: text;\r\n  letter-spacing: 0.8px;\r\n  transition: all 0.3s ease;\r\n  position: relative;\r\n  z-index: 1;\r\n  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.brand:hover .brand-title {\r\n  transform: translateX(2px);\r\n  background: linear-gradient(135deg, #0f172a 0%, #1e293b 50%, #334155 100%);\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  background-clip: text;\r\n}\r\n\r\n.main-nav {\r\n  flex: 1;\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n.custom-menu {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 8px;\r\n  padding: 0 20px;\r\n  height: 87px;\r\n}\r\n\r\n.menu-loading {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 64px;\r\n  color: #64748b;\r\n  font-size: 14px;\r\n}\r\n\r\n.menu-item {\r\n  margin: 0 4px;\r\n  padding: 0 16px;\r\n  border-radius: 8px;\r\n  color: #64748b;\r\n  font-weight: 500;\r\n  font-size: 14px;\r\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\r\n  position: relative;\r\n  overflow: hidden;\r\n  height: 40px;\r\n  line-height: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  backdrop-filter: blur(10px);\r\n  border: 1px solid transparent;\r\n  cursor: pointer;\r\n  user-select: none;\r\n}\r\n\r\n.menu-item:hover {\r\n  color: #3b82f6;\r\n  transform: translateY(-1px);\r\n  background-color: rgba(59, 130, 246, 0.05);\r\n  border-color: transparent;\r\n}\r\n\r\n/* .menu-item:hover:not(.menu-item-selected) .menu-text {\r\n  color: #3b82f6 !important;\r\n}\r\n\r\n.menu-item:hover:not(.menu-item-selected) .menu-icon {\r\n  color: #3b82f6 !important;\r\n} */\r\n\r\n\r\n\r\n.menu-item-selected {\r\n  color: #ffffff !important;\r\n  background: linear-gradient(135deg, #3b82f6 0%, #60a5fa 100%) !important;\r\n  font-weight: 600;\r\n  border-color: transparent;\r\n  transform: translateY(-1px);\r\n}\r\n\r\n.menu-item-selected .menu-text {\r\n  color: #ffffff !important;\r\n}\r\n\r\n.menu-item-selected .menu-icon {\r\n  color: #ffffff !important;\r\n}\r\n\r\n.menu-item-selected:hover {\r\n  color: #ffffff !important;\r\n  background: linear-gradient(135deg, #3b82f6 0%, #60a5fa 100%) !important;\r\n}\r\n\r\n.menu-item-selected:hover .menu-text {\r\n  color: #ffffff !important;\r\n}\r\n\r\n.menu-item-selected:hover .menu-icon {\r\n  color: #ffffff !important;\r\n}\r\n\r\n/* 子菜单样式 */\r\n.menu-submenu {\r\n  margin: 0 4px;\r\n  position: relative;\r\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\r\n}\r\n\r\n.submenu-title {\r\n  position: relative;\r\n}\r\n\r\n.submenu-arrow {\r\n  margin-left: 4px;\r\n  font-size: 12px;\r\n  transition: transform 0.3s ease;\r\n}\r\n\r\n.menu-submenu:hover .submenu-arrow {\r\n  transform: rotate(180deg);\r\n}\r\n\r\n.submenu-popup {\r\n  position: absolute;\r\n  top: 100%;\r\n  left: 0;\r\n  min-width: 160px;\r\n  background: #ffffff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 24px rgba(0, 0, 0, 0.1);\r\n  border: 1px solid rgba(0, 0, 0, 0.06);\r\n  opacity: 0;\r\n  visibility: hidden;\r\n  transform: translateY(-10px);\r\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\r\n  z-index: 1000;\r\n  padding: 8px 0;\r\n}\r\n\r\n.submenu-visible {\r\n  opacity: 1;\r\n  visibility: visible;\r\n  transform: translateY(0);\r\n}\r\n\r\n.submenu-item {\r\n  padding: 8px 16px;\r\n  color: #64748b;\r\n  font-weight: 500;\r\n  font-size: 14px;\r\n  transition: all 0.3s ease;\r\n  cursor: pointer;\r\n  user-select: none;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.submenu-item:hover {\r\n  color: #3b82f6;\r\n  background-color: rgba(59, 130, 246, 0.05);\r\n}\r\n\r\n.submenu-item-selected {\r\n  color: #3b82f6 !important;\r\n  background-color: rgba(59, 130, 246, 0.1) !important;\r\n  font-weight: 600;\r\n}\r\n\r\n/* 图标样式优化 */\r\n.menu-icon {\r\n  font-size: 16px;\r\n  margin-right: 8px;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.menu-item:hover .menu-icon {\r\n  transform: scale(1.1);\r\n}\r\n\r\n.menu-item-selected .menu-icon {\r\n  color: #ffffff;\r\n  transform: scale(1.05);\r\n}\r\n\r\n.menu-text {\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.header-actions {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 16px;\r\n}\r\n\r\n.notification-badge {\r\n  cursor: pointer;\r\n}\r\n\r\n.action-btn {\r\n  color: #595959;\r\n  transition: color 0.3s ease;\r\n}\r\n\r\n.action-btn:hover {\r\n  color: #1890ff;\r\n}\r\n\r\n.user-btn {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  color: #595959;\r\n  transition: color 0.3s ease;\r\n}\r\n\r\n.user-btn:hover {\r\n  color: #1890ff;\r\n}\r\n\r\n.user-avatar {\r\n  background: #1890ff;\r\n  font-weight: 600;\r\n}\r\n\r\n.user-name {\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n}\r\n\r\n/* 主内容区域 */\r\n.monitor-content {\r\n  flex: 1;\r\n  padding: 32px 24px;\r\n  background: linear-gradient(135deg, #f0f5ff 0%, #f8faff 50%, #ffffff 100%);\r\n  position: relative;\r\n}\r\n\r\n.monitor-content::before {\r\n  content: '';\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  height: 100px;\r\n  background: linear-gradient(180deg, rgba(24, 144, 255, 0.02) 0%, transparent 100%);\r\n  pointer-events: none;\r\n}\r\n\r\n.content-container {\r\n  max-width: 1400px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.page-header {\r\n  margin-bottom: 24px;\r\n}\r\n\r\n.page-title {\r\n  margin: 0 0 8px 0;\r\n  font-size: 24px;\r\n  font-weight: 600;\r\n  color: #262626;\r\n}\r\n\r\n.page-subtitle {\r\n  margin: 0;\r\n  font-size: 14px;\r\n  color: #595959;\r\n}\r\n\r\n.content-panel {\r\n  background: #ffffff;\r\n  border-radius: 16px;\r\n  box-shadow: 0 4px 24px rgba(24, 144, 255, 0.08);\r\n  padding: 20px;\r\n  min-height: 600px;\r\n  border: 1px solid rgba(24, 144, 255, 0.08);\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n\r\n.content-panel::before {\r\n  content: '';\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  height: 1px;\r\n  background: linear-gradient(90deg, transparent, rgba(24, 144, 255, 0.2), transparent);\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 768px) {\r\n  .header-container {\r\n    padding: 0 16px;\r\n    flex-direction: column;\r\n    height: auto;\r\n    gap: 12px;\r\n  }\r\n  \r\n  .main-nav {\r\n    width: 100%;\r\n    margin: 0;\r\n  }\r\n  \r\n  .custom-menu {\r\n    width: 100%;\r\n    justify-content: center;\r\n    height: 48px;\r\n    flex-wrap: wrap;\r\n    gap: 4px;\r\n  }\r\n  \r\n  .menu-item {\r\n    height: 36px;\r\n    line-height: 36px;\r\n    padding: 0 12px;\r\n    font-size: 13px;\r\n  }\r\n  \r\n  .page-title {\r\n    font-size: 20px;\r\n  }\r\n  \r\n  .monitor-content {\r\n    padding: 16px;\r\n  }\r\n  \r\n  .content-panel {\r\n    padding: 16px;\r\n  }\r\n}\r\n\r\n@media (max-width: 480px) {\r\n  .brand-title {\r\n    font-size: 16px;\r\n  }\r\n  \r\n  .user-name {\r\n    display: none;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}