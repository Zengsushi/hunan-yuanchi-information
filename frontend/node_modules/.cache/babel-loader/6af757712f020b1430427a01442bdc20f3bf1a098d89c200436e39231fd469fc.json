{"ast":null,"code":"import { ref, reactive, computed, watch, nextTick, h } from 'vue';\nimport { message, Modal } from 'ant-design-vue';\nimport { ipAPI } from '@/api';\nimport TemplateCard from './TemplateCard.vue';\nimport { UpOutlined, DownOutlined, DatabaseOutlined, CloudOutlined, SettingOutlined, MonitorOutlined, SecurityScanOutlined, AppstoreOutlined } from '@ant-design/icons-vue';\n\n// Props\n\nexport default {\n  __name: 'TemplateDrawer',\n  props: {\n    visible: {\n      type: Boolean,\n      default: false\n    },\n    selectedIP: {\n      type: Object,\n      default: null\n    }\n  },\n  emits: ['update:visible', 'monitoring-created'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const props = __props;\n\n    // Emits\n    const emit = __emit;\n\n    // 响应式数据\n    const zabbixTemplates = ref([]);\n    const selectedTemplateIds = ref([]);\n    const templateLoading = ref(false);\n    const templateSearchKeyword = ref('');\n    const monitoringCreating = ref(false);\n    const selectedCategory = ref('');\n    const expandedCategories = ref({});\n\n    // 计算属性\n    const groupedTemplates = computed(() => {\n      if (!Array.isArray(zabbixTemplates.value)) {\n        return {};\n      }\n      const grouped = {};\n      zabbixTemplates.value.forEach(template => {\n        const category = template.category || '其他';\n        if (!grouped[category]) {\n          grouped[category] = [];\n        }\n        grouped[category].push(template);\n      });\n      return grouped;\n    });\n    const filteredTemplates = computed(() => {\n      let filtered = {\n        ...groupedTemplates.value\n      };\n\n      // 分类筛选\n      if (selectedCategory.value) {\n        const categoryKey = selectedCategory.value;\n        filtered = {\n          [categoryKey]: filtered[categoryKey] || []\n        };\n      }\n\n      // 搜索筛选\n      if (templateSearchKeyword.value) {\n        const keyword = templateSearchKeyword.value.toLowerCase();\n        Object.keys(filtered).forEach(category => {\n          filtered[category] = filtered[category].filter(template => template.name.toLowerCase().includes(keyword));\n          if (filtered[category].length === 0) {\n            delete filtered[category];\n          }\n        });\n      }\n      return filtered;\n    });\n    const categoryStats = computed(() => {\n      const stats = {};\n      Object.keys(groupedTemplates.value).forEach(category => {\n        const templates = groupedTemplates.value[category];\n        const selectedCount = templates.filter(t => selectedTemplateIds.value.includes(t.templateid)).length;\n        stats[category] = {\n          count: templates.length,\n          selected: selectedCount\n        };\n      });\n      return stats;\n    });\n\n    // 方法\n    const safeCategoryToString = category => {\n      if (category === null || category === undefined) {\n        return '其他';\n      }\n      return String(category);\n    };\n    const getCategoryIcon = category => {\n      const categoryStr = safeCategoryToString(category).toLowerCase();\n      if (categoryStr.includes('database') || categoryStr.includes('数据库')) {\n        return DatabaseOutlined;\n      } else if (categoryStr.includes('network') || categoryStr.includes('网络')) {\n        return CloudOutlined;\n      } else if (categoryStr.includes('system') || categoryStr.includes('系统')) {\n        return SettingOutlined;\n      } else if (categoryStr.includes('application') || categoryStr.includes('应用')) {\n        return AppstoreOutlined;\n      } else if (categoryStr.includes('security') || categoryStr.includes('安全')) {\n        return SecurityScanOutlined;\n      }\n      return MonitorOutlined;\n    };\n    const toggleCategoryFilter = category => {\n      const categoryStr = safeCategoryToString(category);\n      if (selectedCategory.value === categoryStr) {\n        selectedCategory.value = '';\n      } else {\n        selectedCategory.value = categoryStr;\n      }\n    };\n    const clearCategoryFilter = () => {\n      selectedCategory.value = '';\n    };\n    const toggleCategoryExpand = category => {\n      const categoryStr = safeCategoryToString(category);\n      expandedCategories.value[categoryStr] = !expandedCategories.value[categoryStr];\n    };\n    const isCategoryExpanded = category => {\n      const categoryStr = safeCategoryToString(category);\n      return expandedCategories.value[categoryStr] !== false;\n    };\n    const handleTemplateSelect = (templateId, checked) => {\n      if (checked) {\n        if (!selectedTemplateIds.value.includes(templateId)) {\n          selectedTemplateIds.value.push(templateId);\n        }\n      } else {\n        const index = selectedTemplateIds.value.indexOf(templateId);\n        if (index > -1) {\n          selectedTemplateIds.value.splice(index, 1);\n        }\n      }\n    };\n    const handleTemplateSearch = async () => {\n      if (props.selectedIP) {\n        await loadZabbixTemplates(props.selectedIP.id);\n      }\n    };\n    const loadZabbixTemplates = async ipId => {\n      templateLoading.value = true;\n      try {\n        const response = await ipAPI.getZabbixTemplates(ipId, templateSearchKeyword.value);\n        if (response.data && response.data.code === 200) {\n          zabbixTemplates.value = response.data.data.templates || [];\n\n          // 初始化展开状态，默认展开所有分类\n          nextTick(() => {\n            try {\n              const categories = Object.keys(groupedTemplates.value || {});\n              categories.forEach(category => {\n                const categoryStr = String(category);\n                expandedCategories.value[categoryStr] = true;\n              });\n            } catch (error) {\n              console.warn('初始化展开状态错误:', error);\n            }\n          });\n          console.log('成功加载模板列表:', zabbixTemplates.value.length, '个模板');\n        } else {\n          // 检查是否是Zabbix连接问题\n          if (response.data && response.data.message && response.data.message.includes('Zabbix API连接不可用')) {\n            // 显示详细的诊断信息\n            const errorMessage = '⚠️ Zabbix服务器连接失败';\n            const suggestions = ['请检查Zabbix服务器是否正常运行', '验证网络连接和防火墙设置', '检查Zabbix API配置是否正确'];\n            Modal.error({\n              title: '无法加载监控模板',\n              content: h('div', [h('p', {\n                style: 'margin-bottom: 16px;'\n              }, errorMessage), h('div', {\n                style: 'background: #f5f5f5; padding: 12px; border-radius: 6px;'\n              }, [h('p', {\n                style: 'margin: 0 0 8px 0; font-weight: 600;'\n              }, '解决建议：'), h('ul', {\n                style: 'margin: 0; padding-left: 20px;'\n              }, suggestions.map(suggestion => h('li', {\n                style: 'margin-bottom: 4px;'\n              }, suggestion)))])]),\n              width: 500\n            });\n          } else {\n            message.error(`加载模板列表失败: ${response.data?.message || '未知错误'}`);\n          }\n          zabbixTemplates.value = [];\n        }\n      } catch (error) {\n        console.error('加载模板列表失败:', error);\n\n        // 检查是否是网络连接问题\n        if (error.message && (error.message.includes('Network Error') || error.message.includes('timeout'))) {\n          Modal.error({\n            title: '网络连接失败',\n            content: '无法连接到后端服务器，请检查网络连接和服务器状态。'\n          });\n        } else {\n          message.error(`加载模板列表失败: ${error.message}`);\n        }\n        zabbixTemplates.value = [];\n      } finally {\n        templateLoading.value = false;\n      }\n    };\n    const handleCreateMonitoring = async () => {\n      if (!props.selectedIP) {\n        message.error('请先选择IP地址');\n        return;\n      }\n      if (selectedTemplateIds.value.length === 0) {\n        message.error('请选择至少一个监控模板');\n        return;\n      }\n      monitoringCreating.value = true;\n      try {\n        const monitoringData = {\n          template_ids: selectedTemplateIds.value,\n          host_name: props.selectedIP.hostname || props.selectedIP.ip_address || props.selectedIP.ipAddress,\n          group_ids: [] // 使用默认主机组\n        };\n        const response = await ipAPI.createMonitoring(props.selectedIP.id, monitoringData);\n        if (response.data && response.data.code === 200) {\n          message.success('监控启用成功！');\n          emit('monitoring-created', props.selectedIP);\n          handleClose();\n        } else {\n          message.error(`启用监控失败: ${response.data?.message || '未知错误'}`);\n        }\n      } catch (error) {\n        console.error('启用监控失败:', error);\n        message.error(`启用监控失败: ${error.message}`);\n      } finally {\n        monitoringCreating.value = false;\n      }\n    };\n    const handleClose = () => {\n      emit('update:visible', false);\n      // 清理状态\n      selectedTemplateIds.value = [];\n      templateSearchKeyword.value = '';\n      selectedCategory.value = '';\n      expandedCategories.value = {};\n    };\n\n    // 监听props变化\n    watch(() => props.visible, newVal => {\n      if (newVal && props.selectedIP) {\n        loadZabbixTemplates(props.selectedIP.id);\n      }\n    });\n    const __returned__ = {\n      props,\n      emit,\n      zabbixTemplates,\n      selectedTemplateIds,\n      templateLoading,\n      templateSearchKeyword,\n      monitoringCreating,\n      selectedCategory,\n      expandedCategories,\n      groupedTemplates,\n      filteredTemplates,\n      categoryStats,\n      safeCategoryToString,\n      getCategoryIcon,\n      toggleCategoryFilter,\n      clearCategoryFilter,\n      toggleCategoryExpand,\n      isCategoryExpanded,\n      handleTemplateSelect,\n      handleTemplateSearch,\n      loadZabbixTemplates,\n      handleCreateMonitoring,\n      handleClose,\n      ref,\n      reactive,\n      computed,\n      watch,\n      nextTick,\n      h,\n      get message() {\n        return message;\n      },\n      get Modal() {\n        return Modal;\n      },\n      get ipAPI() {\n        return ipAPI;\n      },\n      TemplateCard,\n      get UpOutlined() {\n        return UpOutlined;\n      },\n      get DownOutlined() {\n        return DownOutlined;\n      },\n      get DatabaseOutlined() {\n        return DatabaseOutlined;\n      },\n      get CloudOutlined() {\n        return CloudOutlined;\n      },\n      get SettingOutlined() {\n        return SettingOutlined;\n      },\n      get MonitorOutlined() {\n        return MonitorOutlined;\n      },\n      get SecurityScanOutlined() {\n        return SecurityScanOutlined;\n      },\n      get AppstoreOutlined() {\n        return AppstoreOutlined;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","computed","watch","nextTick","h","message","Modal","ipAPI","TemplateCard","UpOutlined","DownOutlined","DatabaseOutlined","CloudOutlined","SettingOutlined","MonitorOutlined","SecurityScanOutlined","AppstoreOutlined","props","__props","emit","__emit","zabbixTemplates","selectedTemplateIds","templateLoading","templateSearchKeyword","monitoringCreating","selectedCategory","expandedCategories","groupedTemplates","Array","isArray","value","grouped","forEach","template","category","push","filteredTemplates","filtered","categoryKey","keyword","toLowerCase","Object","keys","filter","name","includes","length","categoryStats","stats","templates","selectedCount","t","templateid","count","selected","safeCategoryToString","undefined","String","getCategoryIcon","categoryStr","toggleCategoryFilter","clearCategoryFilter","toggleCategoryExpand","isCategoryExpanded","handleTemplateSelect","templateId","checked","index","indexOf","splice","handleTemplateSearch","selectedIP","loadZabbixTemplates","id","ipId","response","getZabbixTemplates","data","code","categories","error","console","warn","log","errorMessage","suggestions","title","content","style","map","suggestion","width","handleCreateMonitoring","monitoringData","template_ids","host_name","hostname","ip_address","ipAddress","group_ids","createMonitoring","success","handleClose","visible","newVal"],"sources":["E:/A_project/yuanchi/AIops/frontend/src/components/business/TemplateDrawer.vue"],"sourcesContent":["<template>\r\n  <a-drawer\r\n    :open=\"visible\"\r\n    title=\"选择监控模板\"\r\n    width=\"1200\"\r\n    placement=\"right\"\r\n    :onClose=\"handleClose\"\r\n    @update:open=\"$emit('update:visible', $event)\"\r\n  >\r\n    <template #extra>\r\n      <a-space>\r\n        <a-button @click=\"handleClose\">取消</a-button>\r\n        <a-button \r\n          type=\"primary\" \r\n          @click=\"handleCreateMonitoring\"\r\n          :loading=\"monitoringCreating\"\r\n          :disabled=\"selectedTemplateIds.length === 0\"\r\n        >\r\n          启用监控 ({{ selectedTemplateIds.length }})\r\n        </a-button>\r\n      </a-space>\r\n    </template>\r\n\r\n    <div v-if=\"selectedIP\" class=\"template-drawer-content\">\r\n      <!-- 模板搜索和筛选 -->\r\n      <div class=\"template-search-section\">\r\n        <div class=\"search-bar\">\r\n          <a-input-search\r\n            v-model:value=\"templateSearchKeyword\"\r\n            placeholder=\"搜索模板名称...\"\r\n            @search=\"handleTemplateSearch\"\r\n            @pressEnter=\"handleTemplateSearch\"\r\n            allow-clear\r\n            size=\"large\"\r\n          />\r\n        </div>\r\n        \r\n        <!-- 分类筛选 -->\r\n        <div class=\"category-filter\">\r\n          <a-space wrap>\r\n            <a-tag\r\n              v-for=\"(stats, category) in categoryStats\"\r\n              :key=\"safeCategoryToString(category)\"\r\n              :color=\"selectedCategory === safeCategoryToString(category) ? 'blue' : 'default'\"\r\n              :class=\"{ 'category-tag-selected': selectedCategory === safeCategoryToString(category) }\"\r\n              @click=\"toggleCategoryFilter(category)\"\r\n              class=\"category-filter-tag\"\r\n            >\r\n              <component :is=\"getCategoryIcon(category)\" class=\"category-filter-icon\" />\r\n              {{ safeCategoryToString(category).replace(/^\\S+ /, '') }}\r\n              <span class=\"category-count\">({{ Number(stats?.count) || 0 }})</span>\r\n              <span v-if=\"Number(stats?.selected) > 0\" class=\"category-selected\">✓{{ Number(stats.selected) }}</span>\r\n            </a-tag>\r\n            <a-tag \r\n              v-if=\"selectedCategory\"\r\n              color=\"red\"\r\n              @click=\"clearCategoryFilter\"\r\n              class=\"clear-filter-tag\"\r\n            >\r\n              清除筛选\r\n            </a-tag>\r\n          </a-space>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 模板列表 -->\r\n      <div class=\"template-list\">\r\n        <a-spin :spinning=\"templateLoading\" tip=\"正在加载模板...\">\r\n          <div v-if=\"Object.keys(groupedTemplates).length === 0\" class=\"empty-templates\">\r\n            <a-empty description=\"暂无可用模板\" />\r\n          </div>\r\n          \r\n          <div v-else>\r\n            <!-- 已选模板提示 -->\r\n            <div v-if=\"selectedTemplateIds.length > 0\" class=\"selected-templates-info\">\r\n              <a-alert\r\n                :message=\"`已选择 ${selectedTemplateIds.length} 个模板`\"\r\n                type=\"info\"\r\n                show-icon\r\n                closable\r\n                @close=\"selectedTemplateIds = []\"\r\n              />\r\n            </div>\r\n\r\n            <!-- 按分类展示模板 -->\r\n            <div \r\n              v-for=\"(templates, category) in filteredTemplates\" \r\n              :key=\"category\" \r\n              class=\"template-category\"\r\n            >\r\n              <div class=\"category-header\">\r\n                <div class=\"category-title-wrapper\">\r\n                  <component :is=\"getCategoryIcon(category)\" class=\"category-icon\" />\r\n                  <h4 class=\"category-title\">{{ safeCategoryToString(category) }}</h4>\r\n                  <div class=\"category-stats\">\r\n                    <a-badge \r\n                      :count=\"Number(categoryStats[safeCategoryToString(category)]?.count) || 0\" \r\n                      :number-style=\"{ backgroundColor: '#f0f0f0', color: '#666' }\"\r\n                    />\r\n                    <a-badge \r\n                      v-if=\"Number(categoryStats[safeCategoryToString(category)]?.selected) > 0\"\r\n                      :count=\"Number(categoryStats[safeCategoryToString(category)]?.selected)\" \r\n                      :number-style=\"{ backgroundColor: '#1890ff', color: '#fff' }\"\r\n                      class=\"selected-badge\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <a-button\r\n                  v-if=\"Number(categoryStats[safeCategoryToString(category)]?.count) > 0\"\r\n                  type=\"text\"\r\n                  size=\"small\"\r\n                  @click=\"toggleCategoryExpand(category)\"\r\n                  class=\"expand-button\"\r\n                >\r\n                  <UpOutlined v-if=\"isCategoryExpanded(category)\" />\r\n                  <DownOutlined v-else />\r\n                </a-button>\r\n              </div>\r\n              <transition name=\"collapse\">\r\n                <div class=\"template-grid-wrapper\" v-show=\"isCategoryExpanded(category)\">\r\n                  <div class=\"template-grid\">\r\n                    <TemplateCard\r\n                      v-for=\"template in templates\" \r\n                      :key=\"template.templateid\"\r\n                      :template=\"template\"\r\n                      :selected=\"selectedTemplateIds.includes(template.templateid)\"\r\n                      @select=\"handleTemplateSelect\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </transition>\r\n            </div>\r\n          </div>\r\n        </a-spin>\r\n      </div>\r\n    </div>\r\n  </a-drawer>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, computed, watch, nextTick, h } from 'vue';\r\nimport { message, Modal } from 'ant-design-vue';\r\nimport { ipAPI } from '@/api';\r\nimport TemplateCard from './TemplateCard.vue';\r\nimport {\r\n  UpOutlined,\r\n  DownOutlined,\r\n  DatabaseOutlined,\r\n  CloudOutlined,\r\n  SettingOutlined,\r\n  MonitorOutlined,\r\n  SecurityScanOutlined,\r\n  AppstoreOutlined\r\n} from '@ant-design/icons-vue';\r\n\r\n// Props\r\nconst props = defineProps({\r\n  visible: {\r\n    type: Boolean,\r\n    default: false\r\n  },\r\n  selectedIP: {\r\n    type: Object,\r\n    default: null\r\n  }\r\n});\r\n\r\n// Emits\r\nconst emit = defineEmits(['update:visible', 'monitoring-created']);\r\n\r\n// 响应式数据\r\nconst zabbixTemplates = ref([]);\r\nconst selectedTemplateIds = ref([]);\r\nconst templateLoading = ref(false);\r\nconst templateSearchKeyword = ref('');\r\nconst monitoringCreating = ref(false);\r\nconst selectedCategory = ref('');\r\nconst expandedCategories = ref({});\r\n\r\n// 计算属性\r\nconst groupedTemplates = computed(() => {\r\n  if (!Array.isArray(zabbixTemplates.value)) {\r\n    return {};\r\n  }\r\n  \r\n  const grouped = {};\r\n  zabbixTemplates.value.forEach(template => {\r\n    const category = template.category || '其他';\r\n    if (!grouped[category]) {\r\n      grouped[category] = [];\r\n    }\r\n    grouped[category].push(template);\r\n  });\r\n  \r\n  return grouped;\r\n});\r\n\r\nconst filteredTemplates = computed(() => {\r\n  let filtered = { ...groupedTemplates.value };\r\n  \r\n  // 分类筛选\r\n  if (selectedCategory.value) {\r\n    const categoryKey = selectedCategory.value;\r\n    filtered = {\r\n      [categoryKey]: filtered[categoryKey] || []\r\n    };\r\n  }\r\n  \r\n  // 搜索筛选\r\n  if (templateSearchKeyword.value) {\r\n    const keyword = templateSearchKeyword.value.toLowerCase();\r\n    Object.keys(filtered).forEach(category => {\r\n      filtered[category] = filtered[category].filter(template => \r\n        template.name.toLowerCase().includes(keyword)\r\n      );\r\n      if (filtered[category].length === 0) {\r\n        delete filtered[category];\r\n      }\r\n    });\r\n  }\r\n  \r\n  return filtered;\r\n});\r\n\r\nconst categoryStats = computed(() => {\r\n  const stats = {};\r\n  \r\n  Object.keys(groupedTemplates.value).forEach(category => {\r\n    const templates = groupedTemplates.value[category];\r\n    const selectedCount = templates.filter(t => \r\n      selectedTemplateIds.value.includes(t.templateid)\r\n    ).length;\r\n    \r\n    stats[category] = {\r\n      count: templates.length,\r\n      selected: selectedCount\r\n    };\r\n  });\r\n  \r\n  return stats;\r\n});\r\n\r\n// 方法\r\nconst safeCategoryToString = (category) => {\r\n  if (category === null || category === undefined) {\r\n    return '其他';\r\n  }\r\n  return String(category);\r\n};\r\n\r\nconst getCategoryIcon = (category) => {\r\n  const categoryStr = safeCategoryToString(category).toLowerCase();\r\n  \r\n  if (categoryStr.includes('database') || categoryStr.includes('数据库')) {\r\n    return DatabaseOutlined;\r\n  } else if (categoryStr.includes('network') || categoryStr.includes('网络')) {\r\n    return CloudOutlined;\r\n  } else if (categoryStr.includes('system') || categoryStr.includes('系统')) {\r\n    return SettingOutlined;\r\n  } else if (categoryStr.includes('application') || categoryStr.includes('应用')) {\r\n    return AppstoreOutlined;\r\n  } else if (categoryStr.includes('security') || categoryStr.includes('安全')) {\r\n    return SecurityScanOutlined;\r\n  }\r\n  \r\n  return MonitorOutlined;\r\n};\r\n\r\nconst toggleCategoryFilter = (category) => {\r\n  const categoryStr = safeCategoryToString(category);\r\n  if (selectedCategory.value === categoryStr) {\r\n    selectedCategory.value = '';\r\n  } else {\r\n    selectedCategory.value = categoryStr;\r\n  }\r\n};\r\n\r\nconst clearCategoryFilter = () => {\r\n  selectedCategory.value = '';\r\n};\r\n\r\nconst toggleCategoryExpand = (category) => {\r\n  const categoryStr = safeCategoryToString(category);\r\n  expandedCategories.value[categoryStr] = !expandedCategories.value[categoryStr];\r\n};\r\n\r\nconst isCategoryExpanded = (category) => {\r\n  const categoryStr = safeCategoryToString(category);\r\n  return expandedCategories.value[categoryStr] !== false;\r\n};\r\n\r\nconst handleTemplateSelect = (templateId, checked) => {\r\n  if (checked) {\r\n    if (!selectedTemplateIds.value.includes(templateId)) {\r\n      selectedTemplateIds.value.push(templateId);\r\n    }\r\n  } else {\r\n    const index = selectedTemplateIds.value.indexOf(templateId);\r\n    if (index > -1) {\r\n      selectedTemplateIds.value.splice(index, 1);\r\n    }\r\n  }\r\n};\r\n\r\nconst handleTemplateSearch = async () => {\r\n  if (props.selectedIP) {\r\n    await loadZabbixTemplates(props.selectedIP.id);\r\n  }\r\n};\r\n\r\nconst loadZabbixTemplates = async (ipId) => {\r\n  templateLoading.value = true;\r\n  try {\r\n    const response = await ipAPI.getZabbixTemplates(ipId, templateSearchKeyword.value);\r\n    \r\n    if (response.data && response.data.code === 200) {\r\n      zabbixTemplates.value = response.data.data.templates || [];\r\n      \r\n      // 初始化展开状态，默认展开所有分类\r\n      nextTick(() => {\r\n        try {\r\n          const categories = Object.keys(groupedTemplates.value || {});\r\n          categories.forEach(category => {\r\n            const categoryStr = String(category);\r\n            expandedCategories.value[categoryStr] = true;\r\n          });\r\n        } catch (error) {\r\n          console.warn('初始化展开状态错误:', error);\r\n        }\r\n      });\r\n      \r\n      console.log('成功加载模板列表:', zabbixTemplates.value.length, '个模板');\r\n    } else {\r\n      // 检查是否是Zabbix连接问题\r\n      if (response.data && response.data.message && response.data.message.includes('Zabbix API连接不可用')) {\r\n        // 显示详细的诊断信息\r\n        const errorMessage = '⚠️ Zabbix服务器连接失败';\r\n        const suggestions = [\r\n          '请检查Zabbix服务器是否正常运行',\r\n          '验证网络连接和防火墙设置',\r\n          '检查Zabbix API配置是否正确'\r\n        ];\r\n        \r\n        Modal.error({\r\n          title: '无法加载监控模板',\r\n          content: h('div', [\r\n            h('p', { style: 'margin-bottom: 16px;' }, errorMessage),\r\n            h('div', { style: 'background: #f5f5f5; padding: 12px; border-radius: 6px;' }, [\r\n              h('p', { style: 'margin: 0 0 8px 0; font-weight: 600;' }, '解决建议：'),\r\n              h('ul', { style: 'margin: 0; padding-left: 20px;' }, \r\n                suggestions.map(suggestion => \r\n                  h('li', { style: 'margin-bottom: 4px;' }, suggestion)\r\n                )\r\n              )\r\n            ])\r\n          ]),\r\n          width: 500\r\n        });\r\n      } else {\r\n        message.error(`加载模板列表失败: ${response.data?.message || '未知错误'}`);\r\n      }\r\n      \r\n      zabbixTemplates.value = [];\r\n    }\r\n  } catch (error) {\r\n    console.error('加载模板列表失败:', error);\r\n    \r\n    // 检查是否是网络连接问题\r\n    if (error.message && (error.message.includes('Network Error') || error.message.includes('timeout'))) {\r\n      Modal.error({\r\n        title: '网络连接失败',\r\n        content: '无法连接到后端服务器，请检查网络连接和服务器状态。'\r\n      });\r\n    } else {\r\n      message.error(`加载模板列表失败: ${error.message}`);\r\n    }\r\n    \r\n    zabbixTemplates.value = [];\r\n  } finally {\r\n    templateLoading.value = false;\r\n  }\r\n};\r\n\r\nconst handleCreateMonitoring = async () => {\r\n  if (!props.selectedIP) {\r\n    message.error('请先选择IP地址');\r\n    return;\r\n  }\r\n  \r\n  if (selectedTemplateIds.value.length === 0) {\r\n    message.error('请选择至少一个监控模板');\r\n    return;\r\n  }\r\n  \r\n  monitoringCreating.value = true;\r\n  \r\n  try {\r\n    const monitoringData = {\r\n      template_ids: selectedTemplateIds.value,\r\n      host_name: props.selectedIP.hostname || props.selectedIP.ip_address || props.selectedIP.ipAddress,\r\n      group_ids: [] // 使用默认主机组\r\n    };\r\n    \r\n    const response = await ipAPI.createMonitoring(props.selectedIP.id, monitoringData);\r\n    \r\n    if (response.data && response.data.code === 200) {\r\n      message.success('监控启用成功！');\r\n      emit('monitoring-created', props.selectedIP);\r\n      handleClose();\r\n    } else {\r\n      message.error(`启用监控失败: ${response.data?.message || '未知错误'}`);\r\n    }\r\n  } catch (error) {\r\n    console.error('启用监控失败:', error);\r\n    message.error(`启用监控失败: ${error.message}`);\r\n  } finally {\r\n    monitoringCreating.value = false;\r\n  }\r\n};\r\n\r\nconst handleClose = () => {\r\n  emit('update:visible', false);\r\n  // 清理状态\r\n  selectedTemplateIds.value = [];\r\n  templateSearchKeyword.value = '';\r\n  selectedCategory.value = '';\r\n  expandedCategories.value = {};\r\n};\r\n\r\n// 监听props变化\r\nwatch(() => props.visible, (newVal) => {\r\n  if (newVal && props.selectedIP) {\r\n    loadZabbixTemplates(props.selectedIP.id);\r\n  }\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n/* 简洁抽屉内容 */\r\n.template-drawer-content {\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: #f8fafc;\r\n}\r\n\r\n/* 简洁搜索区域 */\r\n.template-search-section {\r\n  margin-bottom: 24px;\r\n  padding: 20px;\r\n  background: #ffffff;\r\n  border-radius: 8px;\r\n  border: 1px solid #e2e8f0;\r\n}\r\n\r\n.search-bar {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n/* 简洁搜索输入框 */\r\n:deep(.ant-input-search) {\r\n  border-radius: 6px;\r\n}\r\n\r\n:deep(.ant-input-search .ant-input) {\r\n  border-radius: 6px 0 0 6px;\r\n  border: 1px solid #d1d5db;\r\n  background: #ffffff;\r\n  transition: all 0.2s ease;\r\n  height: 40px;\r\n  font-size: 14px;\r\n}\r\n\r\n:deep(.ant-input-search .ant-input:focus) {\r\n  border-color: #2563eb;\r\n  box-shadow: 0 0 0 2px rgba(37, 99, 235, 0.1);\r\n}\r\n\r\n:deep(.ant-input-search .ant-input-search-button) {\r\n  border-radius: 0 6px 6px 0;\r\n  background: #2563eb;\r\n  border: 1px solid #2563eb;\r\n  height: 40px;\r\n  width: 40px;\r\n}\r\n\r\n:deep(.ant-input-search .ant-input-search-button:hover) {\r\n  background: #1d4ed8;\r\n  border-color: #1d4ed8;\r\n}\r\n\r\n/* 简洁分类过滤 */\r\n.category-filter {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 8px;\r\n  align-items: center;\r\n}\r\n\r\n.category-filter-tag {\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  gap: 4px;\r\n  border-radius: 6px;\r\n  padding: 6px 12px;\r\n  font-weight: 500;\r\n  border: 1px solid #d1d5db;\r\n  background: #ffffff;\r\n  user-select: none;\r\n}\r\n\r\n.category-filter-tag:hover {\r\n  border-color: #2563eb;\r\n  color: #2563eb;\r\n}\r\n\r\n.category-tag-selected {\r\n  background: #2563eb !important;\r\n  color: white !important;\r\n  border-color: #2563eb !important;\r\n}\r\n\r\n.category-filter-icon {\r\n  font-size: 12px;\r\n}\r\n\r\n.category-count {\r\n  font-size: 11px;\r\n  opacity: 0.8;\r\n}\r\n\r\n.category-selected {\r\n  font-size: 10px;\r\n  background: #4ecdc4;\r\n  color: white;\r\n  padding: 1px 4px;\r\n  border-radius: 8px;\r\n  margin-left: 2px;\r\n}\r\n\r\n.clear-filter-tag {\r\n  cursor: pointer;\r\n  background: #dc2626 !important;\r\n  color: white !important;\r\n  border-color: #dc2626 !important;\r\n}\r\n\r\n.clear-filter-tag:hover {\r\n  background: #b91c1c !important;\r\n  border-color: #b91c1c !important;\r\n}\r\n\r\n/* 简洁模板列表 */\r\n.template-list {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  padding: 0 20px 20px;\r\n}\r\n\r\n.template-list::-webkit-scrollbar {\r\n  width: 6px;\r\n}\r\n\r\n.template-list::-webkit-scrollbar {\r\n  display: none;\r\n}\r\n\r\n.template-list::-webkit-scrollbar-track {\r\n  display: none;\r\n}\r\n\r\n.template-list::-webkit-scrollbar-thumb {\r\n  display: none;\r\n}\r\n\r\n.template-list::-webkit-scrollbar-thumb:hover {\r\n  display: none;\r\n}\r\n\r\n/* 简洁空状态 */\r\n.empty-templates {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 300px;\r\n  background: #ffffff;\r\n  border-radius: 8px;\r\n  border: 2px dashed #d1d5db;\r\n  color: #6b7280;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n}\r\n\r\n/* 简洁选中信息 */\r\n.selected-templates-info {\r\n  margin-bottom: 16px;\r\n  padding: 12px 16px;\r\n  background: #eff6ff;\r\n  border-radius: 6px;\r\n  border: 1px solid #bfdbfe;\r\n  color: #1e40af;\r\n  font-weight: 500;\r\n}\r\n\r\n/* 简洁模板分类 */\r\n.template-category {\r\n  margin-bottom: 24px;\r\n}\r\n\r\n.category-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 16px 20px;\r\n  background: #ffffff;\r\n  border-radius: 8px;\r\n  margin-bottom: 12px;\r\n  border: 1px solid #e2e8f0;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.category-header:hover {\r\n  border-color: #cbd5e1;\r\n}\r\n\r\n.category-title-wrapper {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n}\r\n\r\n.category-icon {\r\n  font-size: 16px;\r\n  color: #2563eb;\r\n}\r\n\r\n.category-title {\r\n  margin: 0;\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  color: #1f2937;\r\n}\r\n\r\n.category-stats {\r\n  display: flex;\r\n  gap: 12px;\r\n  align-items: center;\r\n}\r\n\r\n.selected-badge {\r\n  margin-left: 8px;\r\n  background: #10b981;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 6px;\r\n  padding: 2px 6px;\r\n  font-size: 11px;\r\n  font-weight: 500;\r\n}\r\n\r\n.expand-button {\r\n  padding: 6px;\r\n  height: auto;\r\n  min-width: auto;\r\n  border-radius: 6px;\r\n  border: 1px solid #d1d5db;\r\n  background: #ffffff;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.expand-button:hover {\r\n  border-color: #2563eb;\r\n  color: #2563eb;\r\n}\r\n\r\n/* 简洁模板网格 */\r\n.template-grid-wrapper {\r\n  overflow: hidden;\r\n  max-width: 100%;\r\n}\r\n\r\n.template-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\r\n  gap: 16px;\r\n  justify-content: start;\r\n}\r\n\r\n/* 折叠动画 */\r\n.collapse-enter-active,\r\n.collapse-leave-active {\r\n  transition: all 0.3s ease;\r\n  max-height: 1000px;\r\n  opacity: 1;\r\n}\r\n\r\n.collapse-enter-from,\r\n.collapse-leave-to {\r\n  max-height: 0;\r\n  opacity: 0;\r\n  transform: translateY(-10px);\r\n}\r\n\r\n/* 简洁模板卡片 */\r\n:deep(.template-card) {\r\n  background: #ffffff;\r\n  border-radius: 8px;\r\n  border: 1px solid #e2e8f0;\r\n  transition: all 0.2s ease;\r\n  overflow: hidden;\r\n}\r\n\r\n:deep(.template-card:hover) {\r\n  border-color: #cbd5e1;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n:deep(.template-card.selected) {\r\n  border-color: #2563eb;\r\n  background: #eff6ff;\r\n  box-shadow: 0 4px 12px rgba(37, 99, 235, 0.15);\r\n}\r\n\r\n:deep(.template-card .ant-card-body) {\r\n  padding: 20px;\r\n}\r\n\r\n:deep(.template-card .ant-card-meta-title) {\r\n  font-weight: 700;\r\n  color: #2d3748;\r\n  font-size: 14px;\r\n}\r\n\r\n:deep(.template-card .ant-card-meta-description) {\r\n  color: #718096;\r\n  font-size: 12px;\r\n  line-height: 1.4;\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 1400px) {\r\n  .template-grid {\r\n    grid-template-columns: repeat(3, 1fr);\r\n    gap: 14px;\r\n  }\r\n}\r\n\r\n@media (max-width: 1200px) {\r\n  .template-grid {\r\n    grid-template-columns: repeat(2, 1fr);\r\n    gap: 12px;\r\n  }\r\n  \r\n  .template-search-section {\r\n    padding: 20px;\r\n  }\r\n  \r\n  .template-list {\r\n    padding: 0 20px 20px;\r\n  }\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .template-grid {\r\n    grid-template-columns: 1fr;\r\n    gap: 12px;\r\n  }\r\n  \r\n  .template-search-section {\r\n    padding: 16px;\r\n    margin-bottom: 24px;\r\n  }\r\n  \r\n  .template-list {\r\n    padding: 0 16px 16px;\r\n  }\r\n  \r\n  .category-header {\r\n    padding: 16px 20px;\r\n  }\r\n  \r\n  .category-filter {\r\n    gap: 8px;\r\n  }\r\n  \r\n  .category-filter-tag {\r\n    padding: 6px 12px;\r\n    font-size: 12px;\r\n  }\r\n}\r\n\r\n/* 简洁抽屉样式 */\r\n:deep(.ant-drawer-content) {\r\n  background: #f8fafc;\r\n}\r\n\r\n:deep(.ant-drawer-header) {\r\n  background: #ffffff;\r\n  border-bottom: 1px solid #e2e8f0;\r\n  padding: 20px 24px;\r\n}\r\n\r\n:deep(.ant-drawer-title) {\r\n  font-weight: 600;\r\n  font-size: 18px;\r\n  color: #1f2937;\r\n}\r\n\r\n:deep(.ant-drawer-body) {\r\n  padding: 24px;\r\n}\r\n\r\n:deep(.ant-drawer-extra) {\r\n  gap: 8px;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}