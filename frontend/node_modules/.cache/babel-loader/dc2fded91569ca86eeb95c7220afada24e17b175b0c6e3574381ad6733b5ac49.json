{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.every.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport { ref, computed } from 'vue';\nimport { message } from 'ant-design-vue';\nimport dayjs from 'dayjs';\nimport { PlusOutlined, ScanOutlined, DownloadOutlined, ApiOutlined, UnorderedListOutlined, SearchOutlined, ReloadOutlined, CheckCircleOutlined, ClockCircleOutlined, LockOutlined, ExclamationCircleOutlined, DatabaseOutlined, ThunderboltOutlined, NodeIndexOutlined, CloudOutlined, DownOutlined, EyeOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons-vue';\n\n// Props\n\nexport default {\n  __name: 'IPTable',\n  props: {\n    dataSource: {\n      type: Array,\n      default: () => []\n    },\n    loading: {\n      type: Boolean,\n      default: false\n    },\n    pagination: {\n      type: Object,\n      default: () => ({\n        current: 1,\n        pageSize: 20,\n        total: 0,\n        showSizeChanger: true,\n        showQuickJumper: true,\n        showTotal: (total, range) => `第 ${range[0]}-${range[1]} 条/共 ${total} 条`\n      })\n    },\n    searchKeyword: {\n      type: String,\n      default: ''\n    },\n    ipStatus: {\n      type: String,\n      default: ''\n    },\n    ipType: {\n      type: String,\n      default: ''\n    },\n    totalCount: {\n      type: Number,\n      default: 0\n    },\n    activeCount: {\n      type: Number,\n      default: 0\n    },\n    availableCount: {\n      type: Number,\n      default: 0\n    },\n    onlineCount: {\n      type: Number,\n      default: 0\n    }\n  },\n  emits: ['tableChange', 'viewDetails', 'pingIP', 'editIP', 'deleteIP', 'toggleMonitoring', 'batchPing', 'batchDelete', 'batchToggleMonitoring', 'add', 'scan', 'export', 'headerBatchPing', 'listManagement', 'search', 'reset', 'searchInput', 'statusChange', 'typeChange'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    const props = __props;\n\n    // Emits\n    const emit = __emit;\n\n    // 响应式数据\n    const selectedRowKeys = ref([]);\n    const batchPingLoading = ref(false);\n    const batchDeleteLoading = ref(false);\n    const batchToggleLoading = ref(false);\n    const showAdvancedFilter = ref(false);\n\n    // 表格列配置\n    const columns = [{\n      title: 'IP地址',\n      dataIndex: 'ip_address',\n      key: 'ip_address',\n      width: 120,\n      sorter: true\n    }, {\n      title: '主机名',\n      dataIndex: 'hostname',\n      key: 'hostname',\n      width: 150,\n      ellipsis: true\n    }, {\n      title: 'IP状态',\n      dataIndex: 'status',\n      key: 'status',\n      width: 80\n    }, {\n      title: '监控状态',\n      dataIndex: 'monitoring_enabled',\n      key: 'monitoring_enabled',\n      width: 90\n    }, {\n      title: '操作',\n      key: 'action',\n      align: 'center',\n      width: 50\n    }];\n\n    // 行选择配置\n    const rowSelection = {\n      selectedRowKeys: selectedRowKeys,\n      onChange: keys => {\n        selectedRowKeys.value = keys;\n      },\n      onSelectAll: (selected, selectedRows, changeRows) => {\n        console.log('onSelectAll:', selected, selectedRows, changeRows);\n      }\n    };\n\n    // 计算属性\n    const allSelectedMonitored = computed(() => {\n      if (selectedRowKeys.value.length === 0) return false;\n      const selectedRecords = props.dataSource.filter(item => selectedRowKeys.value.includes(item.id));\n      return selectedRecords.every(record => record.is_monitored);\n    });\n\n    // 方法\n    // IP状态相关\n    const getIPStatusColor = status => {\n      const statusMap = {\n        'active': 'success',\n        'available': 'processing',\n        'reserved': 'warning',\n        'conflict': 'error'\n      };\n      return statusMap[status] || 'default';\n    };\n    const getIPStatusText = status => {\n      const statusMap = {\n        'active': '在用',\n        'available': '可用',\n        'reserved': '预留',\n        'conflict': '冲突'\n      };\n      return statusMap[status] || status;\n    };\n\n    // IP类型相关\n    const getTypeColor = type => {\n      const typeMap = {\n        'static': 'blue',\n        'dynamic': 'green',\n        'gateway': 'orange',\n        'dns': 'purple'\n      };\n      return typeMap[type] || 'default';\n    };\n    const getTypeText = type => {\n      const typeMap = {\n        'static': '静态IP',\n        'dynamic': '动态IP',\n        'gateway': '网关',\n        'dns': 'DNS服务器'\n      };\n      return typeMap[type] || type;\n    };\n\n    // Ping状态相关\n    const getPingStatusColor = status => {\n      const statusMap = {\n        'online': 'success',\n        'offline': 'error',\n        'unknown': 'warning'\n      };\n      return statusMap[status] || 'default';\n    };\n    const getPingStatusText = status => {\n      const statusMap = {\n        'online': '在线',\n        'offline': '离线',\n        'unknown': '未知'\n      };\n      return statusMap[status] || status;\n    };\n\n    // 时间格式化\n    const formatTime = time => {\n      if (!time) return '-';\n      return dayjs(time).format('YYYY-MM-DD HH:mm:ss');\n    };\n\n    // 相对时间显示\n    const getRelativeTime = time => {\n      if (!time) return '';\n      const now = dayjs();\n      const target = dayjs(time);\n      const diffInMinutes = now.diff(target, 'minute');\n      const diffInHours = now.diff(target, 'hour');\n      const diffInDays = now.diff(target, 'day');\n      if (diffInMinutes < 1) {\n        return '刚刚';\n      } else if (diffInMinutes < 60) {\n        return `${diffInMinutes}分钟前`;\n      } else if (diffInHours < 24) {\n        return `${diffInHours}小时前`;\n      } else if (diffInDays < 30) {\n        return `${diffInDays}天前`;\n      } else {\n        return target.format('YYYY-MM-DD');\n      }\n    };\n\n    // 兼容旧方法\n    const getStatusColor = getPingStatusColor;\n    const getStatusText = getPingStatusText;\n    const clearSelection = () => {\n      selectedRowKeys.value = [];\n    };\n    const handleTableChange = (pagination, filters, sorter) => {\n      emit('tableChange', pagination, filters, sorter);\n    };\n    const viewDetails = record => {\n      emit('viewDetails', record);\n    };\n    const editIP = record => {\n      emit('editIP', record);\n    };\n    const pingIP = async record => {\n      record.pingLoading = true;\n      try {\n        await emit('pingIP', record);\n      } finally {\n        record.pingLoading = false;\n      }\n    };\n    const deleteIP = async record => {\n      record.deleteLoading = true;\n      try {\n        await emit('deleteIP', record);\n        // 如果删除成功，从选中列表中移除\n        const index = selectedRowKeys.value.indexOf(record.id);\n        if (index > -1) {\n          selectedRowKeys.value.splice(index, 1);\n        }\n      } finally {\n        record.deleteLoading = false;\n      }\n    };\n    const toggleMonitoring = async (record, checked) => {\n      record.toggleLoading = true;\n      try {\n        await emit('toggleMonitoring', record, checked);\n      } finally {\n        record.toggleLoading = false;\n      }\n    };\n    const batchPing = async () => {\n      if (selectedRowKeys.value.length === 0) {\n        message.warning('请先选择要操作的IP');\n        return;\n      }\n      batchPingLoading.value = true;\n      try {\n        const selectedRecords = props.dataSource.filter(item => selectedRowKeys.value.includes(item.id));\n        await emit('batchPing', selectedRecords);\n      } finally {\n        batchPingLoading.value = false;\n      }\n    };\n    const batchDelete = async () => {\n      if (selectedRowKeys.value.length === 0) {\n        message.warning('请先选择要删除的IP');\n        return;\n      }\n      batchDeleteLoading.value = true;\n      try {\n        const selectedRecords = props.dataSource.filter(item => selectedRowKeys.value.includes(item.id));\n        await emit('batchDelete', selectedRecords);\n        // 清空选择\n        selectedRowKeys.value = [];\n      } finally {\n        batchDeleteLoading.value = false;\n      }\n    };\n    const batchToggleMonitoring = async () => {\n      if (selectedRowKeys.value.length === 0) {\n        message.warning('请先选择要操作的IP');\n        return;\n      }\n      batchToggleLoading.value = true;\n      try {\n        const selectedRecords = props.dataSource.filter(item => selectedRowKeys.value.includes(item.id));\n        await emit('batchToggleMonitoring', selectedRecords, !allSelectedMonitored.value);\n      } finally {\n        batchToggleLoading.value = false;\n      }\n    };\n\n    // 表格头部按钮事件处理\n    const handleAdd = () => {\n      emit('add');\n    };\n    const handleScan = () => {\n      emit('scan');\n    };\n    const handleExport = () => {\n      emit('export');\n    };\n    const handleHeaderBatchPing = () => {\n      emit('headerBatchPing');\n    };\n    const handleListManagement = () => {\n      emit('listManagement');\n    };\n\n    // 筛选相关事件处理\n    const handleSearch = () => {\n      emit('search');\n    };\n    const handleReset = () => {\n      emit('reset');\n    };\n    const handleSearchInput = e => {\n      emit('searchInput', e.target.value);\n    };\n    const handleStatusChange = value => {\n      emit('statusChange', value);\n    };\n    const handleTypeChange = value => {\n      emit('typeChange', value);\n    };\n    const toggleAdvancedFilter = () => {\n      showAdvancedFilter.value = !showAdvancedFilter.value;\n    };\n\n    // 暴露方法给父组件\n    __expose({\n      clearSelection,\n      getSelectedRowKeys: () => selectedRowKeys.value,\n      getSelectedRecords: () => props.dataSource.filter(item => selectedRowKeys.value.includes(item.id))\n    });\n    const __returned__ = {\n      props,\n      emit,\n      selectedRowKeys,\n      batchPingLoading,\n      batchDeleteLoading,\n      batchToggleLoading,\n      showAdvancedFilter,\n      columns,\n      rowSelection,\n      allSelectedMonitored,\n      getIPStatusColor,\n      getIPStatusText,\n      getTypeColor,\n      getTypeText,\n      getPingStatusColor,\n      getPingStatusText,\n      formatTime,\n      getRelativeTime,\n      getStatusColor,\n      getStatusText,\n      clearSelection,\n      handleTableChange,\n      viewDetails,\n      editIP,\n      pingIP,\n      deleteIP,\n      toggleMonitoring,\n      batchPing,\n      batchDelete,\n      batchToggleMonitoring,\n      handleAdd,\n      handleScan,\n      handleExport,\n      handleHeaderBatchPing,\n      handleListManagement,\n      handleSearch,\n      handleReset,\n      handleSearchInput,\n      handleStatusChange,\n      handleTypeChange,\n      toggleAdvancedFilter,\n      ref,\n      computed,\n      get message() {\n        return message;\n      },\n      get dayjs() {\n        return dayjs;\n      },\n      get PlusOutlined() {\n        return PlusOutlined;\n      },\n      get ScanOutlined() {\n        return ScanOutlined;\n      },\n      get DownloadOutlined() {\n        return DownloadOutlined;\n      },\n      get ApiOutlined() {\n        return ApiOutlined;\n      },\n      get UnorderedListOutlined() {\n        return UnorderedListOutlined;\n      },\n      get SearchOutlined() {\n        return SearchOutlined;\n      },\n      get ReloadOutlined() {\n        return ReloadOutlined;\n      },\n      get CheckCircleOutlined() {\n        return CheckCircleOutlined;\n      },\n      get ClockCircleOutlined() {\n        return ClockCircleOutlined;\n      },\n      get LockOutlined() {\n        return LockOutlined;\n      },\n      get ExclamationCircleOutlined() {\n        return ExclamationCircleOutlined;\n      },\n      get DatabaseOutlined() {\n        return DatabaseOutlined;\n      },\n      get ThunderboltOutlined() {\n        return ThunderboltOutlined;\n      },\n      get NodeIndexOutlined() {\n        return NodeIndexOutlined;\n      },\n      get CloudOutlined() {\n        return CloudOutlined;\n      },\n      get DownOutlined() {\n        return DownOutlined;\n      },\n      get EyeOutlined() {\n        return EyeOutlined;\n      },\n      get EditOutlined() {\n        return EditOutlined;\n      },\n      get DeleteOutlined() {\n        return DeleteOutlined;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","message","dayjs","PlusOutlined","ScanOutlined","DownloadOutlined","ApiOutlined","UnorderedListOutlined","SearchOutlined","ReloadOutlined","CheckCircleOutlined","ClockCircleOutlined","LockOutlined","ExclamationCircleOutlined","DatabaseOutlined","ThunderboltOutlined","NodeIndexOutlined","CloudOutlined","DownOutlined","EyeOutlined","EditOutlined","DeleteOutlined","props","__props","emit","__emit","selectedRowKeys","batchPingLoading","batchDeleteLoading","batchToggleLoading","showAdvancedFilter","columns","title","dataIndex","key","width","sorter","ellipsis","align","rowSelection","onChange","keys","value","onSelectAll","selected","selectedRows","changeRows","console","log","allSelectedMonitored","length","selectedRecords","dataSource","filter","item","includes","id","every","record","is_monitored","getIPStatusColor","status","statusMap","getIPStatusText","getTypeColor","type","typeMap","getTypeText","getPingStatusColor","getPingStatusText","formatTime","time","format","getRelativeTime","now","target","diffInMinutes","diff","diffInHours","diffInDays","getStatusColor","getStatusText","clearSelection","handleTableChange","pagination","filters","viewDetails","editIP","pingIP","pingLoading","deleteIP","deleteLoading","index","indexOf","splice","toggleMonitoring","checked","toggleLoading","batchPing","warning","batchDelete","batchToggleMonitoring","handleAdd","handleScan","handleExport","handleHeaderBatchPing","handleListManagement","handleSearch","handleReset","handleSearchInput","e","handleStatusChange","handleTypeChange","toggleAdvancedFilter","__expose","getSelectedRowKeys","getSelectedRecords"],"sources":["E:/A_project/yuanchi/AIops/frontend/src/components/business/IPTable.vue"],"sourcesContent":["<template>\r\n  <div class=\"ip-table-container\">\r\n    <!-- IP统计按钮组 -->\r\n    <div class=\"ip-stats-container\">\r\n      <div class=\"stats-header\">\r\n        <h3 class=\"page-title\">\r\n          <UnorderedListOutlined class=\"title-icon\" />\r\n          IP地址管理\r\n        </h3>\r\n        <div class=\"table-actions\">\r\n          <a-space size=\"middle\">\r\n            <a-button type=\"primary\" @click=\"handleAdd\">\r\n              <template #icon><PlusOutlined /></template>\r\n              新增IP\r\n            </a-button>\r\n            <a-button @click=\"handleScan\">\r\n              <template #icon><ScanOutlined /></template>\r\n              IP扫描\r\n            </a-button>\r\n            <a-button @click=\"handleExport\">\r\n              <template #icon><DownloadOutlined /></template>\r\n              导出数据\r\n            </a-button>\r\n            <a-divider type=\"vertical\" />\r\n            <a-tooltip title=\"批量Ping\">\r\n              <a-button @click=\"handleHeaderBatchPing\">\r\n                <template #icon><ApiOutlined /></template>\r\n              </a-button>\r\n            </a-tooltip>\r\n            <a-tooltip title=\"列表管理\">\r\n              <a-button @click=\"handleListManagement\">\r\n                <template #icon><UnorderedListOutlined /></template>\r\n              </a-button>\r\n            </a-tooltip>\r\n          </a-space>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- IP统计按钮组 -->\r\n      <div class=\"ip-stats-buttons\">\r\n        <div class=\"stats-button total\">\r\n          <div class=\"button-icon\">\r\n            <i class=\"anticon anticon-appstore\"></i>\r\n          </div>\r\n          <div class=\"button-content\">\r\n            <div class=\"button-title\">总IP</div>\r\n            <div class=\"button-count\">{{ totalCount || 0 }}</div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"stats-button active\">\r\n          <div class=\"button-icon\">\r\n            <i class=\"anticon anticon-check-circle\"></i>\r\n          </div>\r\n          <div class=\"button-content\">\r\n            <div class=\"button-title\">在用</div>\r\n            <div class=\"button-count\">{{ activeCount || 0 }}</div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"stats-button available\">\r\n          <div class=\"button-icon\">\r\n            <i class=\"anticon anticon-clock-circle\"></i>\r\n          </div>\r\n          <div class=\"button-content\">\r\n            <div class=\"button-title\">可用</div>\r\n            <div class=\"button-count\">{{ availableCount || 0 }}</div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"stats-button online\">\r\n          <div class=\"button-icon\">\r\n            <i class=\"anticon anticon-wifi\"></i>\r\n          </div>\r\n          <div class=\"button-content\">\r\n            <div class=\"button-title\">在线</div>\r\n            <div class=\"button-count\">{{ onlineCount || 0 }}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 查询筛选区域 -->\r\n    <div class=\"filter-section\">\r\n      <div class=\"filter-header\">\r\n        <h4 class=\"filter-title\">\r\n          <SearchOutlined class=\"title-icon\" />\r\n          查询筛选\r\n        </h4>\r\n        <div class=\"filter-actions\">\r\n          <a-space size=\"middle\">\r\n            <a-button type=\"link\" @click=\"toggleAdvancedFilter\" class=\"expand-btn\">\r\n              {{ showAdvancedFilter ? '收起' : '展开' }}\r\n              <DownOutlined :class=\"{ 'rotate-180': showAdvancedFilter }\" />\r\n            </a-button>\r\n            <a-button type=\"primary\" @click=\"handleSearch\">\r\n              <template #icon><SearchOutlined /></template>\r\n              搜索\r\n            </a-button>\r\n            <a-button @click=\"handleReset\">\r\n              <template #icon><ReloadOutlined /></template>\r\n              重置\r\n            </a-button>\r\n          </a-space>\r\n        </div>\r\n      </div>\r\n      <div class=\"filter-content\">\r\n        <!-- 基础搜索 - 始终显示 -->\r\n        <a-row :gutter=\"[12, 8]\">\r\n            <a-col :span=\"24\">\r\n              <div class=\"filter-item\">\r\n                <label class=\"filter-label\">IP地址/主机名</label>\r\n              <a-input\r\n                  :value=\"searchKeyword\"\r\n                  @input=\"handleSearchInput\"\r\n                  placeholder=\"输入IP地址或主机名\" \r\n                  allow-clear\r\n                >\r\n                  <template #prefix><SearchOutlined /></template>\r\n                </a-input>\r\n            </div>\r\n          </a-col>\r\n        </a-row>\r\n        \r\n        <!-- 高级筛选 - 可折叠 -->\r\n        <div v-show=\"showAdvancedFilter\" class=\"advanced-filter\">\r\n          <a-divider>高级筛选</a-divider>\r\n          <a-row :gutter=\"[12, 8]\">\r\n             <a-col :xl=\"12\" :lg=\"12\" :md=\"24\" :sm=\"24\">\r\n              <div class=\"filter-item\">\r\n                <label class=\"filter-label\">IP状态</label>\r\n                <a-select \r\n                  :value=\"ipStatus\" \r\n                  @change=\"handleStatusChange\"\r\n                  placeholder=\"选择IP状态\" \r\n                  allow-clear\r\n                  style=\"width: 100%\"\r\n                >\r\n                  <a-select-option value=\"active\">\r\n                    <CheckCircleOutlined style=\"color: #52c41a\" /> 在用\r\n                  </a-select-option>\r\n                  <a-select-option value=\"available\">\r\n                    <ClockCircleOutlined style=\"color: #1890ff\" /> 可用\r\n                  </a-select-option>\r\n                  <a-select-option value=\"reserved\">\r\n                    <LockOutlined style=\"color: #fa8c16\" /> 预留\r\n                  </a-select-option>\r\n                  <a-select-option value=\"conflict\">\r\n                    <ExclamationCircleOutlined style=\"color: #ff4d4f\" /> 冲突\r\n                  </a-select-option>\r\n                </a-select>\r\n              </div>\r\n            </a-col>\r\n            <a-col :xl=\"12\" :lg=\"12\" :md=\"24\" :sm=\"24\">\r\n              <div class=\"filter-item\">\r\n                <label class=\"filter-label\">IP类型</label>\r\n                <a-select \r\n                  :value=\"ipType\" \r\n                  @change=\"handleTypeChange\"\r\n                  placeholder=\"选择IP类型\" \r\n                  allow-clear\r\n                  style=\"width: 100%\"\r\n                >\r\n                  <a-select-option value=\"static\">\r\n                    <DatabaseOutlined style=\"color: #1890ff\" /> 静态IP\r\n                  </a-select-option>\r\n                  <a-select-option value=\"dynamic\">\r\n                    <ThunderboltOutlined style=\"color: #52c41a\" /> 动态IP\r\n                  </a-select-option>\r\n                  <a-select-option value=\"gateway\">\r\n                    <NodeIndexOutlined style=\"color: #fa8c16\" /> 网关\r\n                  </a-select-option>\r\n                  <a-select-option value=\"dns\">\r\n                    <CloudOutlined style=\"color: #722ed1\" /> DNS服务器\r\n                  </a-select-option>\r\n                </a-select>\r\n              </div>\r\n            </a-col>\r\n          </a-row>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 批量操作工具栏 -->\r\n    <div class=\"batch-toolbar\" v-if=\"selectedRowKeys.length > 0\">\r\n      <div class=\"selected-info\">\r\n        <span>已选择 {{ selectedRowKeys.length }} 项</span>\r\n        <a-button type=\"link\" size=\"small\" @click=\"clearSelection\">清空</a-button>\r\n      </div>\r\n      <div class=\"batch-actions\">\r\n        <a-button \r\n          type=\"primary\" \r\n          size=\"small\" \r\n          @click=\"batchPing\"\r\n          :loading=\"batchPingLoading\"\r\n        >\r\n          批量Ping\r\n        </a-button>\r\n        <a-button \r\n          size=\"small\" \r\n          @click=\"batchToggleMonitoring\"\r\n          :loading=\"batchToggleLoading\"\r\n        >\r\n          批量{{ allSelectedMonitored ? '停止' : '启用' }}监控\r\n        </a-button>\r\n        <a-button \r\n          type=\"danger\" \r\n          size=\"small\" \r\n          @click=\"batchDelete\"\r\n          :loading=\"batchDeleteLoading\"\r\n        >\r\n          批量删除\r\n        </a-button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- IP列表表格 -->\r\n    <div class=\"table-wrapper\">\r\n      <a-table\r\n        :columns=\"columns\"\r\n        :data-source=\"dataSource\"\r\n        :row-key=\"record => record.id\"\r\n        :pagination=\"pagination\"\r\n        :loading=\"loading\"\r\n        :row-selection=\"rowSelection\"\r\n\r\n        size=\"middle\"\r\n        @change=\"handleTableChange\"\r\n      >\r\n      <!-- 使用新的v-slot语法 -->\r\n      <template #bodyCell=\"{ column, record }\">\r\n        <!-- IP地址列 -->\r\n        <template v-if=\"column.key === 'ip_address'\">\r\n          <div>\r\n            <span class=\"ip-address\">{{ record.ip_address }}</span>\r\n          </div>\r\n        </template>\r\n\r\n        <!-- 主机名列 -->\r\n        <template v-else-if=\"column.key === 'hostname'\">\r\n          <span :title=\"record.hostname\">{{ record.hostname || '-' }}</span>\r\n        </template>\r\n\r\n        <!-- IP状态列 -->\r\n        <template v-else-if=\"column.key === 'status'\">\r\n          <a-tag :color=\"getIPStatusColor(record.status)\" size=\"small\">\r\n            {{ getIPStatusText(record.status) }}\r\n          </a-tag>\r\n        </template>\r\n\r\n        <!-- IP类型列 -->\r\n        <template v-else-if=\"column.key === 'type'\">\r\n          <a-tag :color=\"getTypeColor(record.type)\" size=\"small\">\r\n            {{ getTypeText(record.type) }}\r\n          </a-tag>\r\n        </template>\r\n\r\n        <!-- 监控状态列 -->\r\n        <template v-else-if=\"column.key === 'monitoring_enabled'\">\r\n          <a-switch\r\n            :checked=\"record.monitoring_enabled\"\r\n            :loading=\"record.toggleLoading\"\r\n            @change=\"(checked) => toggleMonitoring(record, checked)\"\r\n            size=\"small\"\r\n          />\r\n          <span class=\"monitoring-text\">\r\n            {{ record.monitoring_enabled ? '已监控' : '未监控' }}\r\n          </span>\r\n        </template>\r\n\r\n\r\n        <!-- 创建时间列 -->\r\n        <template v-else-if=\"column.key === 'created_at'\">\r\n          <div class=\"time-cell\">\r\n            <span v-if=\"record.created_at\" class=\"time-text\">\r\n              {{ formatTime(record.created_at) }}\r\n            </span>\r\n            <span v-else class=\"no-data\">-</span>\r\n            <div v-if=\"record.created_at\" class=\"time-relative\">\r\n              {{ getRelativeTime(record.created_at) }}\r\n            </div>\r\n          </div>\r\n        </template>\r\n\r\n\r\n        <!-- 操作列 -->\r\n        <template v-else-if=\"column.key === 'action'\">\r\n          <div class=\"action-buttons\">\r\n            <a-tooltip title=\"查看详情\">\r\n              <a-button \r\n                type=\"text\" \r\n                size=\"small\" \r\n                @click=\"viewDetails(record)\"\r\n                class=\"action-btn\"\r\n              >\r\n                <template #icon><EyeOutlined /></template>\r\n              </a-button>\r\n            </a-tooltip>\r\n            <a-tooltip title=\"Ping测试\">\r\n              <a-button \r\n                type=\"text\" \r\n                size=\"small\" \r\n                @click=\"pingIP(record)\"\r\n                :loading=\"record.pingLoading\"\r\n                class=\"action-btn\"\r\n              >\r\n                <template #icon><ApiOutlined /></template>\r\n              </a-button>\r\n            </a-tooltip>\r\n            <a-tooltip title=\"编辑\">\r\n              <a-button \r\n                type=\"text\" \r\n                size=\"small\" \r\n                @click=\"editIP(record)\"\r\n                class=\"action-btn\"\r\n              >\r\n                <template #icon><EditOutlined /></template>\r\n              </a-button>\r\n            </a-tooltip>\r\n            <a-popconfirm\r\n              title=\"确定要删除这个IP吗？\"\r\n              @confirm=\"deleteIP(record)\"\r\n              ok-text=\"确定\"\r\n              cancel-text=\"取消\"\r\n            >\r\n              <a-tooltip title=\"删除\">\r\n                <a-button \r\n                  type=\"text\" \r\n                  size=\"small\" \r\n                  danger\r\n                  :loading=\"record.deleteLoading\"\r\n                  class=\"action-btn danger\"\r\n                >\r\n                  <template #icon><DeleteOutlined /></template>\r\n                </a-button>\r\n              </a-tooltip>\r\n            </a-popconfirm>\r\n          </div>\r\n        </template>\r\n      </template>\r\n      </a-table>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed } from 'vue';\r\nimport { message } from 'ant-design-vue';\r\nimport dayjs from 'dayjs';\r\nimport {\r\n  PlusOutlined,\r\n  ScanOutlined,\r\n  DownloadOutlined,\r\n  ApiOutlined,\r\n  UnorderedListOutlined,\r\n  SearchOutlined,\r\n  ReloadOutlined,\r\n  CheckCircleOutlined,\r\n  ClockCircleOutlined,\r\n  LockOutlined,\r\n  ExclamationCircleOutlined,\r\n  DatabaseOutlined,\r\n  ThunderboltOutlined,\r\n  NodeIndexOutlined,\r\n  CloudOutlined,\r\n  DownOutlined,\r\n  EyeOutlined,\r\n  EditOutlined,\r\n  DeleteOutlined\r\n} from '@ant-design/icons-vue';\r\n\r\n// Props\r\nconst props = defineProps({\r\n  dataSource: {\r\n    type: Array,\r\n    default: () => []\r\n  },\r\n  loading: {\r\n    type: Boolean,\r\n    default: false\r\n  },\r\n  pagination: {\r\n    type: Object,\r\n    default: () => ({\r\n      current: 1,\r\n      pageSize: 20,\r\n      total: 0,\r\n      showSizeChanger: true,\r\n      showQuickJumper: true,\r\n      showTotal: (total, range) => `第 ${range[0]}-${range[1]} 条/共 ${total} 条`\r\n    })\r\n  },\r\n  searchKeyword: {\r\n    type: String,\r\n    default: ''\r\n  },\r\n  ipStatus: {\r\n    type: String,\r\n    default: ''\r\n  },\r\n  ipType: {\r\n    type: String,\r\n    default: ''\r\n  },\r\n  totalCount: {\r\n    type: Number,\r\n    default: 0\r\n  },\r\n  activeCount: {\r\n    type: Number,\r\n    default: 0\r\n  },\r\n  availableCount: {\r\n    type: Number,\r\n    default: 0\r\n  },\r\n  onlineCount: {\r\n    type: Number,\r\n    default: 0\r\n  }\r\n});\r\n\r\n// Emits\r\nconst emit = defineEmits([\r\n  'tableChange',\r\n  'viewDetails',\r\n  'pingIP',\r\n  'editIP',\r\n  'deleteIP',\r\n  'toggleMonitoring',\r\n  'batchPing',\r\n  'batchDelete',\r\n  'batchToggleMonitoring',\r\n  'add',\r\n  'scan',\r\n  'export',\r\n  'headerBatchPing',\r\n  'listManagement',\r\n  'search',\r\n  'reset',\r\n  'searchInput',\r\n  'statusChange',\r\n  'typeChange'\r\n]);\r\n\r\n// 响应式数据\r\nconst selectedRowKeys = ref([]);\r\nconst batchPingLoading = ref(false);\r\nconst batchDeleteLoading = ref(false);\r\nconst batchToggleLoading = ref(false);\r\nconst showAdvancedFilter = ref(false);\r\n\r\n\r\n// 表格列配置\r\nconst columns = [\r\n  {\r\n    title: 'IP地址',\r\n    dataIndex: 'ip_address',\r\n    key: 'ip_address',\r\n    width: 120,\r\n    sorter: true\r\n  },\r\n  {\r\n    title: '主机名',\r\n    dataIndex: 'hostname',\r\n    key: 'hostname',\r\n    width: 150,\r\n    ellipsis: true\r\n  },\r\n  {\r\n    title: 'IP状态',\r\n    dataIndex: 'status',\r\n    key: 'status',\r\n    width: 80\r\n  },\r\n  {\r\n    title: '监控状态',\r\n    dataIndex: 'monitoring_enabled',\r\n    key: 'monitoring_enabled',\r\n    width: 90\r\n  },\r\n  {\r\n    title: '操作',\r\n    key: 'action',\r\n    align: 'center',\r\n    width: 50\r\n  }\r\n];\r\n\r\n// 行选择配置\r\nconst rowSelection = {\r\n  selectedRowKeys: selectedRowKeys,\r\n  onChange: (keys) => {\r\n    selectedRowKeys.value = keys;\r\n  },\r\n  onSelectAll: (selected, selectedRows, changeRows) => {\r\n    console.log('onSelectAll:', selected, selectedRows, changeRows);\r\n  }\r\n};\r\n\r\n// 计算属性\r\nconst allSelectedMonitored = computed(() => {\r\n  if (selectedRowKeys.value.length === 0) return false;\r\n  const selectedRecords = props.dataSource.filter(item => \r\n    selectedRowKeys.value.includes(item.id)\r\n  );\r\n  return selectedRecords.every(record => record.is_monitored);\r\n});\r\n\r\n// 方法\r\n// IP状态相关\r\nconst getIPStatusColor = (status) => {\r\n  const statusMap = {\r\n    'active': 'success',\r\n    'available': 'processing',\r\n    'reserved': 'warning',\r\n    'conflict': 'error'\r\n  };\r\n  return statusMap[status] || 'default';\r\n};\r\n\r\nconst getIPStatusText = (status) => {\r\n  const statusMap = {\r\n    'active': '在用',\r\n    'available': '可用',\r\n    'reserved': '预留',\r\n    'conflict': '冲突'\r\n  };\r\n  return statusMap[status] || status;\r\n};\r\n\r\n// IP类型相关\r\nconst getTypeColor = (type) => {\r\n  const typeMap = {\r\n    'static': 'blue',\r\n    'dynamic': 'green',\r\n    'gateway': 'orange',\r\n    'dns': 'purple'\r\n  };\r\n  return typeMap[type] || 'default';\r\n};\r\n\r\nconst getTypeText = (type) => {\r\n  const typeMap = {\r\n    'static': '静态IP',\r\n    'dynamic': '动态IP',\r\n    'gateway': '网关',\r\n    'dns': 'DNS服务器'\r\n  };\r\n  return typeMap[type] || type;\r\n};\r\n\r\n// Ping状态相关\r\nconst getPingStatusColor = (status) => {\r\n  const statusMap = {\r\n    'online': 'success',\r\n    'offline': 'error',\r\n    'unknown': 'warning'\r\n  };\r\n  return statusMap[status] || 'default';\r\n};\r\n\r\nconst getPingStatusText = (status) => {\r\n  const statusMap = {\r\n    'online': '在线',\r\n    'offline': '离线',\r\n    'unknown': '未知'\r\n  };\r\n  return statusMap[status] || status;\r\n};\r\n\r\n// 时间格式化\r\nconst formatTime = (time) => {\r\n  if (!time) return '-';\r\n  return dayjs(time).format('YYYY-MM-DD HH:mm:ss');\r\n};\r\n\r\n// 相对时间显示\r\nconst getRelativeTime = (time) => {\r\n  if (!time) return '';\r\n  const now = dayjs();\r\n  const target = dayjs(time);\r\n  const diffInMinutes = now.diff(target, 'minute');\r\n  const diffInHours = now.diff(target, 'hour');\r\n  const diffInDays = now.diff(target, 'day');\r\n  \r\n  if (diffInMinutes < 1) {\r\n    return '刚刚';\r\n  } else if (diffInMinutes < 60) {\r\n    return `${diffInMinutes}分钟前`;\r\n  } else if (diffInHours < 24) {\r\n    return `${diffInHours}小时前`;\r\n  } else if (diffInDays < 30) {\r\n    return `${diffInDays}天前`;\r\n  } else {\r\n    return target.format('YYYY-MM-DD');\r\n  }\r\n};\r\n\r\n// 兼容旧方法\r\nconst getStatusColor = getPingStatusColor;\r\nconst getStatusText = getPingStatusText;\r\n\r\nconst clearSelection = () => {\r\n  selectedRowKeys.value = [];\r\n};\r\n\r\nconst handleTableChange = (pagination, filters, sorter) => {\r\n  emit('tableChange', pagination, filters, sorter);\r\n};\r\n\r\nconst viewDetails = (record) => {\r\n  emit('viewDetails', record);\r\n};\r\n\r\nconst editIP = (record) => {\r\n  emit('editIP', record);\r\n};\r\n\r\nconst pingIP = async (record) => {\r\n  record.pingLoading = true;\r\n  try {\r\n    await emit('pingIP', record);\r\n  } finally {\r\n    record.pingLoading = false;\r\n  }\r\n};\r\n\r\nconst deleteIP = async (record) => {\r\n  record.deleteLoading = true;\r\n  try {\r\n    await emit('deleteIP', record);\r\n    // 如果删除成功，从选中列表中移除\r\n    const index = selectedRowKeys.value.indexOf(record.id);\r\n    if (index > -1) {\r\n      selectedRowKeys.value.splice(index, 1);\r\n    }\r\n  } finally {\r\n    record.deleteLoading = false;\r\n  }\r\n};\r\n\r\nconst toggleMonitoring = async (record, checked) => {\r\n  record.toggleLoading = true;\r\n  try {\r\n    await emit('toggleMonitoring', record, checked);\r\n  } finally {\r\n    record.toggleLoading = false;\r\n  }\r\n};\r\n\r\nconst batchPing = async () => {\r\n  if (selectedRowKeys.value.length === 0) {\r\n    message.warning('请先选择要操作的IP');\r\n    return;\r\n  }\r\n  \r\n  batchPingLoading.value = true;\r\n  try {\r\n    const selectedRecords = props.dataSource.filter(item => \r\n      selectedRowKeys.value.includes(item.id)\r\n    );\r\n    await emit('batchPing', selectedRecords);\r\n  } finally {\r\n    batchPingLoading.value = false;\r\n  }\r\n};\r\n\r\nconst batchDelete = async () => {\r\n  if (selectedRowKeys.value.length === 0) {\r\n    message.warning('请先选择要删除的IP');\r\n    return;\r\n  }\r\n  \r\n  batchDeleteLoading.value = true;\r\n  try {\r\n    const selectedRecords = props.dataSource.filter(item => \r\n      selectedRowKeys.value.includes(item.id)\r\n    );\r\n    await emit('batchDelete', selectedRecords);\r\n    // 清空选择\r\n    selectedRowKeys.value = [];\r\n  } finally {\r\n    batchDeleteLoading.value = false;\r\n  }\r\n};\r\n\r\nconst batchToggleMonitoring = async () => {\r\n  if (selectedRowKeys.value.length === 0) {\r\n    message.warning('请先选择要操作的IP');\r\n    return;\r\n  }\r\n  \r\n  batchToggleLoading.value = true;\r\n  try {\r\n    const selectedRecords = props.dataSource.filter(item => \r\n      selectedRowKeys.value.includes(item.id)\r\n    );\r\n    await emit('batchToggleMonitoring', selectedRecords, !allSelectedMonitored.value);\r\n  } finally {\r\n    batchToggleLoading.value = false;\r\n  }\r\n};\r\n\r\n// 表格头部按钮事件处理\r\nconst handleAdd = () => {\r\n  emit('add');\r\n};\r\n\r\nconst handleScan = () => {\r\n  emit('scan');\r\n};\r\n\r\nconst handleExport = () => {\r\n  emit('export');\r\n};\r\n\r\nconst handleHeaderBatchPing = () => {\r\n  emit('headerBatchPing');\r\n};\r\n\r\nconst handleListManagement = () => {\r\n  emit('listManagement');\r\n};\r\n\r\n// 筛选相关事件处理\r\nconst handleSearch = () => {\r\n  emit('search');\r\n};\r\n\r\nconst handleReset = () => {\r\n  emit('reset');\r\n};\r\n\r\nconst handleSearchInput = (e) => {\r\n  emit('searchInput', e.target.value);\r\n};\r\n\r\nconst handleStatusChange = (value) => {\r\n  emit('statusChange', value);\r\n};\r\n\r\nconst handleTypeChange = (value) => {\r\n  emit('typeChange', value);\r\n};\r\n\r\nconst toggleAdvancedFilter = () => {\r\n  showAdvancedFilter.value = !showAdvancedFilter.value;\r\n};\r\n\r\n\r\n\r\n// 暴露方法给父组件\r\ndefineExpose({\r\n  clearSelection,\r\n  getSelectedRowKeys: () => selectedRowKeys.value,\r\n  getSelectedRecords: () => props.dataSource.filter(item => \r\n    selectedRowKeys.value.includes(item.id)\r\n  )\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n/* 简洁容器样式 */\r\n.ip-table-container {\r\n  background: #ffffff;\r\n  border-radius: 8px;\r\n  border: 1px solid #e2e8f0;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n  overflow: hidden;\r\n  min-height: calc(100vh - 40px);\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: relative;\r\n}\r\n\r\n.table-wrapper {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 0;\r\n}\r\n\r\n/* IP统计容器样式 */\r\n.ip-stats-container {\r\n  margin-bottom: 16px;\r\n  background: #fff;\r\n  border-radius: 12px;\r\n  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.08);\r\n  overflow: hidden;\r\n}\r\n\r\n/* 统计头部样式 */\r\n.stats-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 20px 24px;\r\n  border-bottom: 1px solid #f0f0f0;\r\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n  color: white;\r\n}\r\n\r\n.page-title {\r\n  margin: 0;\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n  color: white;\r\n}\r\n\r\n.title-icon {\r\n  font-size: 22px;\r\n  color: rgba(255, 255, 255, 0.9);\r\n}\r\n\r\n/* IP统计按钮组样式 */\r\n.ip-stats-buttons {\r\n  display: flex;\r\n  padding: 24px;\r\n  gap: 20px;\r\n  background: #fafafa;\r\n}\r\n\r\n.stats-button {\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 20px;\r\n  background: white;\r\n  border-radius: 12px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.06);\r\n  transition: all 0.3s ease;\r\n  cursor: pointer;\r\n  border: 2px solid transparent;\r\n}\r\n\r\n.stats-button:hover {\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.12);\r\n}\r\n\r\n.button-icon {\r\n  width: 48px;\r\n  height: 48px;\r\n  border-radius: 12px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-right: 16px;\r\n  font-size: 20px;\r\n}\r\n\r\n.button-content {\r\n  flex: 1;\r\n}\r\n\r\n.button-title {\r\n  font-size: 14px;\r\n  color: #666;\r\n  margin-bottom: 4px;\r\n  font-weight: 500;\r\n}\r\n\r\n.button-count {\r\n  font-size: 24px;\r\n  font-weight: 700;\r\n  line-height: 1;\r\n}\r\n\r\n/* 不同状态的颜色主题 */\r\n.stats-button.total .button-icon {\r\n  background: linear-gradient(135deg, #667eea, #764ba2);\r\n  color: white;\r\n}\r\n\r\n.stats-button.total .button-count {\r\n  color: #667eea;\r\n}\r\n\r\n.stats-button.active .button-icon {\r\n  background: linear-gradient(135deg, #4facfe, #00f2fe);\r\n  color: white;\r\n}\r\n\r\n.stats-button.active .button-count {\r\n  color: #1890ff;\r\n}\r\n\r\n.stats-button.available .button-icon {\r\n  background: linear-gradient(135deg, #43e97b, #38f9d7);\r\n  color: white;\r\n}\r\n\r\n.stats-button.available .button-count {\r\n  color: #52c41a;\r\n}\r\n\r\n.stats-button.online .button-icon {\r\n  background: linear-gradient(135deg, #fa709a, #fee140);\r\n  color: white;\r\n}\r\n\r\n.stats-button.online .button-count {\r\n  color: #fa8c16;\r\n}\r\n\r\n/* 简洁操作按钮区域 */\r\n.table-actions {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 768px) {\r\n  .table-header {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    gap: 16px;\r\n  }\r\n  \r\n  .table-title {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    gap: 12px;\r\n    width: 100%;\r\n  }\r\n  \r\n  .stats-inline {\r\n    width: 100%;\r\n    justify-content: space-between;\r\n  }\r\n  \r\n  .stat-item {\r\n    flex: 1;\r\n    min-width: 0;\r\n  }\r\n}\r\n\r\n/* 简洁搜索过滤区域 */\r\n.filter-section {\r\n  padding: 20px 24px;\r\n  background: #f8fafc;\r\n  border-bottom: 1px solid #e2e8f0;\r\n}\r\n\r\n.expand-btn {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 4px;\r\n}\r\n\r\n.rotate-180 {\r\n  transform: rotate(180deg);\r\n  transition: transform 0.3s ease;\r\n}\r\n\r\n.advanced-filter {\r\n  margin-top: 12px;\r\n  animation: fadeIn 0.3s ease;\r\n}\r\n\r\n@keyframes fadeIn {\r\n  from {\r\n    opacity: 0;\r\n    transform: translateY(-10px);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n}\r\n\r\n.filter-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 12px;\r\n}\r\n\r\n.filter-title {\r\n  margin: 0;\r\n  font-size: 13px;\r\n  font-weight: 600;\r\n  color: #262626;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 6px;\r\n}\r\n\r\n.title-icon {\r\n  color: #1890ff;\r\n}\r\n\r\n.filter-actions {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.filter-content {\r\n  margin: 0;\r\n}\r\n\r\n.filter-item {\r\n  margin-bottom: 0;\r\n}\r\n\r\n.filter-label {\r\n  display: block;\r\n  margin-bottom: 6px;\r\n  font-weight: 500;\r\n  color: #262626;\r\n  font-size: 13px;\r\n}\r\n\r\n/* 简洁批量操作区域 */\r\n.batch-toolbar {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 16px 24px;\r\n  background: #eff6ff;\r\n  border-bottom: 1px solid #e2e8f0;\r\n}\r\n\r\n.selected-info {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  color: #1890ff;\r\n  font-weight: 500;\r\n}\r\n\r\n.batch-actions {\r\n  display: flex;\r\n  gap: 8px;\r\n}\r\n\r\n.ip-cell {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n}\r\n\r\n.ip-address {\r\n  font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;\r\n  font-weight: 500;\r\n}\r\n\r\n.mac-address {\r\n  font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;\r\n  font-size: 12px;\r\n  color: #666;\r\n}\r\n\r\n.monitoring-text {\r\n  margin-left: 8px;\r\n  font-size: 12px;\r\n  color: #8c8c8c;\r\n}\r\n\r\n.no-data {\r\n  color: #bfbfbf;\r\n}\r\n\r\n.time-cell {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 2px;\r\n}\r\n\r\n.time-text {\r\n  font-size: 13px;\r\n  color: #262626;\r\n  font-weight: 500;\r\n}\r\n\r\n.time-relative {\r\n  font-size: 11px;\r\n  color: #8c8c8c;\r\n  font-style: italic;\r\n}\r\n\r\n.description-text {\r\n  font-size: 12px;\r\n  color: #666;\r\n  line-height: 1.4;\r\n}\r\n\r\n.status-dot {\r\n  display: inline-block;\r\n  width: 6px;\r\n  height: 6px;\r\n  border-radius: 50%;\r\n  margin-right: 4px;\r\n  animation: pulse 2s infinite;\r\n}\r\n\r\n.status-dot.status-online {\r\n  background-color: #52c41a;\r\n  box-shadow: 0 0 0 2px rgba(82, 196, 26, 0.2);\r\n}\r\n\r\n.status-dot.status-offline {\r\n  background-color: #ff4d4f;\r\n  box-shadow: 0 0 0 2px rgba(255, 77, 79, 0.2);\r\n}\r\n\r\n.status-dot.status-unknown {\r\n  background-color: #faad14;\r\n  box-shadow: 0 0 0 2px rgba(250, 173, 20, 0.2);\r\n}\r\n\r\n@keyframes pulse {\r\n  0% {\r\n    transform: scale(1);\r\n    opacity: 1;\r\n  }\r\n  50% {\r\n    transform: scale(1.1);\r\n    opacity: 0.8;\r\n  }\r\n  100% {\r\n    transform: scale(1);\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n.action-buttons {\r\n  display: flex;\r\n  gap: 4px;\r\n}\r\n\r\n.action-btn {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 28px;\r\n  height: 28px;\r\n  border-radius: 4px;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.action-btn:hover {\r\n  background-color: #f5f5f5;\r\n  transform: scale(1.1);\r\n}\r\n\r\n.action-btn.danger:hover {\r\n  background-color: #fff2f0;\r\n  color: #ff4d4f;\r\n}\r\n\r\n.action-btn .anticon {\r\n  font-size: 14px;\r\n}\r\n\r\n/* 简洁输入框样式 */\r\n:deep(.ant-input) {\r\n  border-radius: 6px;\r\n  border: 1px solid #d1d5db;\r\n  background: #ffffff;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n:deep(.ant-input:focus) {\r\n  border-color: #2563eb;\r\n  box-shadow: 0 0 0 2px rgba(37, 99, 235, 0.1);\r\n}\r\n\r\n:deep(.ant-select) {\r\n  border-radius: 6px;\r\n}\r\n\r\n:deep(.ant-select .ant-select-selector) {\r\n  border-radius: 6px !important;\r\n  border: 1px solid #d1d5db !important;\r\n  background: #ffffff !important;\r\n}\r\n\r\n:deep(.ant-select:not(.ant-select-disabled):hover .ant-select-selector) {\r\n  border-color: #2563eb !important;\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 1200px) {\r\n  .ip-table-container {\r\n    height: calc(100vh - 20px);\r\n  }\r\n  \r\n  .table-header {\r\n    flex-direction: column;\r\n    align-items: stretch;\r\n    padding: 24px;\r\n  }\r\n  \r\n  .stats-inline {\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n  \r\n  .filter-section {\r\n    padding: 20px;\r\n  }\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .ip-table-container {\r\n    height: calc(100vh - 10px);\r\n  }\r\n  \r\n  .table-header {\r\n    padding: 20px;\r\n  }\r\n  \r\n  .filter-section {\r\n    padding: 20px;\r\n  }\r\n  \r\n  .stats-inline {\r\n    grid-template-columns: 1fr;\r\n    gap: 12px;\r\n  }\r\n  \r\n  .batch-toolbar {\r\n    flex-direction: column;\r\n    gap: 16px;\r\n    align-items: stretch;\r\n    padding: 16px 20px;\r\n  }\r\n  \r\n  .batch-actions {\r\n    justify-content: center;\r\n  }\r\n  \r\n  .action-buttons {\r\n    flex-direction: column;\r\n    gap: 2px;\r\n  }\r\n  \r\n  .time-cell {\r\n    gap: 1px;\r\n  }\r\n  \r\n  .time-text {\r\n    font-size: 12px;\r\n  }\r\n  \r\n  .time-relative {\r\n    font-size: 10px;\r\n  }\r\n  \r\n  .description-text {\r\n    font-size: 11px;\r\n  }\r\n  \r\n  .mac-address {\r\n    font-size: 11px;\r\n  }\r\n}\r\n\r\n/* 表格样式优化 */\r\n:deep(.ant-table) {\r\n  font-size: 13px;\r\n}\r\n\r\n:deep(.ant-table-container) {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n:deep(.ant-table-content) {\r\n  overflow: auto;\r\n}\r\n\r\n:deep(.ant-table-body) {\r\n  overflow-y: visible;\r\n}\r\n\r\n:deep(.ant-table-thead > tr > th) {\r\n  background: #fafafa;\r\n  font-weight: 600;\r\n  color: #262626;\r\n}\r\n\r\n:deep(.ant-table-tbody > tr:hover > td) {\r\n  background: #f5f5f5;\r\n}\r\n\r\n:deep(.ant-table-row-selected) {\r\n  background: #e6f7ff;\r\n}\r\n\r\n:deep(.ant-table-row-selected:hover > td) {\r\n  background: #bae7ff;\r\n}\r\n\r\n:deep(.ant-pagination) {\r\n  margin: 12px 16px;\r\n  text-align: right;\r\n  flex-shrink: 0;\r\n  border-top: 1px solid #f0f0f0;\r\n  padding-top: 12px;\r\n}\r\n\r\n:deep(.ant-switch) {\r\n  min-width: 28px;\r\n}\r\n\r\n:deep(.ant-tag) {\r\n  margin: 0;\r\n  border-radius: 4px;\r\n}\r\n\r\n/* 只有操作列居中对齐 */\r\n:deep(.ant-table-tbody > tr > td:nth-child(6)) {\r\n  text-align: center !important;\r\n}\r\n\r\n:deep(.ant-table-thead > tr > th:nth-child(6)) {\r\n  text-align: center !important;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}