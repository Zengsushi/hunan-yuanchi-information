{"ast":null,"code":"import { ref, computed } from 'vue';\nimport { message } from 'ant-design-vue';\nimport { DownloadOutlined, InboxOutlined, FileExcelOutlined, CloseOutlined, CheckOutlined, CheckCircleOutlined, CloseCircleOutlined } from '@ant-design/icons-vue';\nimport { softwareAssetApi } from '@/api/softwareAsset';\nimport * as XLSX from 'xlsx';\n\n// Props\n\nexport default {\n  __name: 'SoftwareAssetImport',\n  props: {\n    visible: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: ['update:visible', 'success'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const props = __props;\n\n    // Emits\n    const emit = __emit;\n\n    // 响应式数据\n    const currentStep = ref(0);\n    const templateDownloaded = ref(false);\n    const downloadLoading = ref(false);\n    const uploadFile = ref(null);\n    const fileList = ref([]);\n    const parseLoading = ref(false);\n    const importLoading = ref(false);\n    const previewData = ref([]);\n    const importResult = ref({\n      success: false,\n      successCount: 0,\n      failedCount: 0,\n      message: '',\n      errors: []\n    });\n\n    // 表格列配置\n    const previewColumns = [{\n      title: '#',\n      dataIndex: 'index',\n      key: 'index',\n      width: 50,\n      customRender: ({\n        index\n      }) => index + 1\n    }, {\n      title: '软件名称',\n      dataIndex: 'software_name',\n      key: 'software_name',\n      width: 120\n    }, {\n      title: '版本',\n      dataIndex: 'version',\n      key: 'version',\n      width: 100\n    }, {\n      title: '软件类型',\n      dataIndex: 'software_type',\n      key: 'software_type',\n      width: 100\n    }, {\n      title: '责任人',\n      dataIndex: 'asset_owner',\n      key: 'asset_owner',\n      width: 100\n    }, {\n      title: '状态',\n      key: 'status',\n      width: 80,\n      customRender: ({\n        record\n      }) => {\n        if (record._valid) {\n          return '<CheckOutlined style=\"color: #52c41a;\" />';\n        } else {\n          return '<CloseOutlined style=\"color: #ff4d4f;\" />';\n        }\n      }\n    }, {\n      title: '错误信息',\n      key: 'errors',\n      minWidth: 150,\n      customRender: ({\n        record\n      }) => {\n        if (record._errors && record._errors.length > 0) {\n          return `<span class=\"error-text\">${record._errors.join(', ')}</span>`;\n        } else {\n          return '<span class=\"success-text\">验证通过</span>';\n        }\n      }\n    }];\n\n    // 计算属性\n    const dialogVisible = computed({\n      get: () => props.visible,\n      set: value => emit('update:visible', value)\n    });\n    const validRecords = computed(() => {\n      return previewData.value.filter(item => item._valid).length;\n    });\n    const invalidRecords = computed(() => {\n      return previewData.value.filter(item => !item._valid).length;\n    });\n\n    // 方法\n    const downloadTemplate = async () => {\n      downloadLoading.value = true;\n      try {\n        const response = await softwareAssetApi.downloadTemplate();\n\n        // 创建下载链接\n        const blob = new Blob([response.data], {\n          type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n        });\n        const url = window.URL.createObjectURL(blob);\n        const link = document.createElement('a');\n        link.href = url;\n        link.download = '软件资产导入模板.xlsx';\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        window.URL.revokeObjectURL(url);\n        templateDownloaded.value = true;\n        message.success('模板下载成功');\n      } catch (error) {\n        message.error('模板下载失败');\n        console.error('Download template error:', error);\n      } finally {\n        downloadLoading.value = false;\n      }\n    };\n    const nextStep = () => {\n      currentStep.value++;\n    };\n    const handleFileChange = info => {\n      const {\n        fileList\n      } = info;\n      if (fileList.length > 0) {\n        uploadFile.value = fileList[0];\n      } else {\n        uploadFile.value = null;\n      }\n    };\n    const beforeUpload = file => {\n      const isExcel = file.type === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' || file.type === 'application/vnd.ms-excel';\n      const isLt10M = file.size / 1024 / 1024 < 10;\n      if (!isExcel) {\n        message.error('只能上传 Excel 文件!');\n        return false;\n      }\n      if (!isLt10M) {\n        message.error('文件大小不能超过 10MB!');\n        return false;\n      }\n      return false; // 阻止自动上传\n    };\n    const removeFile = () => {\n      uploadFile.value = null;\n      fileList.value = [];\n    };\n    const parseFile = async () => {\n      if (!uploadFile.value) return;\n      parseLoading.value = true;\n      try {\n        const file = uploadFile.value.raw;\n        const data = await readExcelFile(file);\n\n        // 验证数据\n        const validatedData = validateData(data);\n        previewData.value = validatedData;\n        currentStep.value++;\n        message.success('文件解析成功');\n      } catch (error) {\n        message.error('文件解析失败: ' + (error.message || '未知错误'));\n        console.error('Parse file error:', error);\n      } finally {\n        parseLoading.value = false;\n      }\n    };\n    const readExcelFile = file => {\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = e => {\n          try {\n            const data = new Uint8Array(e.target.result);\n            const workbook = XLSX.read(data, {\n              type: 'array'\n            });\n            const sheetName = workbook.SheetNames[0];\n            const worksheet = workbook.Sheets[sheetName];\n            const jsonData = XLSX.utils.sheet_to_json(worksheet);\n            resolve(jsonData);\n          } catch (error) {\n            reject(error);\n          }\n        };\n        reader.onerror = reject;\n        reader.readAsArrayBuffer(file);\n      });\n    };\n    const validateData = data => {\n      const requiredFields = ['软件名称', '版本', '软件类型', '资产责任人', '供应商'];\n      const softwareTypeMap = {\n        '系统软件': 'system',\n        '应用软件': 'application',\n        '开发工具': 'development',\n        '数据库': 'database',\n        '安全软件': 'security',\n        '其他': 'other'\n      };\n      const licenseTypeMap = {\n        '永久许可': 'perpetual',\n        '订阅许可': 'subscription',\n        '试用许可': 'trial',\n        '开源许可': 'open_source'\n      };\n      const assetStatusMap = {\n        '激活': 'active',\n        '未激活': 'inactive',\n        '过期': 'expired',\n        '退役': 'retired'\n      };\n      return data.map((row, index) => {\n        const errors = [];\n        const item = {\n          software_name: row['软件名称'],\n          version: row['版本'],\n          software_type: softwareTypeMap[row['软件类型']] || 'other',\n          asset_owner: row['资产责任人'],\n          supplier_name: row['供应商'],\n          supplier_contact: row['供应商联系人'],\n          purchase_date: row['采购日期'],\n          asset_status: assetStatusMap[row['资产状态']] || 'active',\n          license_type: licenseTypeMap[row['许可证类型']] || 'perpetual',\n          license_count: row['许可证数量'] || 1,\n          license_start_date: row['许可证开始日期'],\n          license_end_date: row['许可证结束日期'],\n          license_key: row['许可证密钥'],\n          installation_path: row['安装路径'],\n          config_path: row['配置文件路径'],\n          notes: row['备注'],\n          _rowIndex: index + 2 // Excel行号（从2开始，因为第1行是标题）\n        };\n\n        // 验证必填字段\n        requiredFields.forEach(field => {\n          const value = row[field];\n          if (!value || String(value).trim() === '') {\n            errors.push(`${field}不能为空`);\n          }\n        });\n\n        // 验证软件类型\n        if (row['软件类型'] && !softwareTypeMap[row['软件类型']]) {\n          errors.push('软件类型不正确，请选择：系统软件/应用软件/开发工具/数据库/安全软件/其他');\n        }\n\n        // 验证许可证类型\n        if (row['许可证类型'] && !licenseTypeMap[row['许可证类型']]) {\n          errors.push('许可证类型不正确，请选择：永久许可/订阅许可/试用许可/开源许可');\n        }\n\n        // 验证资产状态\n        if (row['资产状态'] && !assetStatusMap[row['资产状态']]) {\n          errors.push('资产状态不正确，请选择：激活/未激活/过期/退役');\n        }\n\n        // 验证日期格式\n        if (item.purchase_date && !isValidDate(item.purchase_date)) {\n          errors.push('采购日期格式不正确');\n        }\n        if (item.license_start_date && !isValidDate(item.license_start_date)) {\n          errors.push('许可证开始日期格式不正确');\n        }\n        if (item.license_end_date && !isValidDate(item.license_end_date)) {\n          errors.push('许可证结束日期格式不正确');\n        }\n\n        // 验证许可证数量\n        if (item.license_count && (isNaN(item.license_count) || item.license_count <= 0)) {\n          errors.push('许可证数量必须是大于0的数字');\n        }\n        item._valid = errors.length === 0;\n        item._errors = errors;\n        return item;\n      });\n    };\n    const isValidDate = dateString => {\n      if (!dateString) return true; // 可选字段\n      const date = new Date(dateString);\n      return date instanceof Date && !isNaN(date);\n    };\n    const importData = async () => {\n      const validData = previewData.value.filter(item => item._valid);\n      if (validData.length === 0) {\n        message.error('没有有效数据可导入');\n        return;\n      }\n      importLoading.value = true;\n      try {\n        // 清理验证字段\n        const cleanData = validData.map(item => {\n          const {\n            _valid,\n            _errors,\n            _rowIndex,\n            ...cleanItem\n          } = item;\n          return cleanItem;\n        });\n        const response = await softwareAssetApi.batchImport(cleanData);\n        importResult.value = {\n          success: true,\n          successCount: response.data.success_count || cleanData.length,\n          failedCount: response.data.failed_count || 0,\n          message: response.data.message || '导入成功',\n          errors: response.data.errors || []\n        };\n        currentStep.value++;\n        message.success('导入完成');\n      } catch (error) {\n        importResult.value = {\n          success: false,\n          successCount: 0,\n          failedCount: validData.length,\n          message: error.response?.data?.message || '导入失败',\n          errors: error.response?.data?.errors || []\n        };\n        currentStep.value++;\n        message.error('导入失败: ' + (error.response?.data?.message || error.message || '未知错误'));\n        console.error('Import data error:', error);\n      } finally {\n        importLoading.value = false;\n      }\n    };\n    const handleComplete = () => {\n      emit('success');\n      handleClose();\n    };\n    const handleClose = () => {\n      dialogVisible.value = false;\n      // 重置状态\n      setTimeout(() => {\n        currentStep.value = 0;\n        templateDownloaded.value = false;\n        uploadFile.value = null;\n        previewData.value = [];\n        importResult.value = {\n          success: false,\n          successCount: 0,\n          failedCount: 0,\n          message: '',\n          errors: []\n        };\n      }, 300);\n    };\n    const __returned__ = {\n      props,\n      emit,\n      currentStep,\n      templateDownloaded,\n      downloadLoading,\n      uploadFile,\n      fileList,\n      parseLoading,\n      importLoading,\n      previewData,\n      importResult,\n      previewColumns,\n      dialogVisible,\n      validRecords,\n      invalidRecords,\n      downloadTemplate,\n      nextStep,\n      handleFileChange,\n      beforeUpload,\n      removeFile,\n      parseFile,\n      readExcelFile,\n      validateData,\n      isValidDate,\n      importData,\n      handleComplete,\n      handleClose,\n      ref,\n      computed,\n      get message() {\n        return message;\n      },\n      get DownloadOutlined() {\n        return DownloadOutlined;\n      },\n      get InboxOutlined() {\n        return InboxOutlined;\n      },\n      get FileExcelOutlined() {\n        return FileExcelOutlined;\n      },\n      get CloseOutlined() {\n        return CloseOutlined;\n      },\n      get CheckOutlined() {\n        return CheckOutlined;\n      },\n      get CheckCircleOutlined() {\n        return CheckCircleOutlined;\n      },\n      get CloseCircleOutlined() {\n        return CloseCircleOutlined;\n      },\n      get softwareAssetApi() {\n        return softwareAssetApi;\n      },\n      get XLSX() {\n        return XLSX;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","message","DownloadOutlined","InboxOutlined","FileExcelOutlined","CloseOutlined","CheckOutlined","CheckCircleOutlined","CloseCircleOutlined","softwareAssetApi","XLSX","props","__props","emit","__emit","currentStep","templateDownloaded","downloadLoading","uploadFile","fileList","parseLoading","importLoading","previewData","importResult","success","successCount","failedCount","errors","previewColumns","title","dataIndex","key","width","customRender","index","record","_valid","minWidth","_errors","length","join","dialogVisible","get","visible","set","value","validRecords","filter","item","invalidRecords","downloadTemplate","response","blob","Blob","data","type","url","window","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","error","console","nextStep","handleFileChange","info","beforeUpload","file","isExcel","isLt10M","size","removeFile","parseFile","raw","readExcelFile","validatedData","validateData","Promise","resolve","reject","reader","FileReader","onload","e","Uint8Array","target","result","workbook","read","sheetName","SheetNames","worksheet","Sheets","jsonData","utils","sheet_to_json","onerror","readAsArrayBuffer","requiredFields","softwareTypeMap","licenseTypeMap","assetStatusMap","map","row","software_name","version","software_type","asset_owner","supplier_name","supplier_contact","purchase_date","asset_status","license_type","license_count","license_start_date","license_end_date","license_key","installation_path","config_path","notes","_rowIndex","forEach","field","String","trim","push","isValidDate","isNaN","dateString","date","Date","importData","validData","cleanData","cleanItem","batchImport","success_count","failed_count","handleComplete","handleClose","setTimeout"],"sources":["E:/A_project/yuanchi/AIops/frontend/src/components/business/SoftwareAssetImport.vue"],"sourcesContent":["<template>\r\n  <a-modal\r\n    v-model:open=\"dialogVisible\"\r\n    title=\"批量导入软件资产\"\r\n    width=\"600px\"\r\n    :before-close=\"handleClose\"\r\n  >\r\n    <div class=\"import-container\">\r\n      <!-- 步骤指示器 -->\r\n      <a-steps :current=\"currentStep\" status=\"process\">\r\n        <a-step title=\"下载模板\" />\r\n        <a-step title=\"上传文件\" />\r\n        <a-step title=\"数据预览\" />\r\n        <a-step title=\"导入完成\" />\r\n      </a-steps>\r\n      \r\n      <!-- 步骤1: 下载模板 -->\r\n      <div v-if=\"currentStep === 0\" class=\"step-content\">\r\n        <div class=\"template-section\">\r\n          <a-alert\r\n            message=\"导入说明\"\r\n            type=\"info\"\r\n            :closable=\"false\"\r\n            show-icon\r\n          >\r\n            <template #description>\r\n              <p>1. 请先下载导入模板，按照模板格式填写数据</p>\r\n              <p>2. 必填字段：软件名称、版本、软件类型、资产责任人、供应商</p>\r\n              <p>3. 日期格式：YYYY-MM-DD（如：2024-01-15）</p>\r\n              <p>4. 软件类型：系统软件/应用软件/开发工具/数据库/安全软件/其他</p>\r\n              <p>5. 许可证类型：永久许可/订阅许可/试用许可/开源许可</p>\r\n              <p>6. 资产状态：激活/未激活/过期/退役</p>\r\n            </template>\r\n          </a-alert>\r\n          \r\n          <div class=\"template-download\">\r\n            <a-button\r\n              type=\"primary\"\r\n              size=\"large\"\r\n              @click=\"downloadTemplate\"\r\n              :loading=\"downloadLoading\"\r\n            >\r\n              <template #icon><DownloadOutlined /></template>\r\n              下载导入模板\r\n            </a-button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- 步骤2: 上传文件 -->\r\n      <div v-if=\"currentStep === 1\" class=\"step-content\">\r\n        <div class=\"upload-section\">\r\n          <a-upload-dragger\r\n            v-model:file-list=\"fileList\"\r\n            :multiple=\"false\"\r\n            :before-upload=\"beforeUpload\"\r\n            @change=\"handleFileChange\"\r\n            accept=\".xlsx,.xls\"\r\n            :max-count=\"1\"\r\n          >\r\n            <p class=\"ant-upload-drag-icon\">\r\n              <InboxOutlined />\r\n            </p>\r\n            <p class=\"ant-upload-text\">\r\n              将文件拖到此处，或点击上传\r\n            </p>\r\n            <p class=\"ant-upload-hint\">\r\n              只能上传 xlsx/xls 文件，且不超过 10MB\r\n            </p>\r\n          </a-upload-dragger>\r\n          \r\n          <div v-if=\"uploadFile\" class=\"file-info\">\r\n            <a-tag color=\"green\" size=\"large\">\r\n              <template #icon><FileExcelOutlined /></template>\r\n              {{ uploadFile.name }}\r\n            </a-tag>\r\n            <a-button type=\"text\" @click=\"removeFile\" class=\"remove-btn\">\r\n              <template #icon><CloseOutlined /></template>\r\n            </a-button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- 步骤3: 数据预览 -->\r\n      <div v-if=\"currentStep === 2\" class=\"step-content\">\r\n        <div class=\"preview-section\">\r\n          <div class=\"preview-header\">\r\n            <span>数据预览（共 {{ previewData.length }} 条记录）</span>\r\n            <div class=\"validation-summary\">\r\n              <a-tag v-if=\"validRecords > 0\" color=\"green\">\r\n                有效: {{ validRecords }}\r\n              </a-tag>\r\n              <a-tag v-if=\"invalidRecords > 0\" color=\"red\">\r\n                无效: {{ invalidRecords }}\r\n              </a-tag>\r\n            </div>\r\n          </div>\r\n          \r\n          <a-table\r\n            :data-source=\"previewData.slice(0, 10)\"\r\n            :columns=\"previewColumns\"\r\n            :bordered=\"true\"\r\n            :scroll=\"{ y: 300 }\"\r\n            size=\"small\"\r\n            :pagination=\"false\"\r\n          />\r\n          \r\n          <div v-if=\"previewData.length > 10\" class=\"more-records\">\r\n            <a-typography-text type=\"secondary\">仅显示前10条记录，实际将导入 {{ validRecords }} 条有效记录</a-typography-text>\r\n          </div>\r\n          \r\n          <a-alert\r\n            v-if=\"invalidRecords > 0\"\r\n            message=\"存在无效数据\"\r\n            type=\"warning\"\r\n            :closable=\"false\"\r\n            show-icon\r\n            class=\"validation-alert\"\r\n          >\r\n            <template #description>\r\n              <p>发现 {{ invalidRecords }} 条无效记录，这些记录将被跳过。</p>\r\n              <p>请检查数据格式是否正确，必填字段是否完整。</p>\r\n            </template>\r\n          </a-alert>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- 步骤4: 导入完成 -->\r\n      <div v-if=\"currentStep === 3\" class=\"step-content\">\r\n        <div class=\"result-section\">\r\n          <div class=\"result-icon\">\r\n            <CheckCircleOutlined v-if=\"importResult.success\" style=\"font-size: 60px; color: #52c41a;\" />\r\n            <CloseCircleOutlined v-else style=\"font-size: 60px; color: #ff4d4f;\" />\r\n          </div>\r\n          \r\n          <div class=\"result-content\">\r\n            <h3 v-if=\"importResult.success\">导入成功！</h3>\r\n            <h3 v-else>导入失败</h3>\r\n            \r\n            <div class=\"result-details\">\r\n              <p v-if=\"importResult.success\">\r\n                成功导入 <strong>{{ importResult.successCount }}</strong> 条记录\r\n              </p>\r\n              <p v-if=\"importResult.failedCount > 0\">\r\n                失败 <strong>{{ importResult.failedCount }}</strong> 条记录\r\n              </p>\r\n              <p v-if=\"importResult.message\">\r\n                {{ importResult.message }}\r\n              </p>\r\n            </div>\r\n            \r\n            <div v-if=\"importResult.errors && importResult.errors.length > 0\" class=\"error-details\">\r\n              <a-collapse>\r\n                <a-collapse-panel key=\"1\" header=\"查看错误详情\">\r\n                  <div v-for=\"(error, index) in importResult.errors\" :key=\"index\" class=\"error-item\">\r\n                    <span class=\"error-row\">第{{ error.row }}行:</span>\r\n                    <span class=\"error-msg\">{{ error.message }}</span>\r\n                  </div>\r\n                </a-collapse-panel>\r\n              </a-collapse>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <template #footer>\r\n      <div class=\"dialog-footer\">\r\n        <a-button @click=\"handleClose\">取消</a-button>\r\n        <a-button\r\n          v-if=\"currentStep === 0\"\r\n          type=\"primary\"\r\n          @click=\"nextStep\"\r\n          :disabled=\"!templateDownloaded\"\r\n        >\r\n          下一步\r\n        </a-button>\r\n        <a-button\r\n          v-if=\"currentStep === 1\"\r\n          type=\"primary\"\r\n          @click=\"parseFile\"\r\n          :disabled=\"!uploadFile\"\r\n          :loading=\"parseLoading\"\r\n        >\r\n          解析文件\r\n        </a-button>\r\n        <a-button\r\n          v-if=\"currentStep === 2\"\r\n          type=\"primary\"\r\n          @click=\"importData\"\r\n          :disabled=\"validRecords === 0\"\r\n          :loading=\"importLoading\"\r\n        >\r\n          开始导入 ({{ validRecords }}条)\r\n        </a-button>\r\n        <a-button\r\n          v-if=\"currentStep === 3\"\r\n          type=\"primary\"\r\n          @click=\"handleComplete\"\r\n        >\r\n          完成\r\n        </a-button>\r\n      </div>\r\n    </template>\r\n  </a-modal>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed } from 'vue'\r\nimport { message } from 'ant-design-vue'\r\nimport {\r\n  DownloadOutlined,\r\n  InboxOutlined,\r\n  FileExcelOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  CheckCircleOutlined,\r\n  CloseCircleOutlined\r\n} from '@ant-design/icons-vue'\r\nimport { softwareAssetApi } from '@/api/softwareAsset'\r\nimport * as XLSX from 'xlsx'\r\n\r\n// Props\r\nconst props = defineProps({\r\n  visible: {\r\n    type: Boolean,\r\n    default: false\r\n  }\r\n})\r\n\r\n// Emits\r\nconst emit = defineEmits(['update:visible', 'success'])\r\n\r\n// 响应式数据\r\nconst currentStep = ref(0)\r\nconst templateDownloaded = ref(false)\r\nconst downloadLoading = ref(false)\r\nconst uploadFile = ref(null)\r\nconst fileList = ref([])\r\nconst parseLoading = ref(false)\r\nconst importLoading = ref(false)\r\nconst previewData = ref([])\r\nconst importResult = ref({\r\n  success: false,\r\n  successCount: 0,\r\n  failedCount: 0,\r\n  message: '',\r\n  errors: []\r\n})\r\n\r\n// 表格列配置\r\nconst previewColumns = [\r\n  {\r\n    title: '#',\r\n    dataIndex: 'index',\r\n    key: 'index',\r\n    width: 50,\r\n    customRender: ({ index }) => index + 1\r\n  },\r\n  {\r\n    title: '软件名称',\r\n    dataIndex: 'software_name',\r\n    key: 'software_name',\r\n    width: 120\r\n  },\r\n  {\r\n    title: '版本',\r\n    dataIndex: 'version',\r\n    key: 'version',\r\n    width: 100\r\n  },\r\n  {\r\n    title: '软件类型',\r\n    dataIndex: 'software_type',\r\n    key: 'software_type',\r\n    width: 100\r\n  },\r\n  {\r\n    title: '责任人',\r\n    dataIndex: 'asset_owner',\r\n    key: 'asset_owner',\r\n    width: 100\r\n  },\r\n  {\r\n    title: '状态',\r\n    key: 'status',\r\n    width: 80,\r\n    customRender: ({ record }) => {\r\n      if (record._valid) {\r\n        return '<CheckOutlined style=\"color: #52c41a;\" />'\r\n      } else {\r\n        return '<CloseOutlined style=\"color: #ff4d4f;\" />'\r\n      }\r\n    }\r\n  },\r\n  {\r\n    title: '错误信息',\r\n    key: 'errors',\r\n    minWidth: 150,\r\n    customRender: ({ record }) => {\r\n      if (record._errors && record._errors.length > 0) {\r\n        return `<span class=\"error-text\">${record._errors.join(', ')}</span>`\r\n      } else {\r\n        return '<span class=\"success-text\">验证通过</span>'\r\n      }\r\n    }\r\n  }\r\n]\r\n\r\n// 计算属性\r\nconst dialogVisible = computed({\r\n  get: () => props.visible,\r\n  set: (value) => emit('update:visible', value)\r\n})\r\n\r\nconst validRecords = computed(() => {\r\n  return previewData.value.filter(item => item._valid).length\r\n})\r\n\r\nconst invalidRecords = computed(() => {\r\n  return previewData.value.filter(item => !item._valid).length\r\n})\r\n\r\n// 方法\r\nconst downloadTemplate = async () => {\r\n  downloadLoading.value = true\r\n  try {\r\n    const response = await softwareAssetApi.downloadTemplate()\r\n    \r\n    // 创建下载链接\r\n    const blob = new Blob([response.data], {\r\n      type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\r\n    })\r\n    const url = window.URL.createObjectURL(blob)\r\n    const link = document.createElement('a')\r\n    link.href = url\r\n    link.download = '软件资产导入模板.xlsx'\r\n    document.body.appendChild(link)\r\n    link.click()\r\n    document.body.removeChild(link)\r\n    window.URL.revokeObjectURL(url)\r\n    \r\n    templateDownloaded.value = true\r\n    message.success('模板下载成功')\r\n  } catch (error) {\r\n    message.error('模板下载失败')\r\n    console.error('Download template error:', error)\r\n  } finally {\r\n    downloadLoading.value = false\r\n  }\r\n}\r\n\r\nconst nextStep = () => {\r\n  currentStep.value++\r\n}\r\n\r\nconst handleFileChange = (info) => {\r\n  const { fileList } = info\r\n  if (fileList.length > 0) {\r\n    uploadFile.value = fileList[0]\r\n  } else {\r\n    uploadFile.value = null\r\n  }\r\n}\r\n\r\nconst beforeUpload = (file) => {\r\n  const isExcel = file.type === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' ||\r\n                  file.type === 'application/vnd.ms-excel'\r\n  const isLt10M = file.size / 1024 / 1024 < 10\r\n  \r\n  if (!isExcel) {\r\n    message.error('只能上传 Excel 文件!')\r\n    return false\r\n  }\r\n  if (!isLt10M) {\r\n    message.error('文件大小不能超过 10MB!')\r\n    return false\r\n  }\r\n  return false // 阻止自动上传\r\n}\r\n\r\nconst removeFile = () => {\r\n  uploadFile.value = null\r\n  fileList.value = []\r\n}\r\n\r\nconst parseFile = async () => {\r\n  if (!uploadFile.value) return\r\n  \r\n  parseLoading.value = true\r\n  try {\r\n    const file = uploadFile.value.raw\r\n    const data = await readExcelFile(file)\r\n    \r\n    // 验证数据\r\n    const validatedData = validateData(data)\r\n    previewData.value = validatedData\r\n    \r\n    currentStep.value++\r\n    message.success('文件解析成功')\r\n  } catch (error) {\r\n    message.error('文件解析失败: ' + (error.message || '未知错误'))\r\n    console.error('Parse file error:', error)\r\n  } finally {\r\n    parseLoading.value = false\r\n  }\r\n}\r\n\r\nconst readExcelFile = (file) => {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader()\r\n    reader.onload = (e) => {\r\n      try {\r\n        const data = new Uint8Array(e.target.result)\r\n        const workbook = XLSX.read(data, { type: 'array' })\r\n        const sheetName = workbook.SheetNames[0]\r\n        const worksheet = workbook.Sheets[sheetName]\r\n        const jsonData = XLSX.utils.sheet_to_json(worksheet)\r\n        resolve(jsonData)\r\n      } catch (error) {\r\n        reject(error)\r\n      }\r\n    }\r\n    reader.onerror = reject\r\n    reader.readAsArrayBuffer(file)\r\n  })\r\n}\r\n\r\nconst validateData = (data) => {\r\n  const requiredFields = ['软件名称', '版本', '软件类型', '资产责任人', '供应商']\r\n  const softwareTypeMap = {\r\n    '系统软件': 'system',\r\n    '应用软件': 'application',\r\n    '开发工具': 'development',\r\n    '数据库': 'database',\r\n    '安全软件': 'security',\r\n    '其他': 'other'\r\n  }\r\n  const licenseTypeMap = {\r\n    '永久许可': 'perpetual',\r\n    '订阅许可': 'subscription',\r\n    '试用许可': 'trial',\r\n    '开源许可': 'open_source'\r\n  }\r\n  const assetStatusMap = {\r\n    '激活': 'active',\r\n    '未激活': 'inactive',\r\n    '过期': 'expired',\r\n    '退役': 'retired'\r\n  }\r\n  \r\n  return data.map((row, index) => {\r\n    const errors = []\r\n    const item = {\r\n      software_name: row['软件名称'],\r\n      version: row['版本'],\r\n      software_type: softwareTypeMap[row['软件类型']] || 'other',\r\n      asset_owner: row['资产责任人'],\r\n      supplier_name: row['供应商'],\r\n      supplier_contact: row['供应商联系人'],\r\n      purchase_date: row['采购日期'],\r\n      asset_status: assetStatusMap[row['资产状态']] || 'active',\r\n      license_type: licenseTypeMap[row['许可证类型']] || 'perpetual',\r\n      license_count: row['许可证数量'] || 1,\r\n      license_start_date: row['许可证开始日期'],\r\n      license_end_date: row['许可证结束日期'],\r\n      license_key: row['许可证密钥'],\r\n      installation_path: row['安装路径'],\r\n      config_path: row['配置文件路径'],\r\n      notes: row['备注'],\r\n      _rowIndex: index + 2 // Excel行号（从2开始，因为第1行是标题）\r\n    }\r\n    \r\n    // 验证必填字段\r\n    requiredFields.forEach(field => {\r\n      const value = row[field]\r\n      if (!value || String(value).trim() === '') {\r\n        errors.push(`${field}不能为空`)\r\n      }\r\n    })\r\n    \r\n    // 验证软件类型\r\n    if (row['软件类型'] && !softwareTypeMap[row['软件类型']]) {\r\n      errors.push('软件类型不正确，请选择：系统软件/应用软件/开发工具/数据库/安全软件/其他')\r\n    }\r\n    \r\n    // 验证许可证类型\r\n    if (row['许可证类型'] && !licenseTypeMap[row['许可证类型']]) {\r\n      errors.push('许可证类型不正确，请选择：永久许可/订阅许可/试用许可/开源许可')\r\n    }\r\n    \r\n    // 验证资产状态\r\n    if (row['资产状态'] && !assetStatusMap[row['资产状态']]) {\r\n      errors.push('资产状态不正确，请选择：激活/未激活/过期/退役')\r\n    }\r\n    \r\n    // 验证日期格式\r\n    if (item.purchase_date && !isValidDate(item.purchase_date)) {\r\n      errors.push('采购日期格式不正确')\r\n    }\r\n    if (item.license_start_date && !isValidDate(item.license_start_date)) {\r\n      errors.push('许可证开始日期格式不正确')\r\n    }\r\n    if (item.license_end_date && !isValidDate(item.license_end_date)) {\r\n      errors.push('许可证结束日期格式不正确')\r\n    }\r\n    \r\n    // 验证许可证数量\r\n    if (item.license_count && (isNaN(item.license_count) || item.license_count <= 0)) {\r\n      errors.push('许可证数量必须是大于0的数字')\r\n    }\r\n    \r\n    item._valid = errors.length === 0\r\n    item._errors = errors\r\n    \r\n    return item\r\n  })\r\n}\r\n\r\nconst isValidDate = (dateString) => {\r\n  if (!dateString) return true // 可选字段\r\n  const date = new Date(dateString)\r\n  return date instanceof Date && !isNaN(date)\r\n}\r\n\r\nconst importData = async () => {\r\n  const validData = previewData.value.filter(item => item._valid)\r\n  \r\n  if (validData.length === 0) {\r\n    message.error('没有有效数据可导入')\r\n    return\r\n  }\r\n  \r\n  importLoading.value = true\r\n  try {\r\n    // 清理验证字段\r\n    const cleanData = validData.map(item => {\r\n      const { _valid, _errors, _rowIndex, ...cleanItem } = item\r\n      return cleanItem\r\n    })\r\n    \r\n    const response = await softwareAssetApi.batchImport(cleanData)\r\n    \r\n    importResult.value = {\r\n      success: true,\r\n      successCount: response.data.success_count || cleanData.length,\r\n      failedCount: response.data.failed_count || 0,\r\n      message: response.data.message || '导入成功',\r\n      errors: response.data.errors || []\r\n    }\r\n    \r\n    currentStep.value++\r\n    message.success('导入完成')\r\n  } catch (error) {\r\n    importResult.value = {\r\n      success: false,\r\n      successCount: 0,\r\n      failedCount: validData.length,\r\n      message: error.response?.data?.message || '导入失败',\r\n      errors: error.response?.data?.errors || []\r\n    }\r\n    currentStep.value++\r\n    message.error('导入失败: ' + (error.response?.data?.message || error.message || '未知错误'))\r\n    console.error('Import data error:', error)\r\n  } finally {\r\n    importLoading.value = false\r\n  }\r\n}\r\n\r\nconst handleComplete = () => {\r\n  emit('success')\r\n  handleClose()\r\n}\r\n\r\nconst handleClose = () => {\r\n  dialogVisible.value = false\r\n  // 重置状态\r\n  setTimeout(() => {\r\n    currentStep.value = 0\r\n    templateDownloaded.value = false\r\n    uploadFile.value = null\r\n    previewData.value = []\r\n    importResult.value = {\r\n      success: false,\r\n      successCount: 0,\r\n      failedCount: 0,\r\n      message: '',\r\n      errors: []\r\n    }\r\n  }, 300)\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.import-container {\r\n  padding: 20px 0;\r\n}\r\n\r\n.step-content {\r\n  margin-top: 30px;\r\n  min-height: 300px;\r\n}\r\n\r\n.template-section {\r\n  text-align: center;\r\n}\r\n\r\n.template-download {\r\n  margin-top: 30px;\r\n}\r\n\r\n.upload-section {\r\n  padding: 20px;\r\n}\r\n\r\n.file-info {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: 20px;\r\n  gap: 10px;\r\n}\r\n\r\n.remove-btn {\r\n  color: #f56c6c;\r\n}\r\n\r\n.preview-section {\r\n  padding: 10px;\r\n}\r\n\r\n.preview-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.validation-summary {\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\n.more-records {\r\n  text-align: center;\r\n  margin-top: 10px;\r\n}\r\n\r\n.validation-alert {\r\n  margin-top: 15px;\r\n}\r\n\r\n.error-text {\r\n  color: #f56c6c;\r\n  font-size: 12px;\r\n}\r\n\r\n.success-text {\r\n  color: #67c23a;\r\n  font-size: 12px;\r\n}\r\n\r\n.result-section {\r\n  text-align: center;\r\n  padding: 40px 20px;\r\n}\r\n\r\n.result-icon {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.result-content h3 {\r\n  margin-bottom: 20px;\r\n  color: #303133;\r\n}\r\n\r\n.result-details {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.result-details p {\r\n  margin: 10px 0;\r\n  color: #606266;\r\n}\r\n\r\n.error-details {\r\n  text-align: left;\r\n  max-width: 500px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.error-item {\r\n  margin-bottom: 8px;\r\n  padding: 8px;\r\n  background-color: #fef0f0;\r\n  border-radius: 4px;\r\n}\r\n\r\n.error-row {\r\n  font-weight: bold;\r\n  color: #f56c6c;\r\n  margin-right: 10px;\r\n}\r\n\r\n.error-msg {\r\n  color: #606266;\r\n}\r\n\r\n.dialog-footer {\r\n  text-align: right;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}