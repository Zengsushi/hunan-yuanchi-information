{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"detail-container\"\n};\nconst _hoisted_2 = {\n  class: \"deployment-section\"\n};\nconst _hoisted_3 = {\n  class: \"history-section\"\n};\nconst _hoisted_4 = {\n  class: \"history-header\"\n};\nconst _hoisted_5 = {\n  class: \"history-section\"\n};\nconst _hoisted_6 = {\n  class: \"history-header\"\n};\nconst _hoisted_7 = {\n  class: \"dialog-footer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_a_tag = _resolveComponent(\"a-tag\");\n  const _component_a_descriptions_item = _resolveComponent(\"a-descriptions-item\");\n  const _component_a_descriptions = _resolveComponent(\"a-descriptions\");\n  const _component_a_tab_pane = _resolveComponent(\"a-tab-pane\");\n  const _component_a_typography_text = _resolveComponent(\"a-typography-text\");\n  const _component_a_table = _resolveComponent(\"a-table\");\n  const _component_a_button = _resolveComponent(\"a-button\");\n  const _component_a_tabs = _resolveComponent(\"a-tabs\");\n  const _component_a_modal = _resolveComponent(\"a-modal\");\n  return _openBlock(), _createBlock(_component_a_modal, {\n    open: $setup.dialogVisible,\n    \"onUpdate:open\": _cache[1] || (_cache[1] = $event => $setup.dialogVisible = $event),\n    title: \"软件资产详情\",\n    width: \"900px\",\n    \"before-close\": $setup.handleClose\n  }, {\n    footer: _withCtx(() => [_createElementVNode(\"div\", _hoisted_7, [_createVNode(_component_a_button, {\n      onClick: $setup.handleClose\n    }, {\n      default: _withCtx(() => [...(_cache[7] || (_cache[7] = [_createTextVNode(\"关闭\", -1 /* CACHED */)]))]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_a_button, {\n      type: \"primary\",\n      onClick: $setup.handleEdit\n    }, {\n      default: _withCtx(() => [...(_cache[8] || (_cache[8] = [_createTextVNode(\" 编辑 \", -1 /* CACHED */)]))]),\n      _: 1 /* STABLE */\n    })])]),\n    default: _withCtx(() => [$props.assetData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_a_tabs, {\n      activeKey: $setup.activeTab,\n      \"onUpdate:activeKey\": _cache[0] || (_cache[0] = $event => $setup.activeTab = $event)\n    }, {\n      default: _withCtx(() => [_createCommentVNode(\" 基本信息 \"), _createVNode(_component_a_tab_pane, {\n        tab: \"基本信息\",\n        key: \"basic\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_descriptions, {\n          column: 2,\n          bordered: \"\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_a_descriptions_item, {\n            label: \"软件名称\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_a_tag, {\n              color: \"blue\"\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString($props.assetData.software_name), 1 /* TEXT */)]),\n              _: 1 /* STABLE */\n            })]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_a_descriptions_item, {\n            label: \"软件版本\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString($props.assetData.version), 1 /* TEXT */)]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_a_descriptions_item, {\n            label: \"软件类型\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_a_tag, {\n              color: $setup.getSoftwareTypeColor($props.assetData.software_type)\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.getSoftwareTypeText($props.assetData.software_type)), 1 /* TEXT */)]),\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"color\"])]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_a_descriptions_item, {\n            label: \"资产责任人\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString($props.assetData.asset_owner), 1 /* TEXT */)]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_a_descriptions_item, {\n            label: \"供应商\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString($props.assetData.supplier_name), 1 /* TEXT */)]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_a_descriptions_item, {\n            label: \"供应商联系人\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString($props.assetData.supplier_contact || '-'), 1 /* TEXT */)]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_a_descriptions_item, {\n            label: \"采购日期\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString($props.assetData.purchase_date), 1 /* TEXT */)]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_a_descriptions_item, {\n            label: \"资产状态\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_a_tag, {\n              color: $setup.getAssetStatusColor($props.assetData.asset_status)\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.getAssetStatusText($props.assetData.asset_status)), 1 /* TEXT */)]),\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"color\"])]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }), _createCommentVNode(\" 许可证信息 \"), _createVNode(_component_a_tab_pane, {\n        tab: \"许可证信息\",\n        key: \"license\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_descriptions, {\n          column: 2,\n          bordered: \"\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_a_descriptions_item, {\n            label: \"许可证类型\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_a_tag, {\n              color: $setup.getLicenseTypeColor($props.assetData.license_type)\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.getLicenseTypeText($props.assetData.license_type)), 1 /* TEXT */)]),\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"color\"])]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_a_descriptions_item, {\n            label: \"许可证数量\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString($props.assetData.license_count), 1 /* TEXT */)]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_a_descriptions_item, {\n            label: \"许可证开始日期\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString($props.assetData.license_start_date), 1 /* TEXT */)]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_a_descriptions_item, {\n            label: \"许可证结束日期\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString($props.assetData.license_end_date), 1 /* TEXT */)]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_a_descriptions_item, {\n            label: \"许可证状态\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_a_tag, {\n              color: $setup.getLicenseStatusColor($props.assetData.license_status)\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.getLicenseStatusText($props.assetData.license_status)), 1 /* TEXT */)]),\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"color\"])]),\n            _: 1 /* STABLE */\n          }), $props.assetData.license_status !== 'expired' ? (_openBlock(), _createBlock(_component_a_descriptions_item, {\n            key: 0,\n            label: \"剩余有效天数\"\n          }, {\n            default: _withCtx(() => [_createElementVNode(\"span\", {\n              class: _normalizeClass($setup.getRemainingDaysClass($props.assetData.license_remaining_days))\n            }, _toDisplayString($props.assetData.license_remaining_days) + \"天 \", 3 /* TEXT, CLASS */)]),\n            _: 1 /* STABLE */\n          })) : _createCommentVNode(\"v-if\", true), $props.assetData.license_key ? (_openBlock(), _createBlock(_component_a_descriptions_item, {\n            key: 1,\n            label: \"许可证密钥\",\n            span: 2\n          }, {\n            default: _withCtx(() => [_createVNode(_component_a_typography_text, {\n              code: \"\",\n              copyable: \"\"\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString($props.assetData.license_key), 1 /* TEXT */)]),\n              _: 1 /* STABLE */\n            })]),\n            _: 1 /* STABLE */\n          })) : _createCommentVNode(\"v-if\", true)]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }), _createCommentVNode(\" 部署信息 \"), _createVNode(_component_a_tab_pane, {\n        tab: \"部署信息\",\n        key: \"deployment\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_descriptions, {\n          column: 2,\n          bordered: \"\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_a_descriptions_item, {\n            label: \"安装路径\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString($props.assetData.installation_path || '-'), 1 /* TEXT */)]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_a_descriptions_item, {\n            label: \"配置文件路径\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString($props.assetData.config_path || '-'), 1 /* TEXT */)]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_a_descriptions_item, {\n            label: \"备注\",\n            span: 2\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString($props.assetData.notes || '-'), 1 /* TEXT */)]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        }), _createCommentVNode(\" 部署服务器 \"), _createElementVNode(\"div\", _hoisted_2, [_cache[2] || (_cache[2] = _createElementVNode(\"h4\", null, \"部署服务器\", -1 /* CACHED */)), _createVNode(_component_a_table, {\n          \"data-source\": $setup.deploymentServerList,\n          columns: $setup.serverColumns,\n          bordered: \"\",\n          pagination: false,\n          locale: {\n            emptyText: '暂无部署服务器'\n          }\n        }, null, 8 /* PROPS */, [\"data-source\"])])]),\n        _: 1 /* STABLE */\n      }), _createCommentVNode(\" 许可证更新记录 \"), _createVNode(_component_a_tab_pane, {\n        tab: \"许可证更新记录\",\n        key: \"license-history\"\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_cache[4] || (_cache[4] = _createElementVNode(\"h4\", null, \"许可证更新记录\", -1 /* CACHED */)), _createVNode(_component_a_button, {\n          type: \"primary\",\n          size: \"small\",\n          onClick: $setup.loadLicenseHistory\n        }, {\n          default: _withCtx(() => [...(_cache[3] || (_cache[3] = [_createTextVNode(\" 刷新记录 \", -1 /* CACHED */)]))]),\n          _: 1 /* STABLE */\n        })]), _createVNode(_component_a_table, {\n          \"data-source\": $setup.licenseHistory,\n          columns: $setup.licenseHistoryColumns,\n          bordered: \"\",\n          loading: $setup.licenseHistoryLoading,\n          pagination: false,\n          locale: {\n            emptyText: '暂无更新记录'\n          }\n        }, null, 8 /* PROPS */, [\"data-source\", \"loading\"])])]),\n        _: 1 /* STABLE */\n      }), _createCommentVNode(\" 版本更新记录 \"), _createVNode(_component_a_tab_pane, {\n        tab: \"版本更新记录\",\n        key: \"version-history\"\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_cache[6] || (_cache[6] = _createElementVNode(\"h4\", null, \"版本更新记录\", -1 /* CACHED */)), _createVNode(_component_a_button, {\n          type: \"primary\",\n          size: \"small\",\n          onClick: $setup.loadVersionHistory\n        }, {\n          default: _withCtx(() => [...(_cache[5] || (_cache[5] = [_createTextVNode(\" 刷新记录 \", -1 /* CACHED */)]))]),\n          _: 1 /* STABLE */\n        })]), _createVNode(_component_a_table, {\n          \"data-source\": $setup.versionHistory,\n          columns: $setup.versionHistoryColumns,\n          bordered: \"\",\n          loading: $setup.versionHistoryLoading,\n          pagination: false,\n          locale: {\n            emptyText: '暂无更新记录'\n          }\n        }, null, 8 /* PROPS */, [\"data-source\", \"loading\"])])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"activeKey\"])])) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"open\"]);\n}","map":{"version":3,"names":["class","_createBlock","_component_a_modal","open","$setup","dialogVisible","$event","title","width","handleClose","footer","_withCtx","_createElementVNode","_hoisted_7","_createVNode","_component_a_button","onClick","_cache","type","handleEdit","$props","assetData","_createElementBlock","_hoisted_1","_component_a_tabs","activeKey","activeTab","_createCommentVNode","_component_a_tab_pane","tab","key","_component_a_descriptions","column","bordered","_component_a_descriptions_item","label","_component_a_tag","color","software_name","version","getSoftwareTypeColor","software_type","getSoftwareTypeText","asset_owner","supplier_name","supplier_contact","purchase_date","getAssetStatusColor","asset_status","getAssetStatusText","getLicenseTypeColor","license_type","getLicenseTypeText","license_count","license_start_date","license_end_date","getLicenseStatusColor","license_status","getLicenseStatusText","_normalizeClass","getRemainingDaysClass","license_remaining_days","license_key","span","_component_a_typography_text","code","copyable","installation_path","config_path","notes","_hoisted_2","_component_a_table","deploymentServerList","columns","serverColumns","pagination","locale","emptyText","_hoisted_3","_hoisted_4","size","loadLicenseHistory","licenseHistory","licenseHistoryColumns","loading","licenseHistoryLoading","_hoisted_5","_hoisted_6","loadVersionHistory","versionHistory","versionHistoryColumns","versionHistoryLoading"],"sources":["E:\\A_project\\yuanchi\\AIops\\frontend\\src\\components\\business\\SoftwareAssetDetail.vue"],"sourcesContent":["<template>\r\n  <a-modal\r\n    v-model:open=\"dialogVisible\"\r\n    title=\"软件资产详情\"\r\n    width=\"900px\"\r\n    :before-close=\"handleClose\"\r\n  >\r\n    <div v-if=\"assetData\" class=\"detail-container\">\r\n      <a-tabs v-model:activeKey=\"activeTab\">\r\n        <!-- 基本信息 -->\r\n        <a-tab-pane tab=\"基本信息\" key=\"basic\">\r\n          <a-descriptions :column=\"2\" bordered>\r\n            <a-descriptions-item label=\"软件名称\">\r\n              <a-tag color=\"blue\">{{ assetData.software_name }}</a-tag>\r\n            </a-descriptions-item>\r\n            <a-descriptions-item label=\"软件版本\">\r\n              {{ assetData.version }}\r\n            </a-descriptions-item>\r\n            <a-descriptions-item label=\"软件类型\">\r\n              <a-tag :color=\"getSoftwareTypeColor(assetData.software_type)\">\r\n                {{ getSoftwareTypeText(assetData.software_type) }}\r\n              </a-tag>\r\n            </a-descriptions-item>\r\n            <a-descriptions-item label=\"资产责任人\">\r\n              {{ assetData.asset_owner }}\r\n            </a-descriptions-item>\r\n            <a-descriptions-item label=\"供应商\">\r\n              {{ assetData.supplier_name }}\r\n            </a-descriptions-item>\r\n            <a-descriptions-item label=\"供应商联系人\">\r\n              {{ assetData.supplier_contact || '-' }}\r\n            </a-descriptions-item>\r\n            <a-descriptions-item label=\"采购日期\">\r\n              {{ assetData.purchase_date }}\r\n            </a-descriptions-item>\r\n            <a-descriptions-item label=\"资产状态\">\r\n              <a-tag :color=\"getAssetStatusColor(assetData.asset_status)\">\r\n                {{ getAssetStatusText(assetData.asset_status) }}\r\n              </a-tag>\r\n            </a-descriptions-item>\r\n          </a-descriptions>\r\n        </a-tab-pane>\r\n        \r\n        <!-- 许可证信息 -->\r\n        <a-tab-pane tab=\"许可证信息\" key=\"license\">\r\n          <a-descriptions :column=\"2\" bordered>\r\n            <a-descriptions-item label=\"许可证类型\">\r\n              <a-tag :color=\"getLicenseTypeColor(assetData.license_type)\">\r\n                {{ getLicenseTypeText(assetData.license_type) }}\r\n              </a-tag>\r\n            </a-descriptions-item>\r\n            <a-descriptions-item label=\"许可证数量\">\r\n              {{ assetData.license_count }}\r\n            </a-descriptions-item>\r\n            <a-descriptions-item label=\"许可证开始日期\">\r\n              {{ assetData.license_start_date }}\r\n            </a-descriptions-item>\r\n            <a-descriptions-item label=\"许可证结束日期\">\r\n              {{ assetData.license_end_date }}\r\n            </a-descriptions-item>\r\n            <a-descriptions-item label=\"许可证状态\">\r\n              <a-tag :color=\"getLicenseStatusColor(assetData.license_status)\">\r\n                {{ getLicenseStatusText(assetData.license_status) }}\r\n              </a-tag>\r\n            </a-descriptions-item>\r\n            <a-descriptions-item label=\"剩余有效天数\" v-if=\"assetData.license_status !== 'expired'\">\r\n              <span :class=\"getRemainingDaysClass(assetData.license_remaining_days)\">\r\n                {{ assetData.license_remaining_days }}天\r\n              </span>\r\n            </a-descriptions-item>\r\n            <a-descriptions-item label=\"许可证密钥\" :span=\"2\" v-if=\"assetData.license_key\">\r\n              <a-typography-text code copyable>\r\n                {{ assetData.license_key }}\r\n              </a-typography-text>\r\n            </a-descriptions-item>\r\n          </a-descriptions>\r\n        </a-tab-pane>\r\n        \r\n        <!-- 部署信息 -->\r\n        <a-tab-pane tab=\"部署信息\" key=\"deployment\">\r\n          <a-descriptions :column=\"2\" bordered>\r\n            <a-descriptions-item label=\"安装路径\">\r\n              {{ assetData.installation_path || '-' }}\r\n            </a-descriptions-item>\r\n            <a-descriptions-item label=\"配置文件路径\">\r\n              {{ assetData.config_path || '-' }}\r\n            </a-descriptions-item>\r\n            <a-descriptions-item label=\"备注\" :span=\"2\">\r\n              {{ assetData.notes || '-' }}\r\n            </a-descriptions-item>\r\n          </a-descriptions>\r\n          \r\n          <!-- 部署服务器 -->\r\n          <div class=\"deployment-section\">\r\n            <h4>部署服务器</h4>\r\n            <a-table\r\n              :data-source=\"deploymentServerList\"\r\n              :columns=\"serverColumns\"\r\n              bordered\r\n              :pagination=\"false\"\r\n              :locale=\"{ emptyText: '暂无部署服务器' }\"\r\n            />\r\n          </div>\r\n        </a-tab-pane>\r\n        \r\n        <!-- 许可证更新记录 -->\r\n        <a-tab-pane tab=\"许可证更新记录\" key=\"license-history\">\r\n          <div class=\"history-section\">\r\n            <div class=\"history-header\">\r\n              <h4>许可证更新记录</h4>\r\n              <a-button type=\"primary\" size=\"small\" @click=\"loadLicenseHistory\">\r\n                刷新记录\r\n              </a-button>\r\n            </div>\r\n            \r\n            <a-table\r\n              :data-source=\"licenseHistory\"\r\n              :columns=\"licenseHistoryColumns\"\r\n              bordered\r\n              :loading=\"licenseHistoryLoading\"\r\n              :pagination=\"false\"\r\n              :locale=\"{ emptyText: '暂无更新记录' }\"\r\n            />\r\n          </div>\r\n        </a-tab-pane>\r\n        \r\n        <!-- 版本更新记录 -->\r\n        <a-tab-pane tab=\"版本更新记录\" key=\"version-history\">\r\n          <div class=\"history-section\">\r\n            <div class=\"history-header\">\r\n              <h4>版本更新记录</h4>\r\n              <a-button type=\"primary\" size=\"small\" @click=\"loadVersionHistory\">\r\n                刷新记录\r\n              </a-button>\r\n            </div>\r\n            \r\n            <a-table\r\n              :data-source=\"versionHistory\"\r\n              :columns=\"versionHistoryColumns\"\r\n              bordered\r\n              :loading=\"versionHistoryLoading\"\r\n              :pagination=\"false\"\r\n              :locale=\"{ emptyText: '暂无更新记录' }\"\r\n            />\r\n          </div>\r\n        </a-tab-pane>\r\n      </a-tabs>\r\n    </div>\r\n    \r\n    <template #footer>\r\n      <div class=\"dialog-footer\">\r\n        <a-button @click=\"handleClose\">关闭</a-button>\r\n        <a-button type=\"primary\" @click=\"handleEdit\">\r\n          编辑\r\n        </a-button>\r\n      </div>\r\n    </template>\r\n  </a-modal>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, watch } from 'vue'\r\nimport { message } from 'ant-design-vue'\r\nimport { softwareAssetApi } from '@/api/softwareAsset'\r\nimport { formatDateTime } from '@/utils/date'\r\n\r\n// Props\r\nconst props = defineProps({\r\n  visible: {\r\n    type: Boolean,\r\n    default: false\r\n  },\r\n  assetData: {\r\n    type: Object,\r\n    default: null\r\n  }, \r\n  softwareAssetId: {\r\n    type : Number,\r\n    default : null\r\n  }\r\n})\r\n\r\nconsole.log(props.softwareAssetId);\r\n\r\n// Emits\r\nconst emit = defineEmits(['update:visible', 'edit'])\r\n\r\n// 响应式数据\r\nconst activeTab = ref('basic')\r\nconst licenseHistory = ref([])\r\nconst versionHistory = ref([])\r\nconst licenseHistoryLoading = ref(false)\r\nconst versionHistoryLoading = ref(false)\r\n\r\n// 表格列配置\r\nconst serverColumns = [\r\n  {\r\n    title: '服务器主机名/IP',\r\n    dataIndex: 'hostname',\r\n    key: 'hostname',\r\n    width: 200\r\n  },\r\n  {\r\n    title: '描述',\r\n    dataIndex: 'description',\r\n    key: 'description'\r\n  }\r\n]\r\n\r\nconst licenseHistoryColumns = [\r\n  {\r\n    title: '更新时间',\r\n    dataIndex: 'update_time',\r\n    key: 'update_time',\r\n    width: 180,\r\n    customRender: ({ text }) => formatDateTime(text)\r\n  },\r\n  {\r\n    title: '更新方式',\r\n    dataIndex: 'update_method',\r\n    key: 'update_method',\r\n    width: 100\r\n  },\r\n  {\r\n    title: '更新前许可证类型',\r\n    dataIndex: 'old_license_type',\r\n    key: 'old_license_type',\r\n    width: 120\r\n  },\r\n  {\r\n    title: '更新后许可证类型',\r\n    dataIndex: 'new_license_type',\r\n    key: 'new_license_type',\r\n    width: 120\r\n  },\r\n  {\r\n    title: '更新前许可证期限',\r\n    key: 'old_license_period',\r\n    width: 200,\r\n    customRender: ({ record }) => `${record.old_license_start_date} ~ ${record.old_license_end_date}`\r\n  },\r\n  {\r\n    title: '更新后许可证期限',\r\n    key: 'new_license_period',\r\n    width: 200,\r\n    customRender: ({ record }) => `${record.new_license_start_date} ~ ${record.new_license_end_date}`\r\n  }\r\n]\r\n\r\nconst versionHistoryColumns = [\r\n  {\r\n    title: '更新时间',\r\n    dataIndex: 'update_time',\r\n    key: 'update_time',\r\n    width: 180,\r\n    customRender: ({ text }) => formatDateTime(text)\r\n  },\r\n  {\r\n    title: '更新前版本',\r\n    dataIndex: 'old_version',\r\n    key: 'old_version',\r\n    width: 150\r\n  },\r\n  {\r\n    title: '更新后版本',\r\n    dataIndex: 'new_version',\r\n    key: 'new_version',\r\n    width: 150\r\n  },\r\n  {\r\n    title: '更新说明',\r\n    dataIndex: 'update_notes',\r\n    key: 'update_notes'\r\n  }\r\n]\r\n\r\n// 计算属性\r\nconst dialogVisible = computed({\r\n  get: () => props.visible,\r\n  set: (value) => emit('update:visible', value)\r\n})\r\n\r\nconst deploymentServerList = computed(() => {\r\n  if (!props.assetData?.deployment_servers) return []\r\n  return props.assetData.deployment_servers\r\n})\r\n\r\n// 方法\r\nconst getSoftwareTypeText = (type) => {\r\n  const typeMap = {\r\n    'system': '系统软件',\r\n    'application': '应用软件',\r\n    'development': '开发工具',\r\n    'database': '数据库',\r\n    'security': '安全软件',\r\n    'other': '其他'\r\n  }\r\n  return typeMap[type] || type\r\n}\r\n\r\nconst getSoftwareTypeColor = (type) => {\r\n  const colorMap = {\r\n    'system': 'blue',\r\n    'application': 'green',\r\n    'development': 'orange',\r\n    'database': 'purple',\r\n    'security': 'red',\r\n    'other': 'default'\r\n  }\r\n  return colorMap[type] || 'default'\r\n}\r\n\r\nconst getAssetStatusText = (status) => {\r\n  const statusMap = {\r\n    'active': '激活',\r\n    'inactive': '未激活',\r\n    'expired': '过期',\r\n    'retired': '退役'\r\n  }\r\n  return statusMap[status] || status\r\n}\r\n\r\nconst getAssetStatusColor = (status) => {\r\n  const colorMap = {\r\n    'active': 'green',\r\n    'inactive': 'orange',\r\n    'expired': 'red',\r\n    'retired': 'default'\r\n  }\r\n  return colorMap[status] || 'default'\r\n}\r\n\r\nconst getLicenseTypeText = (type) => {\r\n  const typeMap = {\r\n    'perpetual': '永久许可',\r\n    'subscription': '订阅许可',\r\n    'trial': '试用许可',\r\n    'open_source': '开源许可'\r\n  }\r\n  return typeMap[type] || type\r\n}\r\n\r\nconst getLicenseTypeColor = (type) => {\r\n  const colorMap = {\r\n    'perpetual': 'green',\r\n    'subscription': 'blue',\r\n    'trial': 'orange',\r\n    'open_source': 'purple'\r\n  }\r\n  return colorMap[type] || 'default'\r\n}\r\n\r\nconst getLicenseStatusText = (status) => {\r\n  const statusMap = {\r\n    'active': '有效',\r\n    'expired': '已过期',\r\n    'near_expired': '即将过期'\r\n  }\r\n  return statusMap[status] || status\r\n}\r\n\r\nconst getLicenseStatusColor = (status) => {\r\n  const colorMap = {\r\n    'active': 'green',\r\n    'expired': 'red',\r\n    'near_expired': 'orange'\r\n  }\r\n  return colorMap[status] || 'default'\r\n}\r\n\r\nconst getRemainingDaysClass = (days) => {\r\n  if (days <= 30) return 'text-danger'\r\n  if (days <= 90) return 'text-warning'\r\n  return 'text-success'\r\n}\r\n\r\nconst loadLicenseHistory = async () => {\r\n  if (!props.assetData?.id) return\r\n  \r\n  licenseHistoryLoading.value = true\r\n  try {\r\n    const response = await softwareAssetApi.getLicenseHistory(props.assetData.id)\r\n    licenseHistory.value = response.data || []\r\n  } catch (error) {\r\n    console.error('Load license history error:', error)\r\n    message.error('获取许可证更新记录失败')\r\n  } finally {\r\n    licenseHistoryLoading.value = false\r\n  }\r\n}\r\n\r\nconst loadVersionHistory = async () => {\r\n  if (!props.assetData?.id) return\r\n  \r\n  versionHistoryLoading.value = true\r\n  try {\r\n    const response = await softwareAssetApi.getVersionHistory(props.assetData.id)\r\n    versionHistory.value = response.data || []\r\n  } catch (error) {\r\n    console.error('Load version history error:', error)\r\n    message.error('获取版本更新记录失败')\r\n  } finally {\r\n    versionHistoryLoading.value = false\r\n  }\r\n}\r\n\r\nconst handleEdit = () => {\r\n  emit('edit', props.assetData)\r\n}\r\n\r\nconst handleClose = () => {\r\n  dialogVisible.value = false\r\n}\r\n\r\n// 监听器\r\nwatch(\r\n  () => props.visible,\r\n  (newVal) => {\r\n    if (newVal && props.assetData) {\r\n      activeTab.value = 'basic'\r\n      // 延迟加载历史记录，避免初始加载时的性能问题\r\n      setTimeout(() => {\r\n        if (activeTab.value === 'license-history') {\r\n          loadLicenseHistory()\r\n        } else if (activeTab.value === 'version-history') {\r\n          loadVersionHistory()\r\n        }\r\n      }, 100)\r\n    }\r\n  }\r\n)\r\n\r\nwatch(activeTab, (newTab) => {\r\n  if (newTab === 'license-history' && licenseHistory.value.length === 0) {\r\n    loadLicenseHistory()\r\n  } else if (newTab === 'version-history' && versionHistory.value.length === 0) {\r\n    loadVersionHistory()\r\n  }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.detail-container {\r\n  max-height: 600px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.deployment-section {\r\n  margin-top: 20px;\r\n}\r\n\r\n.deployment-section h4 {\r\n  margin-bottom: 15px;\r\n  color: #303133;\r\n}\r\n\r\n.history-section {\r\n  padding: 10px 0;\r\n}\r\n\r\n.history-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.history-header h4 {\r\n  margin: 0;\r\n  color: #303133;\r\n}\r\n\r\n.text-danger {\r\n  color: #f56c6c;\r\n  font-weight: bold;\r\n}\r\n\r\n.text-warning {\r\n  color: #e6a23c;\r\n  font-weight: bold;\r\n}\r\n\r\n.text-success {\r\n  color: #67c23a;\r\n}\r\n\r\n.dialog-footer {\r\n  text-align: right;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}