{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport { ref, reactive, computed, onMounted } from 'vue';\nimport { message, Modal } from 'ant-design-vue';\nimport SoftwareAssetTable from '@/components/business/SoftwareAssetTable.vue';\nimport SoftwareMonitoringActions from '@/components/business/SoftwareMonitoringActions.vue';\nimport SoftwareAssetForm from '@/components/business/SoftwareAssetForm.vue';\nimport SoftwareAssetDetail from '@/components/business/SoftwareAssetDetail.vue';\nimport SoftwareAssetImport from '@/components/business/SoftwareAssetImport.vue';\nimport softwareAssetApi from '@/api/softwareAsset';\nimport { dictionaryAPI } from '@/api';\nimport { formatDate } from '@/utils/date';\nexport default {\n  name: 'SoftwareAssetList',\n  components: {\n    SoftwareAssetTable,\n    SoftwareMonitoringActions,\n    SoftwareAssetForm,\n    SoftwareAssetDetail,\n    SoftwareAssetImport\n  },\n  setup() {\n    // 组件引用\n    const softwareTableRef = ref(null);\n    const monitoringActionsRef = ref(null);\n\n    // 响应式数据\n    const loading = ref(false);\n    const tableData = ref([]);\n    const selectedItems = ref([]);\n    const selectedRowKeys = ref([]);\n    const formDialogVisible = ref(false);\n    const detailDialogVisible = ref(false);\n    const importDialogVisible = ref(false);\n    const licenseModalVisible = ref(false);\n    const historyModalVisible = ref(false);\n    const isEdit = ref(false);\n    const currentItem = ref({});\n    const currentAssetId = ref(null);\n    const licenseFormData = ref({});\n    const historyActiveTab = ref('license');\n    const currentHistoryAsset = ref(null);\n    const licenseHistory = ref([]);\n    const versionHistory = ref([]);\n    const licenseHistoryLoading = ref(false);\n    const versionHistoryLoading = ref(false);\n\n    // 字典数据\n    const assetStatusOptions = ref([]);\n    const softwareTypeOptions = ref([]);\n\n    // 搜索表单\n    const searchForm = reactive({\n      software_name: '',\n      version: '',\n      manufacturer: '',\n      asset_status: '',\n      software_type: ''\n    });\n\n    // 分页\n    const pagination = reactive({\n      page: 1,\n      size: 20,\n      total: 0\n    });\n\n    // 统计计算属性\n    const statistics = computed(() => {\n      const total = tableData.value.length || 0;\n      const active = tableData.value.filter(item => item.asset_status === 'active').length;\n      const maintenance = tableData.value.filter(item => item.asset_status === 'maintenance').length;\n      const retired = tableData.value.filter(item => item.asset_status === 'retired').length;\n      return {\n        total: pagination.total || 0,\n        active,\n        maintenance,\n        retired\n      };\n    });\n\n    // 历史记录表格列配置\n    const licenseHistoryColumns = [{\n      title: '更新时间',\n      dataIndex: 'update_time',\n      key: 'update_time',\n      width: 180,\n      customRender: ({\n        text\n      }) => {\n        return text ? new Date(text).toLocaleString() : '-';\n      }\n    }, {\n      title: '更新方式',\n      dataIndex: 'update_method',\n      key: 'update_method',\n      width: 100,\n      customRender: ({\n        text\n      }) => {\n        return text === 'manual' ? '手动' : '自动';\n      }\n    }, {\n      title: '更新前许可证信息',\n      dataIndex: 'old_license_info',\n      key: 'old_license_info',\n      customRender: ({\n        text\n      }) => {\n        if (!text) return '-';\n        try {\n          const info = typeof text === 'string' ? JSON.parse(text) : text;\n          return `许可证数量: ${info.license_count || '-'}, 到期日期: ${info.expiry_date || '-'}`;\n        } catch (e) {\n          return text;\n        }\n      }\n    }, {\n      title: '更新后许可证信息',\n      dataIndex: 'new_license_info',\n      key: 'new_license_info',\n      customRender: ({\n        text\n      }) => {\n        if (!text) return '-';\n        try {\n          const info = typeof text === 'string' ? JSON.parse(text) : text;\n          return `许可证数量: ${info.license_count || '-'}, 到期日期: ${info.expiry_date || '-'}`;\n        } catch (e) {\n          return text;\n        }\n      }\n    }, {\n      title: '更新人',\n      dataIndex: 'updated_by',\n      key: 'updated_by',\n      width: 120\n    }];\n    const versionHistoryColumns = [{\n      title: '更新时间',\n      dataIndex: 'update_time',\n      key: 'update_time',\n      width: 180,\n      customRender: ({\n        text\n      }) => {\n        return text ? new Date(text).toLocaleString() : '-';\n      }\n    }, {\n      title: '更新方式',\n      dataIndex: 'update_method',\n      key: 'update_method',\n      width: 100,\n      customRender: ({\n        text\n      }) => {\n        return text === 'manual' ? '手动' : '自动';\n      }\n    }, {\n      title: '更新前版本',\n      dataIndex: 'old_version',\n      key: 'old_version',\n      width: 150\n    }, {\n      title: '更新后版本',\n      dataIndex: 'new_version',\n      key: 'new_version',\n      width: 150\n    }, {\n      title: '更新人',\n      dataIndex: 'updated_by',\n      key: 'updated_by',\n      width: 120\n    }];\n    // 搜索条件\n    const searchKeyword = ref(\"\");\n    const assetStatus = ref(\"\");\n    const assetType = ref(\"\");\n    const manufacturer = ref(\"\");\n\n    // 获取数据\n    const fetchData = async () => {\n      loading.value = true;\n      try {\n        const params = {\n          page: pagination.page,\n          page_size: pagination.size,\n          ...searchForm\n        };\n        // 添加搜索条件\n        if (searchKeyword.value && searchKeyword.value.trim()) {\n          params.search = searchKeyword.value.trim();\n        }\n        if (assetStatus.value) {\n          params.status = assetStatus.value;\n        }\n        if (assetType.value) {\n          params.type = assetType.value;\n        }\n        if (manufacturer.value) {\n          params.manufacturer = manufacturer.value;\n        }\n        console.log(\"正在获取软件资产列表，参数：\", params);\n        console.log('当前分页状态:', {\n          current: pagination.current,\n          pageSize: pagination.pageSize,\n          total: pagination.total\n        });\n\n        // 过滤空值\n        Object.keys(params).forEach(key => {\n          if (params[key] === '' || params[key] === null || params[key] === undefined) {\n            delete params[key];\n          }\n        });\n        console.log(params);\n        const response = await softwareAssetApi.getList(params);\n        console.log(\"API响应\", response);\n        if (response && response.data) {\n          if (response.data.results) {\n            tableData.value = response.data.results;\n          }\n        }\n        tableData.value = response.data.results;\n        pagination.total = response.data.count;\n      } catch (error) {\n        message.error('获取数据失败：' + (error.message || '未知错误'));\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 新的事件处理方法\n    const handleSearch = searchParams => {\n      Object.assign(searchForm, searchParams);\n      pagination.page = 1;\n      fetchData();\n    };\n    const handleReset = () => {\n      Object.keys(searchForm).forEach(key => {\n        searchForm[key] = '';\n      });\n      pagination.page = 1;\n      fetchData();\n    };\n    const handlePageChange = page => {\n      pagination.page = page;\n      fetchData();\n    };\n    const handleSizeChange = size => {\n      pagination.size = size;\n      pagination.page = 1;\n      fetchData();\n    };\n    const handleSelectionChange = (selectedKeys, selectedRows) => {\n      selectedRowKeys.value = selectedKeys;\n      selectedItems.value = selectedRows;\n    };\n\n    // 表格操作事件处理\n    const handleView = record => {\n      currentAssetId.value = record.id;\n      detailDialogVisible.value = true;\n    };\n    const handleEdit = record => {\n      currentItem.value = {\n        ...record\n      };\n      isEdit.value = true;\n      formDialogVisible.value = true;\n    };\n    const handleDelete = record => {\n      Modal.confirm({\n        title: '确认删除',\n        content: `确定要删除软件资产 \"${record.software_name}\" 吗？`,\n        okText: '确定',\n        cancelText: '取消',\n        onOk: async () => {\n          try {\n            await softwareAssetApi.delete(record.id);\n            message.success('删除成功');\n            fetchData();\n          } catch (error) {\n            message.error('删除失败：' + (error.message || '未知错误'));\n          }\n        }\n      });\n    };\n    const handleLicense = record => {\n      currentItem.value = record;\n      licenseFormData.value = {\n        license_count: record.license_count,\n        license_expiry_date: record.license_expiry_date\n      };\n      licenseModalVisible.value = true;\n    };\n    const handleHistory = record => {\n      currentHistoryAsset.value = record;\n      historyModalVisible.value = true;\n      loadLicenseHistory();\n    };\n    const handleBatchDelete = () => {\n      Modal.confirm({\n        title: '确认批量删除',\n        content: `确定要删除选中的 ${selectedItems.value.length} 项软件资产吗？`,\n        okText: '确定',\n        cancelText: '取消',\n        onOk: async () => {\n          try {\n            const ids = selectedItems.value.map(item => item.id);\n            await softwareAssetApi.batchDelete({\n              ids\n            });\n            message.success('批量删除成功');\n            selectedItems.value = [];\n            selectedRowKeys.value = [];\n            fetchData();\n          } catch (error) {\n            message.error('批量删除失败：' + (error.message || '未知错误'));\n          }\n        }\n      });\n    };\n    const handleBatchExport = async () => {\n      try {\n        loading.value = true;\n        const ids = selectedItems.value.map(item => item.id);\n        const response = await softwareAssetApi.export({\n          ids\n        });\n\n        // 创建下载链接\n        const blob = new Blob([response.data], {\n          type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n        });\n        const url = window.URL.createObjectURL(blob);\n        const link = document.createElement('a');\n        link.href = url;\n        link.download = `软件资产数据_选中项_${formatDate(new Date(), 'YYYY-MM-DD')}.xlsx`;\n        link.click();\n        window.URL.revokeObjectURL(url);\n        message.success('批量导出成功');\n      } catch (error) {\n        message.error('批量导出失败：' + (error.message || '未知错误'));\n      } finally {\n        loading.value = false;\n      }\n    };\n    const handleExport = async () => {\n      try {\n        loading.value = true;\n        const params = {\n          ...searchForm\n        };\n\n        // 过滤空值\n        Object.keys(params).forEach(key => {\n          if (params[key] === '' || params[key] === null || params[key] === undefined) {\n            delete params[key];\n          }\n        });\n        const response = await softwareAssetApi.export(params);\n\n        // 创建下载链接\n        const blob = new Blob([response.data], {\n          type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n        });\n        const url = window.URL.createObjectURL(blob);\n        const link = document.createElement('a');\n        link.href = url;\n        link.download = `软件资产数据_${formatDate(new Date(), 'YYYY-MM-DD')}.xlsx`;\n        link.click();\n        window.URL.revokeObjectURL(url);\n        message.success('导出成功');\n      } catch (error) {\n        message.error('导出失败：' + (error.message || '未知错误'));\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 新增\n    const showAddDialog = () => {\n      currentItem.value = {};\n      isEdit.value = false;\n      formDialogVisible.value = true;\n    };\n\n    // 导出数据\n    const exportData = async () => {\n      try {\n        loading.value = true;\n        const params = {\n          ...searchForm\n        };\n\n        // 过滤空值\n        Object.keys(params).forEach(key => {\n          if (params[key] === '' || params[key] === null || params[key] === undefined) {\n            delete params[key];\n          }\n        });\n        const response = await softwareAssetApi.export(params);\n\n        // 创建下载链接\n        const blob = new Blob([response.data], {\n          type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n        });\n        const url = window.URL.createObjectURL(blob);\n        const link = document.createElement('a');\n        link.href = url;\n        link.download = `软件资产数据_${formatDate(new Date(), 'YYYY-MM-DD')}.xlsx`;\n        link.click();\n        window.URL.revokeObjectURL(url);\n        message.success('导出成功');\n      } catch (error) {\n        message.error('导出失败：' + (error.message || '未知错误'));\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 显示导入对话框\n    const showImportDialog = () => {\n      importDialogVisible.value = true;\n    };\n\n    // 显示扫描配置\n    const showScanConfig = () => {\n      if (monitoringActionsRef.value) {\n        monitoringActionsRef.value.showScanConfig();\n      }\n    };\n\n    // 许可证处理\n    const handleLicenseCancel = () => {\n      licenseModalVisible.value = false;\n      licenseFormData.value = {};\n    };\n    const handleLicenseConfirm = async () => {\n      try {\n        await softwareAssetApi.updateLicense(currentItem.value.id, licenseFormData.value);\n        message.success('许可证信息更新成功');\n        licenseModalVisible.value = false;\n        fetchData();\n      } catch (error) {\n        message.error('许可证信息更新失败：' + (error.message || '未知错误'));\n      }\n    };\n\n    // 历史记录加载函数\n    const loadLicenseHistory = async () => {\n      if (!currentHistoryAsset.value) return;\n      try {\n        licenseHistoryLoading.value = true;\n        const response = await softwareAssetApi.getLicenseHistory(currentHistoryAsset.value.id);\n        licenseHistory.value = response.data || [];\n      } catch (error) {\n        message.error('加载许可证历史记录失败：' + (error.message || '未知错误'));\n      } finally {\n        licenseHistoryLoading.value = false;\n      }\n    };\n    const loadVersionHistory = async () => {\n      if (!currentHistoryAsset.value) return;\n      try {\n        versionHistoryLoading.value = true;\n        const response = await softwareAssetApi.getVersionHistory(currentHistoryAsset.value.id);\n        versionHistory.value = response.data || [];\n      } catch (error) {\n        message.error('加载版本历史记录失败：' + (error.message || '未知错误'));\n      } finally {\n        versionHistoryLoading.value = false;\n      }\n    };\n\n    // 表单成功回调\n    const handleFormSuccess = () => {\n      fetchData();\n    };\n\n    // 导入成功回调\n    const handleImportSuccess = () => {\n      fetchData();\n    };\n\n    // 获取字典数据\n    const fetchDictionaryData = async () => {\n      try {\n        const [assetStatusRes, softwareTypeRes] = await Promise.all([dictionaryAPI.getDictionaryByCategory('asset_status'), dictionaryAPI.getDictionaryByCategory('software_type')]);\n        if (assetStatusRes.data && assetStatusRes.data.results) {\n          assetStatusOptions.value = assetStatusRes.data.results.map(item => ({\n            value: item.value,\n            label: item.label\n          }));\n        }\n        if (softwareTypeRes.data && softwareTypeRes.data.results) {\n          softwareTypeOptions.value = softwareTypeRes.data.results.map(item => ({\n            value: item.value,\n            label: item.label\n          }));\n        }\n      } catch (error) {\n        console.error('获取字典数据失败:', error);\n        message.error('获取字典数据失败');\n      }\n    };\n\n    // 获取软件类型文本\n    const getSoftwareTypeText = type => {\n      const option = softwareTypeOptions.value.find(item => item.value === type);\n      return option ? option.label : '未知';\n    };\n\n    // 生命周期\n    onMounted(() => {\n      fetchDictionaryData();\n      fetchData();\n    });\n    return {\n      // 图标\n\n      // 数据\n      loading,\n      tableData,\n      selectedItems,\n      selectedRowKeys,\n      searchForm,\n      pagination,\n      statistics,\n      assetStatusOptions,\n      softwareTypeOptions,\n      // 对话框\n      formDialogVisible,\n      detailDialogVisible,\n      importDialogVisible,\n      licenseModalVisible,\n      historyModalVisible,\n      isEdit,\n      currentItem,\n      currentAssetId,\n      licenseFormData,\n      historyActiveTab,\n      currentHistoryAsset,\n      licenseHistory,\n      versionHistory,\n      licenseHistoryLoading,\n      versionHistoryLoading,\n      licenseHistoryColumns,\n      versionHistoryColumns,\n      // 方法\n      fetchDictionaryData,\n      fetchData,\n      handleSearch,\n      handleReset,\n      handlePageChange,\n      handleSizeChange,\n      handleSelectionChange,\n      handleView,\n      handleEdit,\n      handleDelete,\n      handleLicense,\n      handleHistory,\n      handleBatchDelete,\n      handleBatchExport,\n      handleExport,\n      showAddDialog,\n      showImportDialog,\n      showScanConfig,\n      exportData,\n      handleLicenseCancel,\n      handleLicenseConfirm,\n      loadLicenseHistory,\n      loadVersionHistory,\n      handleFormSuccess,\n      handleImportSuccess,\n      getSoftwareTypeText,\n      // 组件引用\n      softwareTableRef,\n      monitoringActionsRef\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","computed","onMounted","message","Modal","SoftwareAssetTable","SoftwareMonitoringActions","SoftwareAssetForm","SoftwareAssetDetail","SoftwareAssetImport","softwareAssetApi","dictionaryAPI","formatDate","name","components","setup","softwareTableRef","monitoringActionsRef","loading","tableData","selectedItems","selectedRowKeys","formDialogVisible","detailDialogVisible","importDialogVisible","licenseModalVisible","historyModalVisible","isEdit","currentItem","currentAssetId","licenseFormData","historyActiveTab","currentHistoryAsset","licenseHistory","versionHistory","licenseHistoryLoading","versionHistoryLoading","assetStatusOptions","softwareTypeOptions","searchForm","software_name","version","manufacturer","asset_status","software_type","pagination","page","size","total","statistics","value","length","active","filter","item","maintenance","retired","licenseHistoryColumns","title","dataIndex","key","width","customRender","text","Date","toLocaleString","info","JSON","parse","license_count","expiry_date","e","versionHistoryColumns","searchKeyword","assetStatus","assetType","fetchData","params","page_size","trim","search","status","type","console","log","current","pageSize","Object","keys","forEach","undefined","response","getList","data","results","count","error","handleSearch","searchParams","assign","handleReset","handlePageChange","handleSizeChange","handleSelectionChange","selectedKeys","selectedRows","handleView","record","id","handleEdit","handleDelete","confirm","content","okText","cancelText","onOk","delete","success","handleLicense","license_expiry_date","handleHistory","loadLicenseHistory","handleBatchDelete","ids","map","batchDelete","handleBatchExport","export","blob","Blob","url","window","URL","createObjectURL","link","document","createElement","href","download","click","revokeObjectURL","handleExport","showAddDialog","exportData","showImportDialog","showScanConfig","handleLicenseCancel","handleLicenseConfirm","updateLicense","getLicenseHistory","loadVersionHistory","getVersionHistory","handleFormSuccess","handleImportSuccess","fetchDictionaryData","assetStatusRes","softwareTypeRes","Promise","all","getDictionaryByCategory","label","getSoftwareTypeText","option","find"],"sources":["E:\\A_project\\yuanchi\\AIops\\frontend\\src\\views\\business\\SoftwareAssetList.vue"],"sourcesContent":["<template>\r\n  <div class=\"software-asset-list-container\">\r\n    <!-- 软件资产表格组件 -->\r\n    <SoftwareAssetTable\r\n      ref=\"softwareTableRef\"\r\n      :loading=\"loading\"\r\n      :data=\"tableData\"\r\n      :pagination=\"pagination\"\r\n      :selected-row-keys=\"selectedRowKeys\"\r\n      :totalCount=\"statistics.total\"\r\n      :activeCount=\"statistics.active\"\r\n      :maintenanceCount=\"statistics.maintenance\"\r\n      :retiredCount=\"statistics.retired\"\r\n      @search=\"handleSearch\"\r\n      @reset=\"handleReset\"\r\n      @page-change=\"handlePageChange\"\r\n      @size-change=\"handleSizeChange\"\r\n      @selection-change=\"handleSelectionChange\"\r\n      @view=\"handleView\"\r\n      @edit=\"handleEdit\"\r\n      @delete=\"handleDelete\"\r\n      @license=\"handleLicense\"\r\n      @history=\"handleHistory\"\r\n      @batch-delete=\"handleBatchDelete\"\r\n      @batch-export=\"handleBatchExport\"\r\n      @export=\"handleExport\"\r\n      @add=\"showAddDialog\"\r\n      @import=\"showImportDialog\"\r\n    />\r\n\r\n    <!-- 软件监控操作组件 -->\r\n    <SoftwareMonitoringActions\r\n      ref=\"monitoringActionsRef\"\r\n      :visible=\"false\"\r\n      @refresh=\"fetchData\"\r\n    />\r\n\r\n    <!-- 新增/编辑对话框 -->\r\n    <SoftwareAssetForm\r\n      v-model:visible=\"formDialogVisible\"\r\n      :form-data=\"currentItem\"\r\n      :is-edit=\"isEdit\"\r\n      @success=\"handleFormSuccess\"\r\n    />\r\n\r\n    <!-- 详情对话框 -->\r\n    <SoftwareAssetDetail\r\n      v-model:visible=\"detailDialogVisible\"\r\n      :asset-id=\"currentAssetId\"\r\n    />\r\n\r\n\r\n    <!-- 导入对话框 -->\r\n    <SoftwareAssetImport\r\n      v-model:visible=\"importDialogVisible\"\r\n      @success=\"handleImportSuccess\"\r\n    />\r\n\r\n    <!-- 许可证管理对话框 -->\r\n    <a-modal\r\n      v-model:open=\"licenseModalVisible\"\r\n      title=\"许可证管理\"\r\n      width=\"800px\"\r\n      @ok=\"handleLicenseConfirm\"\r\n      @cancel=\"handleLicenseCancel\"\r\n    >\r\n      <a-form :model=\"licenseFormData\" layout=\"vertical\">\r\n        <a-form-item label=\"许可证数量\">\r\n          <a-input-number\r\n            v-model:value=\"licenseFormData.license_count\"\r\n            :min=\"0\"\r\n            style=\"width: 100%\"\r\n          />\r\n        </a-form-item>\r\n        <a-form-item label=\"许可证到期日期\">\r\n          <a-date-picker\r\n            v-model:value=\"licenseFormData.license_expiry_date\"\r\n            style=\"width: 100%\"\r\n          />\r\n        </a-form-item>\r\n      </a-form>\r\n    </a-modal>\r\n\r\n    <!-- 历史记录弹窗 -->\r\n    <a-modal\r\n      v-model:open=\"historyModalVisible\"\r\n      title=\"更新历史记录\"\r\n      width=\"1200px\"\r\n      :footer=\"null\"\r\n      @cancel=\"historyModalVisible = false\"\r\n    >\r\n      <a-tabs v-model:activeKey=\"historyActiveTab\">\r\n        <a-tab-pane tab=\"许可证更新记录\" key=\"license\">\r\n          <div class=\"history-section\">\r\n            <div class=\"history-header\">\r\n              <h4>许可证更新记录</h4>\r\n              <a-button type=\"primary\" size=\"small\" @click=\"loadLicenseHistory\">\r\n                刷新记录\r\n              </a-button>\r\n            </div>\r\n            \r\n            <a-table\r\n              :data-source=\"licenseHistory\"\r\n              :columns=\"licenseHistoryColumns\"\r\n              bordered\r\n              :loading=\"licenseHistoryLoading\"\r\n              :pagination=\"false\"\r\n              :locale=\"{ emptyText: '暂无更新记录' }\"\r\n            />\r\n          </div>\r\n        </a-tab-pane>\r\n        \r\n        <a-tab-pane tab=\"版本更新记录\" key=\"version\">\r\n          <div class=\"history-section\">\r\n            <div class=\"history-header\">\r\n              <h4>版本更新记录</h4>\r\n              <a-button type=\"primary\" size=\"small\" @click=\"loadVersionHistory\">\r\n                刷新记录\r\n              </a-button>\r\n            </div>\r\n            \r\n            <a-table\r\n              :data-source=\"versionHistory\"\r\n              :columns=\"versionHistoryColumns\"\r\n              bordered\r\n              :loading=\"versionHistoryLoading\"\r\n              :pagination=\"false\"\r\n              :locale=\"{ emptyText: '暂无更新记录' }\"\r\n            />\r\n          </div>\r\n        </a-tab-pane>\r\n      </a-tabs>\r\n    </a-modal>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive, computed, onMounted } from 'vue'\r\nimport { message, Modal } from 'ant-design-vue'\r\nimport SoftwareAssetTable from '@/components/business/SoftwareAssetTable.vue'\r\nimport SoftwareMonitoringActions from '@/components/business/SoftwareMonitoringActions.vue'\r\nimport SoftwareAssetForm from '@/components/business/SoftwareAssetForm.vue'\r\nimport SoftwareAssetDetail from '@/components/business/SoftwareAssetDetail.vue'\r\nimport SoftwareAssetImport from '@/components/business/SoftwareAssetImport.vue'\r\nimport softwareAssetApi from '@/api/softwareAsset'\r\nimport { dictionaryAPI } from '@/api'\r\nimport { formatDate } from '@/utils/date'\r\n\r\nexport default {\r\n  name: 'SoftwareAssetList',\r\n  components: {\r\n    SoftwareAssetTable,\r\n    SoftwareMonitoringActions,\r\n    SoftwareAssetForm,\r\n    SoftwareAssetDetail,\r\n    SoftwareAssetImport,\r\n  },\r\n  setup() {\r\n    // 组件引用\r\n    const softwareTableRef = ref(null)\r\n    const monitoringActionsRef = ref(null)\r\n    \r\n    // 响应式数据\r\n    const loading = ref(false)\r\n    const tableData = ref([])\r\n    const selectedItems = ref([])\r\n    const selectedRowKeys = ref([])\r\n    const formDialogVisible = ref(false)\r\n    const detailDialogVisible = ref(false)\r\n    const importDialogVisible = ref(false)\r\n    const licenseModalVisible = ref(false)\r\n    const historyModalVisible = ref(false)\r\n    const isEdit = ref(false)\r\n    const currentItem = ref({})\r\n    const currentAssetId = ref(null)\r\n    const licenseFormData = ref({})\r\n    const historyActiveTab = ref('license')\r\n    const currentHistoryAsset = ref(null)\r\n    const licenseHistory = ref([])\r\n    const versionHistory = ref([])\r\n    const licenseHistoryLoading = ref(false)\r\n    const versionHistoryLoading = ref(false)\r\n    \r\n    // 字典数据\r\n    const assetStatusOptions = ref([])\r\n    const softwareTypeOptions = ref([])\r\n\r\n    // 搜索表单\r\n    const searchForm = reactive({\r\n      software_name: '',\r\n      version: '',\r\n      manufacturer: '',\r\n      asset_status: '',\r\n      software_type: ''\r\n    })\r\n\r\n    // 分页\r\n    const pagination = reactive({\r\n      page: 1,\r\n      size: 20,\r\n      total: 0\r\n    })\r\n\r\n    // 统计计算属性\r\n    const statistics = computed(() => {\r\n      const total = tableData.value.length || 0\r\n      const active = tableData.value.filter(item => item.asset_status === 'active').length\r\n      const maintenance = tableData.value.filter(item => item.asset_status === 'maintenance').length\r\n      const retired = tableData.value.filter(item => item.asset_status === 'retired').length\r\n      \r\n      return {\r\n        total: pagination.total || 0,\r\n        active,\r\n        maintenance,\r\n        retired\r\n      }\r\n    })\r\n\r\n    // 历史记录表格列配置\r\n    const licenseHistoryColumns = [\r\n      {\r\n        title: '更新时间',\r\n        dataIndex: 'update_time',\r\n        key: 'update_time',\r\n        width: 180,\r\n        customRender: ({ text }) => {\r\n          return text ? new Date(text).toLocaleString() : '-'\r\n        }\r\n      },\r\n      {\r\n        title: '更新方式',\r\n        dataIndex: 'update_method',\r\n        key: 'update_method',\r\n        width: 100,\r\n        customRender: ({ text }) => {\r\n          return text === 'manual' ? '手动' : '自动'\r\n        }\r\n      },\r\n      {\r\n        title: '更新前许可证信息',\r\n        dataIndex: 'old_license_info',\r\n        key: 'old_license_info',\r\n        customRender: ({ text }) => {\r\n          if (!text) return '-'\r\n          try {\r\n            const info = typeof text === 'string' ? JSON.parse(text) : text\r\n            return `许可证数量: ${info.license_count || '-'}, 到期日期: ${info.expiry_date || '-'}`\r\n          } catch (e) {\r\n            return text\r\n          }\r\n        }\r\n      },\r\n      {\r\n        title: '更新后许可证信息',\r\n        dataIndex: 'new_license_info',\r\n        key: 'new_license_info',\r\n        customRender: ({ text }) => {\r\n          if (!text) return '-'\r\n          try {\r\n            const info = typeof text === 'string' ? JSON.parse(text) : text\r\n            return `许可证数量: ${info.license_count || '-'}, 到期日期: ${info.expiry_date || '-'}`\r\n          } catch (e) {\r\n            return text\r\n          }\r\n        }\r\n      },\r\n      {\r\n        title: '更新人',\r\n        dataIndex: 'updated_by',\r\n        key: 'updated_by',\r\n        width: 120\r\n      }\r\n    ]\r\n\r\n    const versionHistoryColumns = [\r\n      {\r\n        title: '更新时间',\r\n        dataIndex: 'update_time',\r\n        key: 'update_time',\r\n        width: 180,\r\n        customRender: ({ text }) => {\r\n          return text ? new Date(text).toLocaleString() : '-'\r\n        }\r\n      },\r\n      {\r\n        title: '更新方式',\r\n        dataIndex: 'update_method',\r\n        key: 'update_method',\r\n        width: 100,\r\n        customRender: ({ text }) => {\r\n          return text === 'manual' ? '手动' : '自动'\r\n        }\r\n      },\r\n      {\r\n        title: '更新前版本',\r\n        dataIndex: 'old_version',\r\n        key: 'old_version',\r\n        width: 150\r\n      },\r\n      {\r\n        title: '更新后版本',\r\n        dataIndex: 'new_version',\r\n        key: 'new_version',\r\n        width: 150\r\n      },\r\n      {\r\n        title: '更新人',\r\n        dataIndex: 'updated_by',\r\n        key: 'updated_by',\r\n        width: 120\r\n      }\r\n    ]\r\n    // 搜索条件\r\n    const searchKeyword = ref(\"\") ;\r\n    const assetStatus = ref(\"\") ;\r\n    const assetType = ref(\"\") ;\r\n    const manufacturer = ref(\"\") ;\r\n\r\n    // 获取数据\r\n    const fetchData = async () => {\r\n      loading.value = true\r\n      try {\r\n        const params = {\r\n          page: pagination.page,\r\n          page_size: pagination.size,\r\n          ...searchForm\r\n        }\r\n        // 添加搜索条件\r\n        if (searchKeyword.value && searchKeyword.value.trim()) {\r\n          params.search = searchKeyword.value.trim();\r\n        }\r\n        if (assetStatus.value) {\r\n          params.status = assetStatus.value;\r\n        }\r\n        if (assetType.value) {\r\n          params.type = assetType.value;\r\n        }\r\n        if (manufacturer.value) {\r\n          params.manufacturer = manufacturer.value;\r\n        }\r\n\r\n        console.log(\"正在获取软件资产列表，参数：\", params);\r\n        console.log('当前分页状态:', {\r\n          current: pagination.current,\r\n          pageSize: pagination.pageSize,\r\n          total: pagination.total\r\n        });\r\n        \r\n        // 过滤空值\r\n        Object.keys(params).forEach(key => {\r\n          if (params[key] === '' || params[key] === null || params[key] === undefined) {\r\n            delete params[key]\r\n          }\r\n        })\r\n\r\n        console.log(params)\r\n        const response = await softwareAssetApi.getList(params)\r\n        console.log(\"API响应\" ,response)\r\n\r\n        if (response && response.data){\r\n          if (response.data.results) {\r\n            tableData.value = response.data.results\r\n          }\r\n        }\r\n\r\n        tableData.value = response.data.results\r\n        pagination.total = response.data.count\r\n\r\n      } catch (error) {\r\n        message.error('获取数据失败：' + (error.message || '未知错误'))\r\n      } finally {\r\n        loading.value = false\r\n      }\r\n    }\r\n\r\n    // 新的事件处理方法\r\n    const handleSearch = (searchParams) => {\r\n      Object.assign(searchForm, searchParams)\r\n      pagination.page = 1\r\n      fetchData()\r\n    }\r\n\r\n    const handleReset = () => {\r\n      Object.keys(searchForm).forEach(key => {\r\n        searchForm[key] = ''\r\n      })\r\n      pagination.page = 1\r\n      fetchData()\r\n    }\r\n\r\n    const handlePageChange = (page) => {\r\n      pagination.page = page\r\n      fetchData()\r\n    }\r\n\r\n    const handleSizeChange = (size) => {\r\n      pagination.size = size\r\n      pagination.page = 1\r\n      fetchData()\r\n    }\r\n\r\n    const handleSelectionChange = (selectedKeys, selectedRows) => {\r\n      selectedRowKeys.value = selectedKeys\r\n      selectedItems.value = selectedRows\r\n    }\r\n\r\n    // 表格操作事件处理\r\n    const handleView = (record) => {\r\n      currentAssetId.value = record.id\r\n      detailDialogVisible.value = true\r\n    }\r\n\r\n    const handleEdit = (record) => {\r\n      currentItem.value = { ...record }\r\n      isEdit.value = true\r\n      formDialogVisible.value = true\r\n    }\r\n\r\n    const handleDelete = (record) => {\r\n      Modal.confirm({\r\n        title: '确认删除',\r\n        content: `确定要删除软件资产 \"${record.software_name}\" 吗？`,\r\n        okText: '确定',\r\n        cancelText: '取消',\r\n        onOk: async () => {\r\n          try {\r\n            await softwareAssetApi.delete(record.id)\r\n            message.success('删除成功')\r\n            fetchData()\r\n          } catch (error) {\r\n            message.error('删除失败：' + (error.message || '未知错误'))\r\n          }\r\n        }\r\n      })\r\n    }\r\n\r\n    const handleLicense = (record) => {\r\n      currentItem.value = record\r\n      licenseFormData.value = {\r\n        license_count: record.license_count,\r\n        license_expiry_date: record.license_expiry_date\r\n      }\r\n      licenseModalVisible.value = true\r\n    }\r\n\r\n    const handleHistory = (record) => {\r\n      currentHistoryAsset.value = record\r\n      historyModalVisible.value = true\r\n      loadLicenseHistory()\r\n    }\r\n\r\n    const handleBatchDelete = () => {\r\n      Modal.confirm({\r\n        title: '确认批量删除',\r\n        content: `确定要删除选中的 ${selectedItems.value.length} 项软件资产吗？`,\r\n        okText: '确定',\r\n        cancelText: '取消',\r\n        onOk: async () => {\r\n          try {\r\n            const ids = selectedItems.value.map(item => item.id)\r\n            await softwareAssetApi.batchDelete({ ids })\r\n            message.success('批量删除成功')\r\n            selectedItems.value = []\r\n            selectedRowKeys.value = []\r\n            fetchData()\r\n          } catch (error) {\r\n            message.error('批量删除失败：' + (error.message || '未知错误'))\r\n          }\r\n        }\r\n      })\r\n    }\r\n\r\n    const handleBatchExport = async () => {\r\n      try {\r\n        loading.value = true\r\n        const ids = selectedItems.value.map(item => item.id)\r\n        const response = await softwareAssetApi.export({ ids })\r\n        \r\n        // 创建下载链接\r\n        const blob = new Blob([response.data], { \r\n          type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' \r\n        })\r\n        const url = window.URL.createObjectURL(blob)\r\n        const link = document.createElement('a')\r\n        link.href = url\r\n        link.download = `软件资产数据_选中项_${formatDate(new Date(), 'YYYY-MM-DD')}.xlsx`\r\n        link.click()\r\n        window.URL.revokeObjectURL(url)\r\n        \r\n        message.success('批量导出成功')\r\n      } catch (error) {\r\n        message.error('批量导出失败：' + (error.message || '未知错误'))\r\n      } finally {\r\n        loading.value = false\r\n      }\r\n    }\r\n\r\n    const handleExport = async () => {\r\n      try {\r\n        loading.value = true\r\n        const params = { ...searchForm }\r\n        \r\n        // 过滤空值\r\n        Object.keys(params).forEach(key => {\r\n          if (params[key] === '' || params[key] === null || params[key] === undefined) {\r\n            delete params[key]\r\n          }\r\n        })\r\n\r\n        const response = await softwareAssetApi.export(params)\r\n        \r\n        // 创建下载链接\r\n        const blob = new Blob([response.data], { \r\n          type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' \r\n        })\r\n        const url = window.URL.createObjectURL(blob)\r\n        const link = document.createElement('a')\r\n        link.href = url\r\n        link.download = `软件资产数据_${formatDate(new Date(), 'YYYY-MM-DD')}.xlsx`\r\n        link.click()\r\n        window.URL.revokeObjectURL(url)\r\n        \r\n        message.success('导出成功')\r\n      } catch (error) {\r\n        message.error('导出失败：' + (error.message || '未知错误'))\r\n      } finally {\r\n        loading.value = false\r\n      }\r\n    }\r\n\r\n    // 新增\r\n    const showAddDialog = () => {\r\n      currentItem.value = {}\r\n      isEdit.value = false\r\n      formDialogVisible.value = true\r\n    }\r\n\r\n    // 导出数据\r\n    const exportData = async () => {\r\n      try {\r\n        loading.value = true\r\n        const params = { ...searchForm }\r\n        \r\n        // 过滤空值\r\n        Object.keys(params).forEach(key => {\r\n          if (params[key] === '' || params[key] === null || params[key] === undefined) {\r\n            delete params[key]\r\n          }\r\n        })\r\n\r\n        const response = await softwareAssetApi.export(params)\r\n        \r\n        // 创建下载链接\r\n        const blob = new Blob([response.data], { \r\n          type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' \r\n        })\r\n        const url = window.URL.createObjectURL(blob)\r\n        const link = document.createElement('a')\r\n        link.href = url\r\n        link.download = `软件资产数据_${formatDate(new Date(), 'YYYY-MM-DD')}.xlsx`\r\n        link.click()\r\n        window.URL.revokeObjectURL(url)\r\n        \r\n        message.success('导出成功')\r\n      } catch (error) {\r\n        message.error('导出失败：' + (error.message || '未知错误'))\r\n      } finally {\r\n        loading.value = false\r\n      }\r\n    }\r\n\r\n    // 显示导入对话框\r\n    const showImportDialog = () => {\r\n      importDialogVisible.value = true\r\n    }\r\n\r\n    // 显示扫描配置\r\n    const showScanConfig = () => {\r\n      if (monitoringActionsRef.value) {\r\n        monitoringActionsRef.value.showScanConfig()\r\n      }\r\n    }\r\n\r\n    // 许可证处理\r\n    const handleLicenseCancel = () => {\r\n      licenseModalVisible.value = false\r\n      licenseFormData.value = {}\r\n    }\r\n\r\n    const handleLicenseConfirm = async () => {\r\n      try {\r\n        await softwareAssetApi.updateLicense(currentItem.value.id, licenseFormData.value)\r\n        message.success('许可证信息更新成功')\r\n        licenseModalVisible.value = false\r\n        fetchData()\r\n      } catch (error) {\r\n        message.error('许可证信息更新失败：' + (error.message || '未知错误'))\r\n      }\r\n    }\r\n\r\n\r\n    // 历史记录加载函数\r\n    const loadLicenseHistory = async () => {\r\n      if (!currentHistoryAsset.value) return\r\n      \r\n      try {\r\n        licenseHistoryLoading.value = true\r\n        const response = await softwareAssetApi.getLicenseHistory(currentHistoryAsset.value.id)\r\n        licenseHistory.value = response.data || []\r\n      } catch (error) {\r\n        message.error('加载许可证历史记录失败：' + (error.message || '未知错误'))\r\n      } finally {\r\n        licenseHistoryLoading.value = false\r\n      }\r\n    }\r\n\r\n    const loadVersionHistory = async () => {\r\n      if (!currentHistoryAsset.value) return\r\n      \r\n      try {\r\n        versionHistoryLoading.value = true\r\n        const response = await softwareAssetApi.getVersionHistory(currentHistoryAsset.value.id)\r\n        versionHistory.value = response.data || []\r\n      } catch (error) {\r\n        message.error('加载版本历史记录失败：' + (error.message || '未知错误'))\r\n      } finally {\r\n        versionHistoryLoading.value = false\r\n      }\r\n    }\r\n\r\n    // 表单成功回调\r\n    const handleFormSuccess = () => {\r\n      fetchData()\r\n    }\r\n\r\n    // 导入成功回调\r\n    const handleImportSuccess = () => {\r\n      fetchData()\r\n    }\r\n\r\n    // 获取字典数据\r\n    const fetchDictionaryData = async () => {\r\n      try {\r\n        const [assetStatusRes, softwareTypeRes] = await Promise.all([\r\n          dictionaryAPI.getDictionaryByCategory('asset_status'),\r\n          dictionaryAPI.getDictionaryByCategory('software_type')\r\n        ])\r\n        \r\n        if (assetStatusRes.data && assetStatusRes.data.results) {\r\n          assetStatusOptions.value = assetStatusRes.data.results.map(item => ({\r\n            value: item.value,\r\n            label: item.label\r\n          }))\r\n        }\r\n        \r\n        if (softwareTypeRes.data && softwareTypeRes.data.results) {\r\n          softwareTypeOptions.value = softwareTypeRes.data.results.map(item => ({\r\n            value: item.value,\r\n            label: item.label\r\n          }))\r\n        }\r\n      } catch (error) {\r\n        console.error('获取字典数据失败:', error)\r\n        message.error('获取字典数据失败')\r\n      }\r\n    }\r\n\r\n    // 获取软件类型文本\r\n    const getSoftwareTypeText = (type) => {\r\n      const option = softwareTypeOptions.value.find(item => item.value === type)\r\n      return option ? option.label : '未知'\r\n    }\r\n\r\n    // 生命周期\r\n    onMounted(() => {\r\n      fetchDictionaryData()\r\n      fetchData()\r\n      \r\n    })\r\n    \r\n    return {\r\n      // 图标\r\n\r\n      // 数据\r\n      loading,\r\n      tableData,\r\n      selectedItems,\r\n      selectedRowKeys,\r\n      searchForm,\r\n      pagination,\r\n      statistics,\r\n      assetStatusOptions,\r\n      softwareTypeOptions,\r\n      \r\n      // 对话框\r\n      formDialogVisible,\r\n      detailDialogVisible,\r\n      importDialogVisible,\r\n      licenseModalVisible,\r\n      historyModalVisible,\r\n      isEdit,\r\n      currentItem,\r\n      currentAssetId,\r\n      licenseFormData,\r\n      historyActiveTab,\r\n      currentHistoryAsset,\r\n      licenseHistory,\r\n      versionHistory,\r\n      licenseHistoryLoading,\r\n      versionHistoryLoading,\r\n      licenseHistoryColumns,\r\n      versionHistoryColumns,\r\n      \r\n      // 方法\r\n      fetchDictionaryData,\r\n      fetchData,\r\n      handleSearch,\r\n      handleReset,\r\n      handlePageChange,\r\n      handleSizeChange,\r\n      handleSelectionChange,\r\n      handleView,\r\n      handleEdit,\r\n      handleDelete,\r\n      handleLicense,\r\n      handleHistory,\r\n      handleBatchDelete,\r\n      handleBatchExport,\r\n      handleExport,\r\n      showAddDialog,\r\n      showImportDialog,\r\n      showScanConfig,\r\n      exportData,\r\n      handleLicenseCancel,\r\n      handleLicenseConfirm,\r\n      loadLicenseHistory,\r\n      loadVersionHistory,\r\n      handleFormSuccess,\r\n      handleImportSuccess,\r\n      getSoftwareTypeText,\r\n      \r\n      // 组件引用\r\n      softwareTableRef,\r\n      monitoringActionsRef\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.software-asset-list-container {\r\n  min-height: 100vh;\r\n}\r\n\r\n.ant-table-wrapper {\r\n  background: white;\r\n  border-radius: 6px;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.search-form {\r\n  background: white;\r\n  padding: 24px;\r\n  border-radius: 6px;\r\n  margin-bottom: 16px;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.batch-actions {\r\n  margin-bottom: 16px;\r\n}\r\n\r\n.statistics-cards {\r\n  display: flex;\r\n  gap: 16px;\r\n  margin-bottom: 16px;\r\n}\r\n\r\n.history-section {\r\n  margin-bottom: 16px;\r\n}\r\n\r\n.history-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 16px;\r\n}\r\n\r\n.history-header h4 {\r\n  margin: 0;\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n}\r\n\r\n/* 表格样式 */\r\n:deep(.ant-table) {\r\n  border-radius: 0;\r\n}\r\n\r\n:deep(.ant-table-thead > tr > th) {\r\n  background-color: #f9fafb;\r\n  color: #374151;\r\n  font-weight: 500;\r\n  border-bottom: 1px solid #e5e7eb;\r\n}\r\n\r\n:deep(.ant-table-tbody > tr:hover > td) {\r\n  background-color: #f9fafb;\r\n}\r\n\r\n:deep(.ant-table-tbody > tr > td) {\r\n  border-bottom: 1px solid #f3f4f6;\r\n}\r\n\r\n/* 按钮样式 */\r\n:deep(.ant-btn) {\r\n  border-radius: 6px;\r\n  font-weight: 500;\r\n}\r\n\r\n:deep(.ant-btn-primary) {\r\n  background-color: #3b82f6;\r\n  border-color: #3b82f6;\r\n}\r\n\r\n:deep(.ant-btn-primary:hover) {\r\n  background-color: #2563eb;\r\n  border-color: #2563eb;\r\n}\r\n\r\n:deep(.ant-btn-danger) {\r\n  background-color: #ef4444;\r\n  border-color: #ef4444;\r\n}\r\n\r\n:deep(.ant-btn-danger:hover) {\r\n  background-color: #dc2626;\r\n  border-color: #dc2626;\r\n}\r\n\r\n/* 标签样式 */\r\n:deep(.ant-tag) {\r\n  border-radius: 4px;\r\n  font-weight: 500;\r\n}\r\n\r\n/* 表单样式 */\r\n:deep(.ant-form-item-label > label) {\r\n  font-weight: 500;\r\n  color: #374151;\r\n}\r\n\r\n/* 对话框样式 */\r\n:deep(.ant-modal) {\r\n  border-radius: 8px;\r\n}\r\n\r\n:deep(.ant-modal-header) {\r\n  border-bottom: 1px solid #e5e7eb;\r\n}\r\n\r\n:deep(.ant-modal-title) {\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  color: #1f2937;\r\n}\r\n\r\n:deep(.ant-modal-body) {\r\n  padding: 24px;\r\n}\r\n\r\n:deep(.ant-modal-footer) {\r\n  border-top: 1px solid #e5e7eb;\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 768px) {\r\n  .software-asset-list {\r\n    padding: 16px;\r\n  }\r\n  \r\n  .page-header {\r\n    flex-direction: column;\r\n    gap: 16px;\r\n    align-items: stretch;\r\n  }\r\n  \r\n  .header-actions {\r\n    justify-content: center;\r\n  }\r\n  \r\n  .search-section {\r\n    padding: 16px;\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}