{"ast":null,"code":"/**\r\n * ResizeObserver 错误处理工具\r\n * 用于处理 \"ResizeObserver loop completed with undelivered notifications\" 错误\r\n */\n\n/**\r\n * 捕获并忽略 ResizeObserver 错误\r\n * 这是一个已知的无害错误，通常在复杂布局或动态内容更新时发生\r\n */\nexport const suppressResizeObserverError = () => {\n  // 保存原始的错误处理函数\n  const originalErrorHandler = window.onerror;\n  const originalUnhandledRejection = window.onunhandledrejection;\n\n  // 重写全局错误处理\n  window.onerror = function (message, source, lineno, colno, error) {\n    // 检查是否是 ResizeObserver 错误\n    if (message && typeof message === 'string' && message.includes('ResizeObserver loop completed with undelivered notifications')) {\n      // 忽略这个错误，不显示在控制台\n      return true;\n    }\n\n    // 其他错误正常处理\n    if (originalErrorHandler) {\n      return originalErrorHandler.call(this, message, source, lineno, colno, error);\n    }\n    return false;\n  };\n\n  // 处理未捕获的Promise错误\n  window.onunhandledrejection = function (event) {\n    if (event.reason && event.reason.message && event.reason.message.includes('ResizeObserver loop completed with undelivered notifications')) {\n      // 忽略这个错误\n      event.preventDefault();\n      return;\n    }\n\n    // 其他错误正常处理\n    if (originalUnhandledRejection) {\n      return originalUnhandledRejection.call(this, event);\n    }\n  };\n};\n\n/**\r\n * 创建一个防抖的 ResizeObserver\r\n * 用于避免频繁的resize事件触发\r\n */\nexport const createDebouncedResizeObserver = (callback, delay = 100) => {\n  let timeoutId = null;\n  return new ResizeObserver(entries => {\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n    }\n    timeoutId = setTimeout(() => {\n      try {\n        callback(entries);\n      } catch (error) {\n        // 静默处理 ResizeObserver 相关错误\n        if (!error.message || !error.message.includes('ResizeObserver')) {\n          console.error('ResizeObserver callback error:', error);\n        }\n      }\n    }, delay);\n  });\n};\n\n/**\r\n * 安全的元素观察器\r\n * 提供错误保护的元素尺寸监听\r\n */\nexport class SafeResizeObserver {\n  constructor(callback, options = {}) {\n    this.callback = callback;\n    this.debounceDelay = options.debounceDelay || 100;\n    this.observer = null;\n    this.timeoutId = null;\n    this.createObserver();\n  }\n  createObserver() {\n    try {\n      this.observer = new ResizeObserver(entries => {\n        this.handleResize(entries);\n      });\n    } catch (error) {\n      console.warn('Failed to create ResizeObserver:', error);\n    }\n  }\n  handleResize(entries) {\n    if (this.timeoutId) {\n      clearTimeout(this.timeoutId);\n    }\n    this.timeoutId = setTimeout(() => {\n      try {\n        this.callback(entries);\n      } catch (error) {\n        // 静默处理错误，避免控制台报错\n        if (process.env.NODE_ENV === 'development') {\n          console.debug('ResizeObserver callback handled error:', error.message);\n        }\n      }\n    }, this.debounceDelay);\n  }\n  observe(element) {\n    if (this.observer && element) {\n      try {\n        this.observer.observe(element);\n      } catch (error) {\n        console.warn('Failed to observe element:', error);\n      }\n    }\n  }\n  unobserve(element) {\n    if (this.observer && element) {\n      try {\n        this.observer.unobserve(element);\n      } catch (error) {\n        console.warn('Failed to unobserve element:', error);\n      }\n    }\n  }\n  disconnect() {\n    if (this.timeoutId) {\n      clearTimeout(this.timeoutId);\n      this.timeoutId = null;\n    }\n    if (this.observer) {\n      try {\n        this.observer.disconnect();\n      } catch (error) {\n        console.warn('Failed to disconnect ResizeObserver:', error);\n      }\n      this.observer = null;\n    }\n  }\n}\nexport default {\n  suppressResizeObserverError,\n  createDebouncedResizeObserver,\n  SafeResizeObserver\n};","map":{"version":3,"names":["suppressResizeObserverError","originalErrorHandler","window","onerror","originalUnhandledRejection","onunhandledrejection","message","source","lineno","colno","error","includes","call","event","reason","preventDefault","createDebouncedResizeObserver","callback","delay","timeoutId","ResizeObserver","entries","clearTimeout","setTimeout","console","SafeResizeObserver","constructor","options","debounceDelay","observer","createObserver","handleResize","warn","process","env","NODE_ENV","debug","observe","element","unobserve","disconnect"],"sources":["E:/A_project/yuanchi/AIops/frontend/src/utils/errorHandler.js"],"sourcesContent":["/**\r\n * ResizeObserver 错误处理工具\r\n * 用于处理 \"ResizeObserver loop completed with undelivered notifications\" 错误\r\n */\r\n\r\n/**\r\n * 捕获并忽略 ResizeObserver 错误\r\n * 这是一个已知的无害错误，通常在复杂布局或动态内容更新时发生\r\n */\r\nexport const suppressResizeObserverError = () => {\r\n  // 保存原始的错误处理函数\r\n  const originalErrorHandler = window.onerror;\r\n  const originalUnhandledRejection = window.onunhandledrejection;\r\n\r\n  // 重写全局错误处理\r\n  window.onerror = function(message, source, lineno, colno, error) {\r\n    // 检查是否是 ResizeObserver 错误\r\n    if (\r\n      message && \r\n      typeof message === 'string' && \r\n      message.includes('ResizeObserver loop completed with undelivered notifications')\r\n    ) {\r\n      // 忽略这个错误，不显示在控制台\r\n      return true;\r\n    }\r\n    \r\n    // 其他错误正常处理\r\n    if (originalErrorHandler) {\r\n      return originalErrorHandler.call(this, message, source, lineno, colno, error);\r\n    }\r\n    \r\n    return false;\r\n  };\r\n\r\n  // 处理未捕获的Promise错误\r\n  window.onunhandledrejection = function(event) {\r\n    if (\r\n      event.reason && \r\n      event.reason.message && \r\n      event.reason.message.includes('ResizeObserver loop completed with undelivered notifications')\r\n    ) {\r\n      // 忽略这个错误\r\n      event.preventDefault();\r\n      return;\r\n    }\r\n    \r\n    // 其他错误正常处理\r\n    if (originalUnhandledRejection) {\r\n      return originalUnhandledRejection.call(this, event);\r\n    }\r\n  };\r\n};\r\n\r\n/**\r\n * 创建一个防抖的 ResizeObserver\r\n * 用于避免频繁的resize事件触发\r\n */\r\nexport const createDebouncedResizeObserver = (callback, delay = 100) => {\r\n  let timeoutId = null;\r\n  \r\n  return new ResizeObserver((entries) => {\r\n    if (timeoutId) {\r\n      clearTimeout(timeoutId);\r\n    }\r\n    \r\n    timeoutId = setTimeout(() => {\r\n      try {\r\n        callback(entries);\r\n      } catch (error) {\r\n        // 静默处理 ResizeObserver 相关错误\r\n        if (!error.message || !error.message.includes('ResizeObserver')) {\r\n          console.error('ResizeObserver callback error:', error);\r\n        }\r\n      }\r\n    }, delay);\r\n  });\r\n};\r\n\r\n/**\r\n * 安全的元素观察器\r\n * 提供错误保护的元素尺寸监听\r\n */\r\nexport class SafeResizeObserver {\r\n  constructor(callback, options = {}) {\r\n    this.callback = callback;\r\n    this.debounceDelay = options.debounceDelay || 100;\r\n    this.observer = null;\r\n    this.timeoutId = null;\r\n    \r\n    this.createObserver();\r\n  }\r\n  \r\n  createObserver() {\r\n    try {\r\n      this.observer = new ResizeObserver((entries) => {\r\n        this.handleResize(entries);\r\n      });\r\n    } catch (error) {\r\n      console.warn('Failed to create ResizeObserver:', error);\r\n    }\r\n  }\r\n  \r\n  handleResize(entries) {\r\n    if (this.timeoutId) {\r\n      clearTimeout(this.timeoutId);\r\n    }\r\n    \r\n    this.timeoutId = setTimeout(() => {\r\n      try {\r\n        this.callback(entries);\r\n      } catch (error) {\r\n        // 静默处理错误，避免控制台报错\r\n        if (process.env.NODE_ENV === 'development') {\r\n          console.debug('ResizeObserver callback handled error:', error.message);\r\n        }\r\n      }\r\n    }, this.debounceDelay);\r\n  }\r\n  \r\n  observe(element) {\r\n    if (this.observer && element) {\r\n      try {\r\n        this.observer.observe(element);\r\n      } catch (error) {\r\n        console.warn('Failed to observe element:', error);\r\n      }\r\n    }\r\n  }\r\n  \r\n  unobserve(element) {\r\n    if (this.observer && element) {\r\n      try {\r\n        this.observer.unobserve(element);\r\n      } catch (error) {\r\n        console.warn('Failed to unobserve element:', error);\r\n      }\r\n    }\r\n  }\r\n  \r\n  disconnect() {\r\n    if (this.timeoutId) {\r\n      clearTimeout(this.timeoutId);\r\n      this.timeoutId = null;\r\n    }\r\n    \r\n    if (this.observer) {\r\n      try {\r\n        this.observer.disconnect();\r\n      } catch (error) {\r\n        console.warn('Failed to disconnect ResizeObserver:', error);\r\n      }\r\n      this.observer = null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default {\r\n  suppressResizeObserverError,\r\n  createDebouncedResizeObserver,\r\n  SafeResizeObserver\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}