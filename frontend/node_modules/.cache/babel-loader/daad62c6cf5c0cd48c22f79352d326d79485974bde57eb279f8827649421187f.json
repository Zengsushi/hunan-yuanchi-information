{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveDynamicComponent as _resolveDynamicComponent, createBlock as _createBlock, normalizeClass as _normalizeClass, vShow as _vShow, withDirectives as _withDirectives, Transition as _Transition } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"template-drawer-content\"\n};\nconst _hoisted_2 = {\n  class: \"template-search-section\"\n};\nconst _hoisted_3 = {\n  class: \"search-bar\"\n};\nconst _hoisted_4 = {\n  class: \"category-filter\"\n};\nconst _hoisted_5 = {\n  class: \"category-count\"\n};\nconst _hoisted_6 = {\n  key: 0,\n  class: \"category-selected\"\n};\nconst _hoisted_7 = {\n  class: \"template-list\"\n};\nconst _hoisted_8 = {\n  key: 0,\n  class: \"empty-templates\"\n};\nconst _hoisted_9 = {\n  key: 1\n};\nconst _hoisted_10 = {\n  key: 0,\n  class: \"selected-templates-info\"\n};\nconst _hoisted_11 = {\n  class: \"category-header\"\n};\nconst _hoisted_12 = {\n  class: \"category-title-wrapper\"\n};\nconst _hoisted_13 = {\n  class: \"category-title\"\n};\nconst _hoisted_14 = {\n  class: \"category-stats\"\n};\nconst _hoisted_15 = {\n  class: \"template-grid-wrapper\"\n};\nconst _hoisted_16 = {\n  class: \"template-grid\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_a_button = _resolveComponent(\"a-button\");\n  const _component_a_space = _resolveComponent(\"a-space\");\n  const _component_a_input_search = _resolveComponent(\"a-input-search\");\n  const _component_a_tag = _resolveComponent(\"a-tag\");\n  const _component_a_empty = _resolveComponent(\"a-empty\");\n  const _component_a_alert = _resolveComponent(\"a-alert\");\n  const _component_a_badge = _resolveComponent(\"a-badge\");\n  const _component_a_spin = _resolveComponent(\"a-spin\");\n  const _component_a_drawer = _resolveComponent(\"a-drawer\");\n  return _openBlock(), _createBlock(_component_a_drawer, {\n    open: $props.visible,\n    title: \"选择监控模板\",\n    width: \"1200\",\n    placement: \"right\",\n    onClose: $setup.handleClose,\n    \"onUpdate:open\": _cache[2] || (_cache[2] = $event => _ctx.$emit('update:visible', $event))\n  }, {\n    extra: _withCtx(() => [_createVNode(_component_a_space, null, {\n      default: _withCtx(() => [_createVNode(_component_a_button, {\n        onClick: $setup.handleClose\n      }, {\n        default: _withCtx(() => [...(_cache[3] || (_cache[3] = [_createTextVNode(\"取消\", -1 /* CACHED */)]))]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_a_button, {\n        type: \"primary\",\n        onClick: $setup.handleCreateMonitoring,\n        loading: $setup.monitoringCreating,\n        disabled: $setup.selectedTemplateIds.length === 0\n      }, {\n        default: _withCtx(() => [_createTextVNode(\" 启用监控 (\" + _toDisplayString($setup.selectedTemplateIds.length) + \") \", 1 /* TEXT */)]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"loading\", \"disabled\"])]),\n      _: 1 /* STABLE */\n    })]),\n    default: _withCtx(() => [$props.selectedIP ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 模板搜索和筛选 \"), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_a_input_search, {\n      value: $setup.templateSearchKeyword,\n      \"onUpdate:value\": _cache[0] || (_cache[0] = $event => $setup.templateSearchKeyword = $event),\n      placeholder: \"搜索模板名称...\",\n      onSearch: $setup.handleTemplateSearch,\n      onPressEnter: $setup.handleTemplateSearch,\n      \"allow-clear\": \"\",\n      size: \"large\"\n    }, null, 8 /* PROPS */, [\"value\"])]), _createCommentVNode(\" 分类筛选 \"), _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_a_space, {\n      wrap: \"\"\n    }, {\n      default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.categoryStats, (stats, category) => {\n        return _openBlock(), _createBlock(_component_a_tag, {\n          key: $setup.safeCategoryToString(category),\n          color: $setup.selectedCategory === $setup.safeCategoryToString(category) ? 'blue' : 'default',\n          class: _normalizeClass([{\n            'category-tag-selected': $setup.selectedCategory === $setup.safeCategoryToString(category)\n          }, \"category-filter-tag\"]),\n          onClick: $event => $setup.toggleCategoryFilter(category)\n        }, {\n          default: _withCtx(() => [(_openBlock(), _createBlock(_resolveDynamicComponent($setup.getCategoryIcon(category)), {\n            class: \"category-filter-icon\"\n          })), _createTextVNode(\" \" + _toDisplayString($setup.safeCategoryToString(category).replace(/^\\S+ /, '')) + \" \", 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_5, \"(\" + _toDisplayString(Number(stats?.count) || 0) + \")\", 1 /* TEXT */), Number(stats?.selected) > 0 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_6, \"✓\" + _toDisplayString(Number(stats.selected)), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"color\", \"class\", \"onClick\"]);\n      }), 128 /* KEYED_FRAGMENT */)), $setup.selectedCategory ? (_openBlock(), _createBlock(_component_a_tag, {\n        key: 0,\n        color: \"red\",\n        onClick: $setup.clearCategoryFilter,\n        class: \"clear-filter-tag\"\n      }, {\n        default: _withCtx(() => [...(_cache[4] || (_cache[4] = [_createTextVNode(\" 清除筛选 \", -1 /* CACHED */)]))]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true)]),\n      _: 1 /* STABLE */\n    })])]), _createCommentVNode(\" 模板列表 \"), _createElementVNode(\"div\", _hoisted_7, [_createVNode(_component_a_spin, {\n      spinning: $setup.templateLoading,\n      tip: \"正在加载模板...\"\n    }, {\n      default: _withCtx(() => [Object.keys($setup.groupedTemplates).length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_createVNode(_component_a_empty, {\n        description: \"暂无可用模板\"\n      })])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [_createCommentVNode(\" 已选模板提示 \"), $setup.selectedTemplateIds.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [_createVNode(_component_a_alert, {\n        message: `已选择 ${$setup.selectedTemplateIds.length} 个模板`,\n        type: \"info\",\n        \"show-icon\": \"\",\n        closable: \"\",\n        onClose: _cache[1] || (_cache[1] = $event => $setup.selectedTemplateIds = [])\n      }, null, 8 /* PROPS */, [\"message\"])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 按分类展示模板 \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.filteredTemplates, (templates, category) => {\n        return _openBlock(), _createElementBlock(\"div\", {\n          key: category,\n          class: \"template-category\"\n        }, [_createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"div\", _hoisted_12, [(_openBlock(), _createBlock(_resolveDynamicComponent($setup.getCategoryIcon(category)), {\n          class: \"category-icon\"\n        })), _createElementVNode(\"h4\", _hoisted_13, _toDisplayString($setup.safeCategoryToString(category)), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_14, [_createVNode(_component_a_badge, {\n          count: Number($setup.categoryStats[$setup.safeCategoryToString(category)]?.count) || 0,\n          \"number-style\": {\n            backgroundColor: '#f0f0f0',\n            color: '#666'\n          }\n        }, null, 8 /* PROPS */, [\"count\"]), Number($setup.categoryStats[$setup.safeCategoryToString(category)]?.selected) > 0 ? (_openBlock(), _createBlock(_component_a_badge, {\n          key: 0,\n          count: Number($setup.categoryStats[$setup.safeCategoryToString(category)]?.selected),\n          \"number-style\": {\n            backgroundColor: '#1890ff',\n            color: '#fff'\n          },\n          class: \"selected-badge\"\n        }, null, 8 /* PROPS */, [\"count\"])) : _createCommentVNode(\"v-if\", true)])]), Number($setup.categoryStats[$setup.safeCategoryToString(category)]?.count) > 0 ? (_openBlock(), _createBlock(_component_a_button, {\n          key: 0,\n          type: \"text\",\n          size: \"small\",\n          onClick: $event => $setup.toggleCategoryExpand(category),\n          class: \"expand-button\"\n        }, {\n          default: _withCtx(() => [$setup.isCategoryExpanded(category) ? (_openBlock(), _createBlock($setup[\"UpOutlined\"], {\n            key: 0\n          })) : (_openBlock(), _createBlock($setup[\"DownOutlined\"], {\n            key: 1\n          }))]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true)]), _createVNode(_Transition, {\n          name: \"collapse\",\n          persisted: \"\"\n        }, {\n          default: _withCtx(() => [_withDirectives(_createElementVNode(\"div\", _hoisted_15, [_createElementVNode(\"div\", _hoisted_16, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(templates, template => {\n            return _openBlock(), _createBlock($setup[\"TemplateCard\"], {\n              key: template.templateid,\n              template: template,\n              selected: $setup.selectedTemplateIds.includes(template.templateid),\n              onSelect: $setup.handleTemplateSelect\n            }, null, 8 /* PROPS */, [\"template\", \"selected\"]);\n          }), 128 /* KEYED_FRAGMENT */))])], 512 /* NEED_PATCH */), [[_vShow, $setup.isCategoryExpanded(category)]])]),\n          _: 2 /* DYNAMIC */\n        }, 1024 /* DYNAMIC_SLOTS */)]);\n      }), 128 /* KEYED_FRAGMENT */))]))]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"spinning\"])])])) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"open\"]);\n}","map":{"version":3,"names":["class","_createBlock","_component_a_drawer","open","$props","visible","title","width","placement","onClose","$setup","handleClose","_cache","$event","_ctx","$emit","extra","_withCtx","_createVNode","_component_a_space","_component_a_button","onClick","type","handleCreateMonitoring","loading","monitoringCreating","disabled","selectedTemplateIds","length","_toDisplayString","selectedIP","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","_hoisted_3","_component_a_input_search","value","templateSearchKeyword","placeholder","onSearch","handleTemplateSearch","onPressEnter","size","_hoisted_4","wrap","_Fragment","_renderList","categoryStats","stats","category","_component_a_tag","key","safeCategoryToString","color","selectedCategory","_normalizeClass","toggleCategoryFilter","_resolveDynamicComponent","getCategoryIcon","replace","_hoisted_5","Number","count","selected","_hoisted_6","clearCategoryFilter","_hoisted_7","_component_a_spin","spinning","templateLoading","tip","Object","keys","groupedTemplates","_hoisted_8","_component_a_empty","description","_hoisted_9","_hoisted_10","_component_a_alert","message","closable","filteredTemplates","templates","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_component_a_badge","backgroundColor","toggleCategoryExpand","isCategoryExpanded","_Transition","name","persisted","_hoisted_15","_hoisted_16","template","templateid","includes","onSelect","handleTemplateSelect"],"sources":["E:\\A_project\\yuanchi\\AIops\\frontend\\src\\components\\business\\TemplateDrawer.vue"],"sourcesContent":["<template>\r\n  <a-drawer\r\n    :open=\"visible\"\r\n    title=\"选择监控模板\"\r\n    width=\"1200\"\r\n    placement=\"right\"\r\n    :onClose=\"handleClose\"\r\n    @update:open=\"$emit('update:visible', $event)\"\r\n  >\r\n    <template #extra>\r\n      <a-space>\r\n        <a-button @click=\"handleClose\">取消</a-button>\r\n        <a-button \r\n          type=\"primary\" \r\n          @click=\"handleCreateMonitoring\"\r\n          :loading=\"monitoringCreating\"\r\n          :disabled=\"selectedTemplateIds.length === 0\"\r\n        >\r\n          启用监控 ({{ selectedTemplateIds.length }})\r\n        </a-button>\r\n      </a-space>\r\n    </template>\r\n\r\n    <div v-if=\"selectedIP\" class=\"template-drawer-content\">\r\n      <!-- 模板搜索和筛选 -->\r\n      <div class=\"template-search-section\">\r\n        <div class=\"search-bar\">\r\n          <a-input-search\r\n            v-model:value=\"templateSearchKeyword\"\r\n            placeholder=\"搜索模板名称...\"\r\n            @search=\"handleTemplateSearch\"\r\n            @pressEnter=\"handleTemplateSearch\"\r\n            allow-clear\r\n            size=\"large\"\r\n          />\r\n        </div>\r\n        \r\n        <!-- 分类筛选 -->\r\n        <div class=\"category-filter\">\r\n          <a-space wrap>\r\n            <a-tag\r\n              v-for=\"(stats, category) in categoryStats\"\r\n              :key=\"safeCategoryToString(category)\"\r\n              :color=\"selectedCategory === safeCategoryToString(category) ? 'blue' : 'default'\"\r\n              :class=\"{ 'category-tag-selected': selectedCategory === safeCategoryToString(category) }\"\r\n              @click=\"toggleCategoryFilter(category)\"\r\n              class=\"category-filter-tag\"\r\n            >\r\n              <component :is=\"getCategoryIcon(category)\" class=\"category-filter-icon\" />\r\n              {{ safeCategoryToString(category).replace(/^\\S+ /, '') }}\r\n              <span class=\"category-count\">({{ Number(stats?.count) || 0 }})</span>\r\n              <span v-if=\"Number(stats?.selected) > 0\" class=\"category-selected\">✓{{ Number(stats.selected) }}</span>\r\n            </a-tag>\r\n            <a-tag \r\n              v-if=\"selectedCategory\"\r\n              color=\"red\"\r\n              @click=\"clearCategoryFilter\"\r\n              class=\"clear-filter-tag\"\r\n            >\r\n              清除筛选\r\n            </a-tag>\r\n          </a-space>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 模板列表 -->\r\n      <div class=\"template-list\">\r\n        <a-spin :spinning=\"templateLoading\" tip=\"正在加载模板...\">\r\n          <div v-if=\"Object.keys(groupedTemplates).length === 0\" class=\"empty-templates\">\r\n            <a-empty description=\"暂无可用模板\" />\r\n          </div>\r\n          \r\n          <div v-else>\r\n            <!-- 已选模板提示 -->\r\n            <div v-if=\"selectedTemplateIds.length > 0\" class=\"selected-templates-info\">\r\n              <a-alert\r\n                :message=\"`已选择 ${selectedTemplateIds.length} 个模板`\"\r\n                type=\"info\"\r\n                show-icon\r\n                closable\r\n                @close=\"selectedTemplateIds = []\"\r\n              />\r\n            </div>\r\n\r\n            <!-- 按分类展示模板 -->\r\n            <div \r\n              v-for=\"(templates, category) in filteredTemplates\" \r\n              :key=\"category\" \r\n              class=\"template-category\"\r\n            >\r\n              <div class=\"category-header\">\r\n                <div class=\"category-title-wrapper\">\r\n                  <component :is=\"getCategoryIcon(category)\" class=\"category-icon\" />\r\n                  <h4 class=\"category-title\">{{ safeCategoryToString(category) }}</h4>\r\n                  <div class=\"category-stats\">\r\n                    <a-badge \r\n                      :count=\"Number(categoryStats[safeCategoryToString(category)]?.count) || 0\" \r\n                      :number-style=\"{ backgroundColor: '#f0f0f0', color: '#666' }\"\r\n                    />\r\n                    <a-badge \r\n                      v-if=\"Number(categoryStats[safeCategoryToString(category)]?.selected) > 0\"\r\n                      :count=\"Number(categoryStats[safeCategoryToString(category)]?.selected)\" \r\n                      :number-style=\"{ backgroundColor: '#1890ff', color: '#fff' }\"\r\n                      class=\"selected-badge\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <a-button\r\n                  v-if=\"Number(categoryStats[safeCategoryToString(category)]?.count) > 0\"\r\n                  type=\"text\"\r\n                  size=\"small\"\r\n                  @click=\"toggleCategoryExpand(category)\"\r\n                  class=\"expand-button\"\r\n                >\r\n                  <UpOutlined v-if=\"isCategoryExpanded(category)\" />\r\n                  <DownOutlined v-else />\r\n                </a-button>\r\n              </div>\r\n              <transition name=\"collapse\">\r\n                <div class=\"template-grid-wrapper\" v-show=\"isCategoryExpanded(category)\">\r\n                  <div class=\"template-grid\">\r\n                    <TemplateCard\r\n                      v-for=\"template in templates\" \r\n                      :key=\"template.templateid\"\r\n                      :template=\"template\"\r\n                      :selected=\"selectedTemplateIds.includes(template.templateid)\"\r\n                      @select=\"handleTemplateSelect\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </transition>\r\n            </div>\r\n          </div>\r\n        </a-spin>\r\n      </div>\r\n    </div>\r\n  </a-drawer>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, computed, watch, nextTick, h } from 'vue';\r\nimport { message, Modal } from 'ant-design-vue';\r\nimport { ipAPI } from '@/api';\r\nimport TemplateCard from './TemplateCard.vue';\r\nimport {\r\n  UpOutlined,\r\n  DownOutlined,\r\n  DatabaseOutlined,\r\n  CloudOutlined,\r\n  SettingOutlined,\r\n  MonitorOutlined,\r\n  SecurityScanOutlined,\r\n  AppstoreOutlined\r\n} from '@ant-design/icons-vue';\r\n\r\n// Props\r\nconst props = defineProps({\r\n  visible: {\r\n    type: Boolean,\r\n    default: false\r\n  },\r\n  selectedIP: {\r\n    type: Object,\r\n    default: null\r\n  }\r\n});\r\n\r\n// Emits\r\nconst emit = defineEmits(['update:visible', 'monitoring-created']);\r\n\r\n// 响应式数据\r\nconst zabbixTemplates = ref([]);\r\nconst selectedTemplateIds = ref([]);\r\nconst templateLoading = ref(false);\r\nconst templateSearchKeyword = ref('');\r\nconst monitoringCreating = ref(false);\r\nconst selectedCategory = ref('');\r\nconst expandedCategories = ref({});\r\n\r\n// 计算属性\r\nconst groupedTemplates = computed(() => {\r\n  if (!Array.isArray(zabbixTemplates.value)) {\r\n    return {};\r\n  }\r\n  \r\n  const grouped = {};\r\n  zabbixTemplates.value.forEach(template => {\r\n    const category = template.category || '其他';\r\n    if (!grouped[category]) {\r\n      grouped[category] = [];\r\n    }\r\n    grouped[category].push(template);\r\n  });\r\n  \r\n  return grouped;\r\n});\r\n\r\nconst filteredTemplates = computed(() => {\r\n  let filtered = { ...groupedTemplates.value };\r\n  \r\n  // 分类筛选\r\n  if (selectedCategory.value) {\r\n    const categoryKey = selectedCategory.value;\r\n    filtered = {\r\n      [categoryKey]: filtered[categoryKey] || []\r\n    };\r\n  }\r\n  \r\n  // 搜索筛选\r\n  if (templateSearchKeyword.value) {\r\n    const keyword = templateSearchKeyword.value.toLowerCase();\r\n    Object.keys(filtered).forEach(category => {\r\n      filtered[category] = filtered[category].filter(template => \r\n        template.name.toLowerCase().includes(keyword)\r\n      );\r\n      if (filtered[category].length === 0) {\r\n        delete filtered[category];\r\n      }\r\n    });\r\n  }\r\n  \r\n  return filtered;\r\n});\r\n\r\nconst categoryStats = computed(() => {\r\n  const stats = {};\r\n  \r\n  Object.keys(groupedTemplates.value).forEach(category => {\r\n    const templates = groupedTemplates.value[category];\r\n    const selectedCount = templates.filter(t => \r\n      selectedTemplateIds.value.includes(t.templateid)\r\n    ).length;\r\n    \r\n    stats[category] = {\r\n      count: templates.length,\r\n      selected: selectedCount\r\n    };\r\n  });\r\n  \r\n  return stats;\r\n});\r\n\r\n// 方法\r\nconst safeCategoryToString = (category) => {\r\n  if (category === null || category === undefined) {\r\n    return '其他';\r\n  }\r\n  return String(category);\r\n};\r\n\r\nconst getCategoryIcon = (category) => {\r\n  const categoryStr = safeCategoryToString(category).toLowerCase();\r\n  \r\n  if (categoryStr.includes('database') || categoryStr.includes('数据库')) {\r\n    return DatabaseOutlined;\r\n  } else if (categoryStr.includes('network') || categoryStr.includes('网络')) {\r\n    return CloudOutlined;\r\n  } else if (categoryStr.includes('system') || categoryStr.includes('系统')) {\r\n    return SettingOutlined;\r\n  } else if (categoryStr.includes('application') || categoryStr.includes('应用')) {\r\n    return AppstoreOutlined;\r\n  } else if (categoryStr.includes('security') || categoryStr.includes('安全')) {\r\n    return SecurityScanOutlined;\r\n  }\r\n  \r\n  return MonitorOutlined;\r\n};\r\n\r\nconst toggleCategoryFilter = (category) => {\r\n  const categoryStr = safeCategoryToString(category);\r\n  if (selectedCategory.value === categoryStr) {\r\n    selectedCategory.value = '';\r\n  } else {\r\n    selectedCategory.value = categoryStr;\r\n  }\r\n};\r\n\r\nconst clearCategoryFilter = () => {\r\n  selectedCategory.value = '';\r\n};\r\n\r\nconst toggleCategoryExpand = (category) => {\r\n  const categoryStr = safeCategoryToString(category);\r\n  expandedCategories.value[categoryStr] = !expandedCategories.value[categoryStr];\r\n};\r\n\r\nconst isCategoryExpanded = (category) => {\r\n  const categoryStr = safeCategoryToString(category);\r\n  return expandedCategories.value[categoryStr] !== false;\r\n};\r\n\r\nconst handleTemplateSelect = (templateId, checked) => {\r\n  if (checked) {\r\n    if (!selectedTemplateIds.value.includes(templateId)) {\r\n      selectedTemplateIds.value.push(templateId);\r\n    }\r\n  } else {\r\n    const index = selectedTemplateIds.value.indexOf(templateId);\r\n    if (index > -1) {\r\n      selectedTemplateIds.value.splice(index, 1);\r\n    }\r\n  }\r\n};\r\n\r\nconst handleTemplateSearch = async () => {\r\n  if (props.selectedIP) {\r\n    await loadZabbixTemplates(props.selectedIP.id);\r\n  }\r\n};\r\n\r\nconst loadZabbixTemplates = async (ipId) => {\r\n  templateLoading.value = true;\r\n  try {\r\n    const response = await ipAPI.getZabbixTemplates(ipId, templateSearchKeyword.value);\r\n    \r\n    if (response.data && response.data.code === 200) {\r\n      zabbixTemplates.value = response.data.data.templates || [];\r\n      \r\n      // 初始化展开状态，默认展开所有分类\r\n      nextTick(() => {\r\n        try {\r\n          const categories = Object.keys(groupedTemplates.value || {});\r\n          categories.forEach(category => {\r\n            const categoryStr = String(category);\r\n            expandedCategories.value[categoryStr] = true;\r\n          });\r\n        } catch (error) {\r\n          console.warn('初始化展开状态错误:', error);\r\n        }\r\n      });\r\n      \r\n      console.log('成功加载模板列表:', zabbixTemplates.value.length, '个模板');\r\n    } else {\r\n      // 检查是否是Zabbix连接问题\r\n      if (response.data && response.data.message && response.data.message.includes('Zabbix API连接不可用')) {\r\n        // 显示详细的诊断信息\r\n        const errorMessage = '⚠️ Zabbix服务器连接失败';\r\n        const suggestions = [\r\n          '请检查Zabbix服务器是否正常运行',\r\n          '验证网络连接和防火墙设置',\r\n          '检查Zabbix API配置是否正确'\r\n        ];\r\n        \r\n        Modal.error({\r\n          title: '无法加载监控模板',\r\n          content: h('div', [\r\n            h('p', { style: 'margin-bottom: 16px;' }, errorMessage),\r\n            h('div', { style: 'background: #f5f5f5; padding: 12px; border-radius: 6px;' }, [\r\n              h('p', { style: 'margin: 0 0 8px 0; font-weight: 600;' }, '解决建议：'),\r\n              h('ul', { style: 'margin: 0; padding-left: 20px;' }, \r\n                suggestions.map(suggestion => \r\n                  h('li', { style: 'margin-bottom: 4px;' }, suggestion)\r\n                )\r\n              )\r\n            ])\r\n          ]),\r\n          width: 500\r\n        });\r\n      } else {\r\n        message.error(`加载模板列表失败: ${response.data?.message || '未知错误'}`);\r\n      }\r\n      \r\n      zabbixTemplates.value = [];\r\n    }\r\n  } catch (error) {\r\n    console.error('加载模板列表失败:', error);\r\n    \r\n    // 检查是否是网络连接问题\r\n    if (error.message && (error.message.includes('Network Error') || error.message.includes('timeout'))) {\r\n      Modal.error({\r\n        title: '网络连接失败',\r\n        content: '无法连接到后端服务器，请检查网络连接和服务器状态。'\r\n      });\r\n    } else {\r\n      message.error(`加载模板列表失败: ${error.message}`);\r\n    }\r\n    \r\n    zabbixTemplates.value = [];\r\n  } finally {\r\n    templateLoading.value = false;\r\n  }\r\n};\r\n\r\nconst handleCreateMonitoring = async () => {\r\n  if (!props.selectedIP) {\r\n    message.error('请先选择IP地址');\r\n    return;\r\n  }\r\n  \r\n  if (selectedTemplateIds.value.length === 0) {\r\n    message.error('请选择至少一个监控模板');\r\n    return;\r\n  }\r\n  \r\n  monitoringCreating.value = true;\r\n  \r\n  try {\r\n    const monitoringData = {\r\n      template_ids: selectedTemplateIds.value,\r\n      host_name: props.selectedIP.hostname || props.selectedIP.ip_address || props.selectedIP.ipAddress,\r\n      group_ids: [] // 使用默认主机组\r\n    };\r\n    \r\n    const response = await ipAPI.createMonitoring(props.selectedIP.id, monitoringData);\r\n    \r\n    if (response.data && response.data.code === 200) {\r\n      message.success('监控启用成功！');\r\n      emit('monitoring-created', props.selectedIP);\r\n      handleClose();\r\n    } else {\r\n      message.error(`启用监控失败: ${response.data?.message || '未知错误'}`);\r\n    }\r\n  } catch (error) {\r\n    console.error('启用监控失败:', error);\r\n    message.error(`启用监控失败: ${error.message}`);\r\n  } finally {\r\n    monitoringCreating.value = false;\r\n  }\r\n};\r\n\r\nconst handleClose = () => {\r\n  emit('update:visible', false);\r\n  // 清理状态\r\n  selectedTemplateIds.value = [];\r\n  templateSearchKeyword.value = '';\r\n  selectedCategory.value = '';\r\n  expandedCategories.value = {};\r\n};\r\n\r\n// 监听props变化\r\nwatch(() => props.visible, (newVal) => {\r\n  if (newVal && props.selectedIP) {\r\n    loadZabbixTemplates(props.selectedIP.id);\r\n  }\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n/* 简洁抽屉内容 */\r\n.template-drawer-content {\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: #f8fafc;\r\n}\r\n\r\n/* 简洁搜索区域 */\r\n.template-search-section {\r\n  margin-bottom: 24px;\r\n  padding: 20px;\r\n  background: #ffffff;\r\n  border-radius: 8px;\r\n  border: 1px solid #e2e8f0;\r\n}\r\n\r\n.search-bar {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n/* 简洁搜索输入框 */\r\n:deep(.ant-input-search) {\r\n  border-radius: 6px;\r\n}\r\n\r\n:deep(.ant-input-search .ant-input) {\r\n  border-radius: 6px 0 0 6px;\r\n  border: 1px solid #d1d5db;\r\n  background: #ffffff;\r\n  transition: all 0.2s ease;\r\n  height: 40px;\r\n  font-size: 14px;\r\n}\r\n\r\n:deep(.ant-input-search .ant-input:focus) {\r\n  border-color: #2563eb;\r\n  box-shadow: 0 0 0 2px rgba(37, 99, 235, 0.1);\r\n}\r\n\r\n:deep(.ant-input-search .ant-input-search-button) {\r\n  border-radius: 0 6px 6px 0;\r\n  background: #2563eb;\r\n  border: 1px solid #2563eb;\r\n  height: 40px;\r\n  width: 40px;\r\n}\r\n\r\n:deep(.ant-input-search .ant-input-search-button:hover) {\r\n  background: #1d4ed8;\r\n  border-color: #1d4ed8;\r\n}\r\n\r\n/* 简洁分类过滤 */\r\n.category-filter {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 8px;\r\n  align-items: center;\r\n}\r\n\r\n.category-filter-tag {\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  gap: 4px;\r\n  border-radius: 6px;\r\n  padding: 6px 12px;\r\n  font-weight: 500;\r\n  border: 1px solid #d1d5db;\r\n  background: #ffffff;\r\n  user-select: none;\r\n}\r\n\r\n.category-filter-tag:hover {\r\n  border-color: #2563eb;\r\n  color: #2563eb;\r\n}\r\n\r\n.category-tag-selected {\r\n  background: #2563eb !important;\r\n  color: white !important;\r\n  border-color: #2563eb !important;\r\n}\r\n\r\n.category-filter-icon {\r\n  font-size: 12px;\r\n}\r\n\r\n.category-count {\r\n  font-size: 11px;\r\n  opacity: 0.8;\r\n}\r\n\r\n.category-selected {\r\n  font-size: 10px;\r\n  background: #4ecdc4;\r\n  color: white;\r\n  padding: 1px 4px;\r\n  border-radius: 8px;\r\n  margin-left: 2px;\r\n}\r\n\r\n.clear-filter-tag {\r\n  cursor: pointer;\r\n  background: #dc2626 !important;\r\n  color: white !important;\r\n  border-color: #dc2626 !important;\r\n}\r\n\r\n.clear-filter-tag:hover {\r\n  background: #b91c1c !important;\r\n  border-color: #b91c1c !important;\r\n}\r\n\r\n/* 简洁模板列表 */\r\n.template-list {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  padding: 0 20px 20px;\r\n}\r\n\r\n.template-list::-webkit-scrollbar {\r\n  width: 6px;\r\n}\r\n\r\n.template-list::-webkit-scrollbar {\r\n  display: none;\r\n}\r\n\r\n.template-list::-webkit-scrollbar-track {\r\n  display: none;\r\n}\r\n\r\n.template-list::-webkit-scrollbar-thumb {\r\n  display: none;\r\n}\r\n\r\n.template-list::-webkit-scrollbar-thumb:hover {\r\n  display: none;\r\n}\r\n\r\n/* 简洁空状态 */\r\n.empty-templates {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 300px;\r\n  background: #ffffff;\r\n  border-radius: 8px;\r\n  border: 2px dashed #d1d5db;\r\n  color: #6b7280;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n}\r\n\r\n/* 简洁选中信息 */\r\n.selected-templates-info {\r\n  margin-bottom: 16px;\r\n  padding: 12px 16px;\r\n  background: #eff6ff;\r\n  border-radius: 6px;\r\n  border: 1px solid #bfdbfe;\r\n  color: #1e40af;\r\n  font-weight: 500;\r\n}\r\n\r\n/* 简洁模板分类 */\r\n.template-category {\r\n  margin-bottom: 24px;\r\n}\r\n\r\n.category-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 16px 20px;\r\n  background: #ffffff;\r\n  border-radius: 8px;\r\n  margin-bottom: 12px;\r\n  border: 1px solid #e2e8f0;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.category-header:hover {\r\n  border-color: #cbd5e1;\r\n}\r\n\r\n.category-title-wrapper {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n}\r\n\r\n.category-icon {\r\n  font-size: 16px;\r\n  color: #2563eb;\r\n}\r\n\r\n.category-title {\r\n  margin: 0;\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  color: #1f2937;\r\n}\r\n\r\n.category-stats {\r\n  display: flex;\r\n  gap: 12px;\r\n  align-items: center;\r\n}\r\n\r\n.selected-badge {\r\n  margin-left: 8px;\r\n  background: #10b981;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 6px;\r\n  padding: 2px 6px;\r\n  font-size: 11px;\r\n  font-weight: 500;\r\n}\r\n\r\n.expand-button {\r\n  padding: 6px;\r\n  height: auto;\r\n  min-width: auto;\r\n  border-radius: 6px;\r\n  border: 1px solid #d1d5db;\r\n  background: #ffffff;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.expand-button:hover {\r\n  border-color: #2563eb;\r\n  color: #2563eb;\r\n}\r\n\r\n/* 简洁模板网格 */\r\n.template-grid-wrapper {\r\n  overflow: hidden;\r\n  max-width: 100%;\r\n}\r\n\r\n.template-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\r\n  gap: 16px;\r\n  justify-content: start;\r\n}\r\n\r\n/* 折叠动画 */\r\n.collapse-enter-active,\r\n.collapse-leave-active {\r\n  transition: all 0.3s ease;\r\n  max-height: 1000px;\r\n  opacity: 1;\r\n}\r\n\r\n.collapse-enter-from,\r\n.collapse-leave-to {\r\n  max-height: 0;\r\n  opacity: 0;\r\n  transform: translateY(-10px);\r\n}\r\n\r\n/* 简洁模板卡片 */\r\n:deep(.template-card) {\r\n  background: #ffffff;\r\n  border-radius: 8px;\r\n  border: 1px solid #e2e8f0;\r\n  transition: all 0.2s ease;\r\n  overflow: hidden;\r\n}\r\n\r\n:deep(.template-card:hover) {\r\n  border-color: #cbd5e1;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n:deep(.template-card.selected) {\r\n  border-color: #2563eb;\r\n  background: #eff6ff;\r\n  box-shadow: 0 4px 12px rgba(37, 99, 235, 0.15);\r\n}\r\n\r\n:deep(.template-card .ant-card-body) {\r\n  padding: 20px;\r\n}\r\n\r\n:deep(.template-card .ant-card-meta-title) {\r\n  font-weight: 700;\r\n  color: #2d3748;\r\n  font-size: 14px;\r\n}\r\n\r\n:deep(.template-card .ant-card-meta-description) {\r\n  color: #718096;\r\n  font-size: 12px;\r\n  line-height: 1.4;\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 1400px) {\r\n  .template-grid {\r\n    grid-template-columns: repeat(3, 1fr);\r\n    gap: 14px;\r\n  }\r\n}\r\n\r\n@media (max-width: 1200px) {\r\n  .template-grid {\r\n    grid-template-columns: repeat(2, 1fr);\r\n    gap: 12px;\r\n  }\r\n  \r\n  .template-search-section {\r\n    padding: 20px;\r\n  }\r\n  \r\n  .template-list {\r\n    padding: 0 20px 20px;\r\n  }\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .template-grid {\r\n    grid-template-columns: 1fr;\r\n    gap: 12px;\r\n  }\r\n  \r\n  .template-search-section {\r\n    padding: 16px;\r\n    margin-bottom: 24px;\r\n  }\r\n  \r\n  .template-list {\r\n    padding: 0 16px 16px;\r\n  }\r\n  \r\n  .category-header {\r\n    padding: 16px 20px;\r\n  }\r\n  \r\n  .category-filter {\r\n    gap: 8px;\r\n  }\r\n  \r\n  .category-filter-tag {\r\n    padding: 6px 12px;\r\n    font-size: 12px;\r\n  }\r\n}\r\n\r\n/* 简洁抽屉样式 */\r\n:deep(.ant-drawer-content) {\r\n  background: #f8fafc;\r\n}\r\n\r\n:deep(.ant-drawer-header) {\r\n  background: #ffffff;\r\n  border-bottom: 1px solid #e2e8f0;\r\n  padding: 20px 24px;\r\n}\r\n\r\n:deep(.ant-drawer-title) {\r\n  font-weight: 600;\r\n  font-size: 18px;\r\n  color: #1f2937;\r\n}\r\n\r\n:deep(.ant-drawer-body) {\r\n  padding: 24px;\r\n}\r\n\r\n:deep(.ant-drawer-extra) {\r\n  gap: 8px;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}