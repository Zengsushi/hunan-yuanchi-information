{"ast":null,"code":"import { computed } from 'vue';\nimport { CheckCircleOutlined, EyeOutlined, AlertOutlined, CodeOutlined, DesktopOutlined, CloudOutlined, DatabaseOutlined, ApartmentOutlined, GlobalOutlined, AppstoreOutlined } from '@ant-design/icons-vue';\nexport default {\n  __name: 'TemplateCard',\n  props: {\n    templateid: String,\n    name: String,\n    description: String,\n    category: String,\n    icon: String,\n    items_count: Number,\n    triggers_count: Number,\n    macros_count: Number,\n    groups: Array,\n    selected: Boolean\n  },\n  emits: ['select'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const props = __props;\n    const emit = __emit;\n    const isSelected = computed(() => props.selected);\n    const getCategoryIcon = category => {\n      const iconMap = {\n        'server': DesktopOutlined,\n        'network': ApartmentOutlined,\n        'cloud': CloudOutlined,\n        'database': DatabaseOutlined,\n        'application': AppstoreOutlined,\n        'default': GlobalOutlined\n      };\n      return iconMap[category] || iconMap.default;\n    };\n    const getCategoryLabel = category => {\n      const labelMap = {\n        'server': '服务器',\n        'network': '网络设备',\n        'cloud': '云服务',\n        'database': '数据库',\n        'application': '应用服务',\n        'default': '通用模板'\n      };\n      return labelMap[category] || category || '通用模板';\n    };\n    const truncateName = name => {\n      return name.length > 20 ? name.substring(0, 20) + '...' : name;\n    };\n    const truncateDescription = desc => {\n      if (!desc) return '暂无描述';\n      return desc.length > 80 ? desc.substring(0, 80) + '...' : desc;\n    };\n    const truncateGroupName = name => {\n      return name.length > 8 ? name.substring(0, 8) + '...' : name;\n    };\n    const getGroupColor = index => {\n      const colors = ['blue', 'green', 'orange', 'purple', 'cyan'];\n      return colors[index % colors.length];\n    };\n    const __returned__ = {\n      props,\n      emit,\n      isSelected,\n      getCategoryIcon,\n      getCategoryLabel,\n      truncateName,\n      truncateDescription,\n      truncateGroupName,\n      getGroupColor,\n      computed,\n      get CheckCircleOutlined() {\n        return CheckCircleOutlined;\n      },\n      get EyeOutlined() {\n        return EyeOutlined;\n      },\n      get AlertOutlined() {\n        return AlertOutlined;\n      },\n      get CodeOutlined() {\n        return CodeOutlined;\n      },\n      get DesktopOutlined() {\n        return DesktopOutlined;\n      },\n      get CloudOutlined() {\n        return CloudOutlined;\n      },\n      get DatabaseOutlined() {\n        return DatabaseOutlined;\n      },\n      get ApartmentOutlined() {\n        return ApartmentOutlined;\n      },\n      get GlobalOutlined() {\n        return GlobalOutlined;\n      },\n      get AppstoreOutlined() {\n        return AppstoreOutlined;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["computed","CheckCircleOutlined","EyeOutlined","AlertOutlined","CodeOutlined","DesktopOutlined","CloudOutlined","DatabaseOutlined","ApartmentOutlined","GlobalOutlined","AppstoreOutlined","props","__props","emit","__emit","isSelected","selected","getCategoryIcon","category","iconMap","default","getCategoryLabel","labelMap","truncateName","name","length","substring","truncateDescription","desc","truncateGroupName","getGroupColor","index","colors"],"sources":["E:/A_project/yuanchi/AIops/frontend/src/components/business/TemplateCard.vue"],"sourcesContent":["<template>\r\n  <div \r\n    class=\"template-card\"\r\n    :class=\"{ selected: isSelected }\"\r\n    @click=\"$emit('select', templateid)\"\r\n  >\r\n    <div class=\"card-badge\" v-if=\"isSelected\">\r\n      <CheckCircleOutlined />\r\n    </div>\r\n    \r\n    <div class=\"card-header\">\r\n      <div class=\"card-icon-wrapper\" :class=\"category\">\r\n        <component :is=\"getCategoryIcon(category)\" class=\"card-icon\" />\r\n      </div>\r\n      <div class=\"card-title-section\">\r\n        <h3 class=\"card-title\" :title=\"name\">{{ truncateName(name) }}</h3>\r\n        <span class=\"card-category\">{{ getCategoryLabel(category) }}</span>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"card-content\">\r\n      <p class=\"card-description\" :title=\"description\">{{ truncateDescription(description) }}</p>\r\n      \r\n      <div class=\"card-stats\">\r\n        <div class=\"stat-item\">\r\n          <div class=\"stat-icon\">\r\n            <EyeOutlined />\r\n          </div>\r\n          <div class=\"stat-info\">\r\n            <span class=\"stat-value\">{{ items_count }}</span>\r\n            <span class=\"stat-label\">监控项</span>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"stat-item\">\r\n          <div class=\"stat-icon\">\r\n            <AlertOutlined />\r\n          </div>\r\n          <div class=\"stat-info\">\r\n            <span class=\"stat-value\">{{ triggers_count }}</span>\r\n            <span class=\"stat-label\">触发器</span>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"stat-item\">\r\n          <div class=\"stat-icon\">\r\n            <CodeOutlined />\r\n          </div>\r\n          <div class=\"stat-info\">\r\n            <span class=\"stat-value\">{{ macros_count || 0 }}</span>\r\n            <span class=\"stat-label\">宏</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"card-groups\" v-if=\"groups && groups.length > 0\">\r\n        <a-tag \r\n          v-for=\"(group, index) in groups.slice(0, 2)\" \r\n          :key=\"index\"\r\n          :color=\"getGroupColor(index)\"\r\n          size=\"small\"\r\n          :title=\"group.name\"\r\n        >\r\n          {{ truncateGroupName(group.name) }}\r\n        </a-tag>\r\n        <span \r\n          v-if=\"groups.length > 2\" \r\n          class=\"more-groups\"\r\n          :title=\"groups.slice(2).map(g => g.name).join(', ')\"\r\n        >\r\n          +{{ groups.length - 2 }}\r\n        </span>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"card-footer\">\r\n      <div class=\"card-actions\">\r\n        <a-button \r\n          type=\"primary\" \r\n          size=\"small\" \r\n          :class=\"{ 'selected-btn': isSelected }\"\r\n          @click.stop=\"$emit('select', templateid)\"\r\n        >\r\n          {{ isSelected ? '已选择' : '选择' }}\r\n        </a-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed } from 'vue';\r\nimport { \r\n  CheckCircleOutlined, \r\n  EyeOutlined, \r\n  AlertOutlined, \r\n  CodeOutlined,\r\n  DesktopOutlined,\r\n  CloudOutlined,\r\n  DatabaseOutlined,\r\n  ApartmentOutlined,\r\n  GlobalOutlined,\r\n  AppstoreOutlined\r\n} from '@ant-design/icons-vue';\r\n\r\nconst props = defineProps({\r\n  templateid: String,\r\n  name: String,\r\n  description: String,\r\n  category: String,\r\n  icon: String,\r\n  items_count: Number,\r\n  triggers_count: Number,\r\n  macros_count: Number,\r\n  groups: Array,\r\n  selected: Boolean\r\n});\r\n\r\nconst emit = defineEmits(['select']);\r\n\r\nconst isSelected = computed(() => props.selected);\r\n\r\nconst getCategoryIcon = (category) => {\r\n  const iconMap = {\r\n    'server': DesktopOutlined,\r\n    'network': ApartmentOutlined,\r\n    'cloud': CloudOutlined,\r\n    'database': DatabaseOutlined,\r\n    'application': AppstoreOutlined,\r\n    'default': GlobalOutlined\r\n  };\r\n  return iconMap[category] || iconMap.default;\r\n};\r\n\r\nconst getCategoryLabel = (category) => {\r\n  const labelMap = {\r\n    'server': '服务器',\r\n    'network': '网络设备',\r\n    'cloud': '云服务',\r\n    'database': '数据库',\r\n    'application': '应用服务',\r\n    'default': '通用模板'\r\n  };\r\n  return labelMap[category] || category || '通用模板';\r\n};\r\n\r\nconst truncateName = (name) => {\r\n  return name.length > 20 ? name.substring(0, 20) + '...' : name;\r\n};\r\n\r\nconst truncateDescription = (desc) => {\r\n  if (!desc) return '暂无描述';\r\n  return desc.length > 80 ? desc.substring(0, 80) + '...' : desc;\r\n};\r\n\r\nconst truncateGroupName = (name) => {\r\n  return name.length > 8 ? name.substring(0, 8) + '...' : name;\r\n};\r\n\r\nconst getGroupColor = (index) => {\r\n  const colors = ['blue', 'green', 'orange', 'purple', 'cyan'];\r\n  return colors[index % colors.length];\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.template-card {\r\n  position: relative;\r\n  background: linear-gradient(135deg, #ffffff 0%, #fafbff 100%);\r\n  border: 1px solid rgba(24, 144, 255, 0.12);\r\n  border-radius: 16px;\r\n  padding: 20px;\r\n  cursor: pointer;\r\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\r\n  overflow: hidden;\r\n  height: 220px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  box-shadow: 0 2px 12px rgba(24, 144, 255, 0.06);\r\n}\r\n\r\n.template-card:hover {\r\n  transform: translateY(-4px);\r\n  box-shadow: 0 8px 24px rgba(24, 144, 255, 0.12);\r\n  border-color: rgba(24, 144, 255, 0.3);\r\n}\r\n\r\n.template-card.selected {\r\n  background: linear-gradient(135deg, #e6f7ff 0%, #bae7ff 100%);\r\n  border-color: #40a9ff;\r\n  box-shadow: 0 8px 24px rgba(24, 144, 255, 0.2);\r\n}\r\n\r\n.card-badge {\r\n  position: absolute;\r\n  top: 12px;\r\n  right: 12px;\r\n  width: 24px;\r\n  height: 24px;\r\n  background: #52c41a;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: white;\r\n  font-size: 14px;\r\n  z-index: 10;\r\n  box-shadow: 0 2px 8px rgba(82, 196, 26, 0.4);\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n  margin-bottom: 16px;\r\n}\r\n\r\n.card-icon-wrapper {\r\n  width: 48px;\r\n  height: 48px;\r\n  border-radius: 12px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-shrink: 0;\r\n}\r\n\r\n.card-icon-wrapper.server {\r\n  background: linear-gradient(135deg, #ffd6e7 0%, #ffadd2 100%);\r\n}\r\n\r\n.card-icon-wrapper.network {\r\n  background: linear-gradient(135deg, #d6e4ff 0%, #85a5ff 100%);\r\n}\r\n\r\n.card-icon-wrapper.cloud {\r\n  background: linear-gradient(135deg, #b5f5ec 0%, #36cfc9 100%);\r\n}\r\n\r\n.card-icon-wrapper.database {\r\n  background: linear-gradient(135deg, #ffd591 0%, #ffc53d 100%);\r\n}\r\n\r\n.card-icon-wrapper.application {\r\n  background: linear-gradient(135deg, #d3f261 0%, #bae637 100%);\r\n}\r\n\r\n.card-icon-wrapper.default {\r\n  background: linear-gradient(135deg, #e9d8fd 0%, #b37feb 100%);\r\n}\r\n\r\n.card-icon {\r\n  font-size: 24px;\r\n  color: white;\r\n}\r\n\r\n.card-title-section {\r\n  flex: 1;\r\n  min-width: 0;\r\n}\r\n\r\n.card-title {\r\n  margin: 0;\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  color: #262626;\r\n  line-height: 1.3;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.card-category {\r\n  font-size: 12px;\r\n  color: #8c8c8c;\r\n  margin-top: 2px;\r\n}\r\n\r\n.card-content {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 12px;\r\n}\r\n\r\n.card-description {\r\n  color: #595959;\r\n  font-size: 13px;\r\n  line-height: 1.4;\r\n  margin: 0;\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n  overflow: hidden;\r\n}\r\n\r\n.card-stats {\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  gap: 8px;\r\n  margin-top: auto;\r\n}\r\n\r\n.stat-item {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 6px;\r\n  padding: 6px;\r\n  background: rgba(24, 144, 255, 0.06);\r\n  border-radius: 8px;\r\n  transition: background-color 0.2s ease;\r\n}\r\n\r\n.stat-item:hover {\r\n  background: rgba(24, 144, 255, 0.1);\r\n}\r\n\r\n.stat-icon {\r\n  width: 20px;\r\n  height: 20px;\r\n  background: rgba(24, 144, 255, 0.1);\r\n  border-radius: 4px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-shrink: 0;\r\n}\r\n\r\n.stat-icon .anticon {\r\n  font-size: 12px;\r\n  color: #1890ff;\r\n}\r\n\r\n.stat-info {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1px;\r\n}\r\n\r\n.stat-value {\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  color: #262626;\r\n  line-height: 1;\r\n}\r\n\r\n.stat-label {\r\n  font-size: 10px;\r\n  color: #8c8c8c;\r\n  line-height: 1;\r\n}\r\n\r\n.card-groups {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 6px;\r\n  flex-wrap: wrap;\r\n  margin-top: auto;\r\n}\r\n\r\n.more-groups {\r\n  font-size: 11px;\r\n  color: #8c8c8c;\r\n  background: rgba(140, 140, 140, 0.1);\r\n  padding: 2px 6px;\r\n  border-radius: 4px;\r\n  cursor: help;\r\n}\r\n\r\n.card-footer {\r\n  margin-top: auto;\r\n}\r\n\r\n.card-actions {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.selected-btn {\r\n  background: #52c41a !important;\r\n  border-color: #52c41a !important;\r\n}\r\n\r\n.selected-btn:hover {\r\n  background: #73d13d !important;\r\n  border-color: #73d13d !important;\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 768px) {\r\n  .template-card {\r\n    height: 200px;\r\n    padding: 16px;\r\n  }\r\n  \r\n  .card-icon-wrapper {\r\n    width: 40px;\r\n    height: 40px;\r\n  }\r\n  \r\n  .card-icon {\r\n    font-size: 20px;\r\n  }\r\n  \r\n  .card-title {\r\n    font-size: 14px;\r\n  }\r\n  \r\n  .card-stats {\r\n    gap: 6px;\r\n  }\r\n  \r\n  .stat-item {\r\n    padding: 4px;\r\n  }\r\n  \r\n  .stat-icon {\r\n    width: 18px;\r\n    height: 18px;\r\n  }\r\n  \r\n  .stat-value {\r\n    font-size: 12px;\r\n  }\r\n  \r\n  .stat-label {\r\n    font-size: 9px;\r\n  }\r\n}\r\n\r\n@media (max-width: 480px) {\r\n  .template-card {\r\n    height: 180px;\r\n    padding: 12px;\r\n  }\r\n  \r\n  .card-header {\r\n    gap: 8px;\r\n    margin-bottom: 12px;\r\n  }\r\n  \r\n  .card-icon-wrapper {\r\n    width: 36px;\r\n    height: 36px;\r\n  }\r\n  \r\n  .card-icon {\r\n    font-size: 18px;\r\n  }\r\n  \r\n  .card-description {\r\n    font-size: 12px;\r\n  }\r\n  \r\n  .card-stats {\r\n    grid-template-columns: repeat(3, 1fr);\r\n    gap: 4px;\r\n  }\r\n  \r\n  .stat-item {\r\n    flex-direction: column;\r\n    gap: 2px;\r\n    text-align: center;\r\n    padding: 4px 2px;\r\n  }\r\n  \r\n  .stat-info {\r\n    gap: 0;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"AA2FA,SAASA,QAAQ,QAAQ,KAAK;AAC9B,SACEC,mBAAmB,EACnBC,WAAW,EACXC,aAAa,EACbC,YAAY,EACZC,eAAe,EACfC,aAAa,EACbC,gBAAgB,EAChBC,iBAAiB,EACjBC,cAAc,EACdC,gBAAgB,QACX,uBAAuB;;;;;;;;;;;;;;;;;;;;;IAE9B,MAAMC,KAAK,GAAGC,OAWZ;IAEF,MAAMC,IAAI,GAAGC,MAAuB;IAEpC,MAAMC,UAAU,GAAGf,QAAQ,CAAC,MAAMW,KAAK,CAACK,QAAQ,CAAC;IAEjD,MAAMC,eAAe,GAAIC,QAAQ,IAAK;MACpC,MAAMC,OAAO,GAAG;QACd,QAAQ,EAAEd,eAAe;QACzB,SAAS,EAAEG,iBAAiB;QAC5B,OAAO,EAAEF,aAAa;QACtB,UAAU,EAAEC,gBAAgB;QAC5B,aAAa,EAAEG,gBAAgB;QAC/B,SAAS,EAAED;MACb,CAAC;MACD,OAAOU,OAAO,CAACD,QAAQ,CAAC,IAAIC,OAAO,CAACC,OAAO;IAC7C,CAAC;IAED,MAAMC,gBAAgB,GAAIH,QAAQ,IAAK;MACrC,MAAMI,QAAQ,GAAG;QACf,QAAQ,EAAE,KAAK;QACf,SAAS,EAAE,MAAM;QACjB,OAAO,EAAE,KAAK;QACd,UAAU,EAAE,KAAK;QACjB,aAAa,EAAE,MAAM;QACrB,SAAS,EAAE;MACb,CAAC;MACD,OAAOA,QAAQ,CAACJ,QAAQ,CAAC,IAAIA,QAAQ,IAAI,MAAM;IACjD,CAAC;IAED,MAAMK,YAAY,GAAIC,IAAI,IAAK;MAC7B,OAAOA,IAAI,CAACC,MAAM,GAAG,EAAE,GAAGD,IAAI,CAACE,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,KAAK,GAAGF,IAAI;IAChE,CAAC;IAED,MAAMG,mBAAmB,GAAIC,IAAI,IAAK;MACpC,IAAI,CAACA,IAAI,EAAE,OAAO,MAAM;MACxB,OAAOA,IAAI,CAACH,MAAM,GAAG,EAAE,GAAGG,IAAI,CAACF,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,KAAK,GAAGE,IAAI;IAChE,CAAC;IAED,MAAMC,iBAAiB,GAAIL,IAAI,IAAK;MAClC,OAAOA,IAAI,CAACC,MAAM,GAAG,CAAC,GAAGD,IAAI,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,KAAK,GAAGF,IAAI;IAC9D,CAAC;IAED,MAAMM,aAAa,GAAIC,KAAK,IAAK;MAC/B,MAAMC,MAAM,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,CAAC;MAC5D,OAAOA,MAAM,CAACD,KAAK,GAAGC,MAAM,CAACP,MAAM,CAAC;IACtC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}