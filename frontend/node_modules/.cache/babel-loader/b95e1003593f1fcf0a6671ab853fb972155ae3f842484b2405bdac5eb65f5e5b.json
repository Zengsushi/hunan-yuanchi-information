{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, reactive, onMounted } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { message } from 'ant-design-vue';\nimport { DatabaseOutlined, UserOutlined, LockOutlined, LoginOutlined, SafetyCertificateOutlined, CrownOutlined, MonitorOutlined, BellOutlined, BarChartOutlined } from '@ant-design/icons-vue';\nimport { userAPI } from '@/api/users';\nexport default {\n  __name: 'UserLogin',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const loading = ref(false);\n    const loginMode = ref('user');\n    const loginForm = reactive({\n      username: '',\n      password: '',\n      remember: false\n    });\n    const rules = {\n      username: [{\n        required: true,\n        message: '请输入用户名',\n        trigger: 'blur'\n      }, {\n        min: 2,\n        max: 50,\n        message: '用户名长度在 2 到 50 个字符',\n        trigger: 'blur'\n      }],\n      password: [{\n        required: true,\n        message: '请输入密码',\n        trigger: 'blur'\n      }, {\n        min: 6,\n        max: 128,\n        message: '密码长度在 6 到 128 个字符',\n        trigger: 'blur'\n      }]\n    };\n\n    // 切换登录模式\n    const switchLoginMode = mode => {\n      loginMode.value = mode;\n      loginForm.username = '';\n      loginForm.password = '';\n      loginForm.remember = false;\n    };\n\n    // 动画相关函数\n    const onInputFocus = e => {\n      e.target.parentElement.classList.add('input-focused');\n    };\n    const onInputBlur = e => {\n      e.target.parentElement.classList.remove('input-focused');\n    };\n    const onButtonPress = e => {\n      e.target.classList.add('button-pressed');\n    };\n    const onButtonRelease = e => {\n      e.target.classList.remove('button-pressed');\n    };\n\n    // 粒子动画\n    const getParticleStyle = index => {\n      const size = Math.random() * 4 + 2;\n      const left = Math.random() * 100;\n      const animationDelay = Math.random() * 20;\n      const animationDuration = Math.random() * 10 + 15;\n      return {\n        width: `${size}px`,\n        height: `${size}px`,\n        left: `${left}%`,\n        animationDelay: `${animationDelay}s`,\n        animationDuration: `${animationDuration}s`\n      };\n    };\n\n    // 登录处理\n    const handleLogin = async () => {\n      loading.value = true;\n\n      // 清理旧的WebSocket连接\n      if (typeof window !== 'undefined' && window.webSocketIntegration) {\n        console.log('清理旧的WebSocket连接...');\n        window.webSocketIntegration.reset();\n      }\n      try {\n        const response = await userAPI.login({\n          username: loginForm.username,\n          password: loginForm.password,\n          remember: loginForm.remember,\n          loginMode: loginMode.value\n        });\n        if (response.status === 200 && response.data.code === 200) {\n          const userData = response.data.data;\n\n          // 保存认证信息\n          if (userData && userData.token) {\n            localStorage.setItem('token', userData.token);\n          }\n          if (userData && userData.user) {\n            localStorage.setItem('userInfo', JSON.stringify(userData.user));\n            localStorage.setItem('username', userData.user.username);\n            const isAdmin = userData.user.is_admin || userData.user.role === 'admin';\n            const userRole = userData.user.role || (userData.user.is_admin ? 'admin' : 'viewer');\n            localStorage.setItem('userRole', userRole);\n            localStorage.setItem('isAdmin', isAdmin.toString());\n\n            // 权限验证\n            if (loginMode.value === 'admin' && !isAdmin) {\n              message.error({\n                content: '您没有管理员权限，无法使用管理员模式登录',\n                duration: 1\n              });\n              return;\n            }\n            if (loginMode.value === 'user' && isAdmin) {\n              message.warning({\n                content: '检测到您是管理员，建议使用管理员模式登录以获得完整功能',\n                duration: 1\n              });\n            }\n            const userType = isAdmin ? 'admin' : 'user';\n            localStorage.setItem('userType', userType);\n          }\n          localStorage.setItem('isLoggedIn', 'true');\n\n          // 记住用户\n          if (loginForm.remember) {\n            localStorage.setItem('remember_user', loginForm.username);\n            localStorage.setItem('remember_mode', loginMode.value);\n          } else {\n            localStorage.removeItem('remember_user');\n            localStorage.removeItem('remember_mode');\n          }\n          message.success({\n            content: '登录成功',\n            duration: 1\n          });\n\n          // 初始化WebSocket\n          try {\n            const webSocketModule = await import('@/utils/webSocketIntegration');\n            const webSocketIntegration = webSocketModule.default;\n            window.webSocketIntegration = webSocketIntegration;\n            webSocketIntegration.reset();\n            setTimeout(() => {\n              webSocketIntegration.initialize();\n            }, 100);\n          } catch (error) {\n            console.error('WebSocket初始化失败:', error);\n          }\n\n          // 触发菜单更新\n          try {\n            // 通知App.vue重新获取菜单\n            window.dispatchEvent(new CustomEvent('userLoggedIn'));\n          } catch (error) {\n            console.error('触发菜单更新失败:', error);\n          }\n\n          // 根据用户类型跳转到不同页面\n          setTimeout(() => {\n            const isAdmin = localStorage.getItem('isAdmin') === 'true';\n            if (loginMode.value === 'admin' && isAdmin) {\n              router.push('/admin/dashboard');\n            } else {\n              router.push('/');\n            }\n          }, 500);\n        } else {\n          message.error({\n            content: response.data.message || '登录失败，请检查用户名和密码',\n            duration: 1\n          });\n        }\n      } catch (error) {\n        console.error('登录错误:', error);\n        if (error.response && error.response.data && error.response.data.message) {\n          message.error({\n            content: error.response.data.message,\n            duration: 1\n          });\n        } else {\n          message.error({\n            content: '网络错误，请稍后重试',\n            duration: 1\n          });\n        }\n      } finally {\n        loading.value = false;\n      }\n    };\n    const handleLoginFailed = errorInfo => {\n      console.log('表单验证失败:', errorInfo);\n    };\n\n    // 组件挂载时恢复记住的用户信息\n    onMounted(() => {\n      const rememberedUser = localStorage.getItem('remember_user');\n      const rememberedMode = localStorage.getItem('remember_mode');\n      if (rememberedUser) {\n        loginForm.username = rememberedUser;\n        loginForm.remember = true;\n      }\n      if (rememberedMode) {\n        loginMode.value = rememberedMode;\n      }\n    });\n    const __returned__ = {\n      router,\n      loading,\n      loginMode,\n      loginForm,\n      rules,\n      switchLoginMode,\n      onInputFocus,\n      onInputBlur,\n      onButtonPress,\n      onButtonRelease,\n      getParticleStyle,\n      handleLogin,\n      handleLoginFailed,\n      ref,\n      reactive,\n      onMounted,\n      get useRouter() {\n        return useRouter;\n      },\n      get message() {\n        return message;\n      },\n      get DatabaseOutlined() {\n        return DatabaseOutlined;\n      },\n      get UserOutlined() {\n        return UserOutlined;\n      },\n      get LockOutlined() {\n        return LockOutlined;\n      },\n      get LoginOutlined() {\n        return LoginOutlined;\n      },\n      get SafetyCertificateOutlined() {\n        return SafetyCertificateOutlined;\n      },\n      get CrownOutlined() {\n        return CrownOutlined;\n      },\n      get MonitorOutlined() {\n        return MonitorOutlined;\n      },\n      get BellOutlined() {\n        return BellOutlined;\n      },\n      get BarChartOutlined() {\n        return BarChartOutlined;\n      },\n      get userAPI() {\n        return userAPI;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","useRouter","message","DatabaseOutlined","UserOutlined","LockOutlined","LoginOutlined","SafetyCertificateOutlined","CrownOutlined","MonitorOutlined","BellOutlined","BarChartOutlined","userAPI","router","loading","loginMode","loginForm","username","password","remember","rules","required","trigger","min","max","switchLoginMode","mode","value","onInputFocus","e","target","parentElement","classList","add","onInputBlur","remove","onButtonPress","onButtonRelease","getParticleStyle","index","size","Math","random","left","animationDelay","animationDuration","width","height","handleLogin","window","webSocketIntegration","console","log","reset","response","login","status","data","code","userData","token","localStorage","setItem","user","JSON","stringify","isAdmin","is_admin","role","userRole","toString","error","content","duration","warning","userType","removeItem","success","webSocketModule","default","setTimeout","initialize","dispatchEvent","CustomEvent","getItem","push","handleLoginFailed","errorInfo","rememberedUser","rememberedMode"],"sources":["E:/A_project/yuanchi/AIops/frontend/src/views/admin/UserLogin.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-page\">\r\n    <!-- 背景装饰 -->\r\n    <div class=\"background-decoration\">\r\n      <div class=\"geometric-shapes\">\r\n        <div class=\"shape circle-1\"></div>\r\n        <div class=\"shape circle-2\"></div>\r\n        <div class=\"shape triangle-1\"></div>\r\n        <div class=\"shape square-1\"></div>\r\n      </div>\r\n      <div class=\"gradient-overlay\"></div>\r\n      \r\n      <!-- 粒子效果 -->\r\n      <div class=\"particles\">\r\n        <div class=\"particle\" v-for=\"n in 20\" :key=\"n\" :style=\"getParticleStyle(n)\"></div>\r\n      </div>\r\n      \r\n      <!-- 光晕效果 -->\r\n      <div class=\"glow glow-1\"></div>\r\n      <div class=\"glow glow-2\"></div>\r\n      <div class=\"glow glow-3\"></div>\r\n    </div>\r\n\r\n    <!-- 主要内容区域 -->\r\n    <div class=\"main-content\">\r\n      <!-- 左侧信息面板 -->\r\n      <div class=\"info-panel\">\r\n        <div class=\"brand-section\">\r\n          <div class=\"logo\">\r\n            <DatabaseOutlined class=\"logo-icon\" />\r\n          </div>\r\n          <h1 class=\"brand-title\">运维监控系统</h1>\r\n          <p class=\"brand-subtitle\">专业的资产管理与监控平台</p>\r\n        </div>\r\n        \r\n        <div class=\"features-list\">\r\n          <div class=\"feature-item\">\r\n            <div class=\"feature-icon-wrapper\">\r\n              <MonitorOutlined class=\"feature-icon\" />\r\n            </div>\r\n            <div class=\"feature-content\">\r\n              <h3 class=\"feature-title\">实时监控资产状态</h3>\r\n              <p class=\"feature-desc\">7×24小时不间断监控，实时掌握设备运行状态</p>\r\n            </div>\r\n          </div>\r\n          <div class=\"feature-item\">\r\n            <div class=\"feature-icon-wrapper\">\r\n              <BellOutlined class=\"feature-icon\" />\r\n            </div>\r\n            <div class=\"feature-content\">\r\n              <h3 class=\"feature-title\">智能告警管理</h3>\r\n              <p class=\"feature-desc\">AI驱动的智能告警，精准识别异常并及时通知</p>\r\n            </div>\r\n          </div>\r\n          <div class=\"feature-item\">\r\n            <div class=\"feature-icon-wrapper\">\r\n              <BarChartOutlined class=\"feature-icon\" />\r\n            </div>\r\n            <div class=\"feature-content\">\r\n              <h3 class=\"feature-title\">数据可视化分析</h3>\r\n              <p class=\"feature-desc\">多维度数据分析，直观展示运维趋势和性能指标</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 右侧登录表单 -->\r\n      <div class=\"login-panel\">\r\n        <div class=\"login-container\">\r\n          <div class=\"login-header\">\r\n            <h2 class=\"login-title\">欢迎登录</h2>\r\n            <p class=\"login-subtitle\">请选择登录方式并输入您的凭据</p>\r\n          </div>\r\n\r\n          <!-- 登录模式切换 -->\r\n          <div class=\"mode-selector\">\r\n            <div class=\"mode-options\">\r\n              <button \r\n                class=\"mode-option\"\r\n                :class=\"{ active: loginMode === 'user' }\"\r\n                @click=\"switchLoginMode('user')\"\r\n              >\r\n                <UserOutlined class=\"mode-icon\" />\r\n                <span>普通用户</span>\r\n              </button>\r\n              <button \r\n                class=\"mode-option\"\r\n                :class=\"{ active: loginMode === 'admin' }\"\r\n                @click=\"switchLoginMode('admin')\"\r\n              >\r\n                <CrownOutlined class=\"mode-icon\" />\r\n                <span>管理员</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- 登录表单 -->\r\n          <a-form\r\n            :model=\"loginForm\"\r\n            :rules=\"rules\"\r\n            @finish=\"handleLogin\"\r\n            @finishFailed=\"handleLoginFailed\"\r\n            class=\"login-form\"\r\n          >\r\n            <a-form-item name=\"username\" class=\"form-group\">\r\n              <label class=\"form-label\">用户名</label>\r\n              <div class=\"input-group\">\r\n                <UserOutlined class=\"input-prefix-icon\" />\r\n                <a-input\r\n                  v-model:value=\"loginForm.username\"\r\n                  size=\"large\"\r\n                  placeholder=\"请输入用户名\"\r\n                  class=\"form-input\"\r\n                  @focus=\"onInputFocus\"\r\n                  @blur=\"onInputBlur\"\r\n                />\r\n              </div>\r\n            </a-form-item>\r\n\r\n            <a-form-item name=\"password\" class=\"form-group\">\r\n              <label class=\"form-label\">密码</label>\r\n              <div class=\"input-group\">\r\n                <LockOutlined class=\"input-prefix-icon\" />\r\n                <a-input-password\r\n                  v-model:value=\"loginForm.password\"\r\n                  size=\"large\"\r\n                  placeholder=\"请输入密码\"\r\n                  class=\"form-input\"\r\n                  @focus=\"onInputFocus\"\r\n                  @blur=\"onInputBlur\"\r\n                />\r\n              </div>\r\n            </a-form-item>\r\n\r\n            <div class=\"form-options\">\r\n              <a-checkbox v-model:checked=\"loginForm.remember\" class=\"remember-checkbox\">\r\n                记住登录状态\r\n              </a-checkbox>\r\n              <a href=\"#\" class=\"forgot-link\">忘记密码？</a>\r\n            </div>\r\n\r\n            <a-form-item class=\"form-submit\">\r\n              <a-button\r\n                type=\"primary\"\r\n                html-type=\"submit\"\r\n                size=\"large\"\r\n                :loading=\"loading\"\r\n                class=\"login-button\"\r\n                block\r\n                @mousedown=\"onButtonPress\"\r\n                @mouseup=\"onButtonRelease\"\r\n                @mouseleave=\"onButtonRelease\"\r\n              >\r\n                <template #icon v-if=\"!loading\">\r\n                  <LoginOutlined class=\"button-icon\" />\r\n                </template>\r\n                <span class=\"button-text\">{{ loading ? '登录中...' : (loginMode === 'admin' ? '管理员登录' : '用户登录') }}</span>\r\n              </a-button>\r\n            </a-form-item>\r\n          </a-form>\r\n\r\n          <!-- 底部信息 -->\r\n          <div class=\"login-footer\">\r\n            <div class=\"security-badge\">\r\n              <SafetyCertificateOutlined class=\"security-icon\" />\r\n              <span>安全加密传输</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 底部版权 -->\r\n    <div class=\"page-footer\">\r\n      <p>&copy; 2024 运维监控系统 | 技术支持：运维团队</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, onMounted } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport { message } from 'ant-design-vue';\r\nimport {\r\n  DatabaseOutlined,\r\n  UserOutlined,\r\n  LockOutlined,\r\n  LoginOutlined,\r\n  SafetyCertificateOutlined,\r\n  CrownOutlined,\r\n  MonitorOutlined,\r\n  BellOutlined,\r\n  BarChartOutlined\r\n} from '@ant-design/icons-vue';\r\nimport { userAPI } from '@/api/users';\r\n\r\nconst router = useRouter();\r\nconst loading = ref(false);\r\nconst loginMode = ref('user');\r\n\r\nconst loginForm = reactive({\r\n  username: '',\r\n  password: '',\r\n  remember: false\r\n});\r\n\r\nconst rules = {\r\n  username: [\r\n    { required: true, message: '请输入用户名', trigger: 'blur' },\r\n    { min: 2, max: 50, message: '用户名长度在 2 到 50 个字符', trigger: 'blur' }\r\n  ],\r\n  password: [\r\n    { required: true, message: '请输入密码', trigger: 'blur' },\r\n    { min: 6, max: 128, message: '密码长度在 6 到 128 个字符', trigger: 'blur' }\r\n  ]\r\n};\r\n\r\n// 切换登录模式\r\nconst switchLoginMode = (mode) => {\r\n  loginMode.value = mode;\r\n  loginForm.username = '';\r\n  loginForm.password = '';\r\n  loginForm.remember = false;\r\n};\r\n\r\n// 动画相关函数\r\nconst onInputFocus = (e) => {\r\n  e.target.parentElement.classList.add('input-focused');\r\n};\r\n\r\nconst onInputBlur = (e) => {\r\n  e.target.parentElement.classList.remove('input-focused');\r\n};\r\n\r\nconst onButtonPress = (e) => {\r\n  e.target.classList.add('button-pressed');\r\n};\r\n\r\nconst onButtonRelease = (e) => {\r\n  e.target.classList.remove('button-pressed');\r\n};\r\n\r\n// 粒子动画\r\nconst getParticleStyle = (index) => {\r\n  const size = Math.random() * 4 + 2;\r\n  const left = Math.random() * 100;\r\n  const animationDelay = Math.random() * 20;\r\n  const animationDuration = Math.random() * 10 + 15;\r\n  \r\n  return {\r\n    width: `${size}px`,\r\n    height: `${size}px`,\r\n    left: `${left}%`,\r\n    animationDelay: `${animationDelay}s`,\r\n    animationDuration: `${animationDuration}s`\r\n  };\r\n};\r\n\r\n// 登录处理\r\nconst handleLogin = async () => {\r\n  loading.value = true;\r\n  \r\n  // 清理旧的WebSocket连接\r\n  if (typeof window !== 'undefined' && window.webSocketIntegration) {\r\n    console.log('清理旧的WebSocket连接...');\r\n    window.webSocketIntegration.reset();\r\n  }\r\n  \r\n  try {\r\n    const response = await userAPI.login({\r\n      username: loginForm.username,\r\n      password: loginForm.password,\r\n      remember: loginForm.remember,\r\n      loginMode: loginMode.value\r\n    });\r\n    \r\n    if (response.status === 200 && response.data.code === 200) {\r\n      const userData = response.data.data;\r\n      \r\n      // 保存认证信息\r\n      if (userData && userData.token) {\r\n        localStorage.setItem('token', userData.token);\r\n      }\r\n      \r\n      if (userData && userData.user) {\r\n        localStorage.setItem('userInfo', JSON.stringify(userData.user));\r\n        localStorage.setItem('username', userData.user.username);\r\n        \r\n        const isAdmin = userData.user.is_admin || userData.user.role === 'admin';\r\n        const userRole = userData.user.role || (userData.user.is_admin ? 'admin' : 'viewer');\r\n        \r\n        localStorage.setItem('userRole', userRole);\r\n        localStorage.setItem('isAdmin', isAdmin.toString());\r\n        \r\n        // 权限验证\r\n        if (loginMode.value === 'admin' && !isAdmin) {\r\n          message.error({\r\n            content: '您没有管理员权限，无法使用管理员模式登录',\r\n            duration: 1\r\n          });\r\n          return;\r\n        }\r\n        \r\n        if (loginMode.value === 'user' && isAdmin) {\r\n          message.warning({\r\n            content: '检测到您是管理员，建议使用管理员模式登录以获得完整功能',\r\n            duration: 1\r\n          });\r\n        }\r\n        \r\n        const userType = isAdmin ? 'admin' : 'user';\r\n        localStorage.setItem('userType', userType);\r\n      }\r\n      \r\n      localStorage.setItem('isLoggedIn', 'true');\r\n      \r\n      // 记住用户\r\n      if (loginForm.remember) {\r\n        localStorage.setItem('remember_user', loginForm.username);\r\n        localStorage.setItem('remember_mode', loginMode.value);\r\n      } else {\r\n        localStorage.removeItem('remember_user');\r\n        localStorage.removeItem('remember_mode');\r\n      }\r\n      \r\n      message.success({\r\n        content: '登录成功',\r\n        duration: 1\r\n      });\r\n      \r\n      // 初始化WebSocket\r\n      try {\r\n        const webSocketModule = await import('@/utils/webSocketIntegration');\r\n        const webSocketIntegration = webSocketModule.default;\r\n        window.webSocketIntegration = webSocketIntegration;\r\n        \r\n        webSocketIntegration.reset();\r\n        setTimeout(() => {\r\n          webSocketIntegration.initialize();\r\n        }, 100);\r\n      } catch (error) {\r\n        console.error('WebSocket初始化失败:', error);\r\n      }\r\n      \r\n      // 触发菜单更新\r\n      try {\r\n        // 通知App.vue重新获取菜单\r\n        window.dispatchEvent(new CustomEvent('userLoggedIn'));\r\n      } catch (error) {\r\n        console.error('触发菜单更新失败:', error);\r\n      }\r\n      \r\n      // 根据用户类型跳转到不同页面\r\n      setTimeout(() => {\r\n        const isAdmin = localStorage.getItem('isAdmin') === 'true';\r\n        if (loginMode.value === 'admin' && isAdmin) {\r\n          router.push('/admin/dashboard');\r\n        } else {\r\n          router.push('/');\r\n        }\r\n      }, 500);\r\n      \r\n    } else {\r\n      message.error({\r\n        content: response.data.message || '登录失败，请检查用户名和密码',\r\n        duration: 1\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.error('登录错误:', error);\r\n    if (error.response && error.response.data && error.response.data.message) {\r\n      message.error({\r\n        content: error.response.data.message,\r\n        duration: 1\r\n      });\r\n    } else {\r\n      message.error({\r\n        content: '网络错误，请稍后重试',\r\n        duration: 1\r\n      });\r\n    }\r\n  } finally {\r\n    loading.value = false;\r\n  }\r\n};\r\n\r\nconst handleLoginFailed = (errorInfo) => {\r\n  console.log('表单验证失败:', errorInfo);\r\n};\r\n\r\n// 组件挂载时恢复记住的用户信息\r\nonMounted(() => {\r\n  const rememberedUser = localStorage.getItem('remember_user');\r\n  const rememberedMode = localStorage.getItem('remember_mode');\r\n  \r\n  if (rememberedUser) {\r\n    loginForm.username = rememberedUser;\r\n    loginForm.remember = true;\r\n  }\r\n  \r\n  if (rememberedMode) {\r\n    loginMode.value = rememberedMode;\r\n  }\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n/* 全局样式重置 */\r\n.login-page {\r\n  width: 100vw;\r\n  height: 100vh;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', sans-serif;\r\n  overflow: hidden;\r\n  animation: pageLoad 1.2s ease-out;\r\n}\r\n\r\n@keyframes pageLoad {\r\n  0% {\r\n    opacity: 0;\r\n    transform: scale(1.05);\r\n  }\r\n  100% {\r\n    opacity: 1;\r\n    transform: scale(1);\r\n  }\r\n}\r\n\r\n/* 背景装饰 */\r\n.background-decoration {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 1;\r\n}\r\n\r\n/* 粒子效果 */\r\n.particles {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 0;\r\n  left: 0;\r\n}\r\n\r\n.particle {\r\n  position: absolute;\r\n  background: rgba(255, 255, 255, 0.6);\r\n  border-radius: 50%;\r\n  animation: particleFloat 20s linear infinite;\r\n  pointer-events: none;\r\n}\r\n\r\n@keyframes particleFloat {\r\n  0% {\r\n    transform: translateY(100vh) rotate(0deg);\r\n    opacity: 0;\r\n  }\r\n  10% {\r\n    opacity: 1;\r\n  }\r\n  90% {\r\n    opacity: 1;\r\n  }\r\n  100% {\r\n    transform: translateY(-100px) rotate(360deg);\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n/* 光晕效果 */\r\n.glow {\r\n  position: absolute;\r\n  border-radius: 50%;\r\n  filter: blur(40px);\r\n  opacity: 0.3;\r\n  animation: glowPulse 8s ease-in-out infinite;\r\n}\r\n\r\n.glow-1 {\r\n  width: 300px;\r\n  height: 300px;\r\n  background: radial-gradient(circle, rgba(102, 126, 234, 0.4), transparent);\r\n  top: 10%;\r\n  left: 10%;\r\n  animation-delay: 0s;\r\n}\r\n\r\n.glow-2 {\r\n  width: 200px;\r\n  height: 200px;\r\n  background: radial-gradient(circle, rgba(118, 75, 162, 0.4), transparent);\r\n  top: 60%;\r\n  right: 15%;\r\n  animation-delay: 2s;\r\n}\r\n\r\n.glow-3 {\r\n  width: 150px;\r\n  height: 150px;\r\n  background: radial-gradient(circle, rgba(255, 255, 255, 0.2), transparent);\r\n  bottom: 20%;\r\n  left: 30%;\r\n  animation-delay: 4s;\r\n}\r\n\r\n@keyframes glowPulse {\r\n  0%, 100% {\r\n    transform: scale(1) rotate(0deg);\r\n    opacity: 0.3;\r\n  }\r\n  50% {\r\n    transform: scale(1.2) rotate(180deg);\r\n    opacity: 0.6;\r\n  }\r\n}\r\n\r\n.geometric-shapes {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.shape {\r\n  position: absolute;\r\n  opacity: 0.1;\r\n  animation: float 20s ease-in-out infinite;\r\n  will-change: transform;\r\n}\r\n\r\n.circle-1 {\r\n  width: 200px;\r\n  height: 200px;\r\n  border-radius: 50%;\r\n  background: rgba(255, 255, 255, 0.2);\r\n  top: 10%;\r\n  left: 10%;\r\n  animation-delay: 0s;\r\n}\r\n\r\n.circle-2 {\r\n  width: 150px;\r\n  height: 150px;\r\n  border-radius: 50%;\r\n  background: rgba(255, 255, 255, 0.15);\r\n  bottom: 20%;\r\n  right: 15%;\r\n  animation-delay: 5s;\r\n}\r\n\r\n.triangle-1 {\r\n  width: 0;\r\n  height: 0;\r\n  border-left: 60px solid transparent;\r\n  border-right: 60px solid transparent;\r\n  border-bottom: 100px solid rgba(255, 255, 255, 0.1);\r\n  top: 60%;\r\n  left: 5%;\r\n  animation-delay: 10s;\r\n}\r\n\r\n.square-1 {\r\n  width: 80px;\r\n  height: 80px;\r\n  background: rgba(255, 255, 255, 0.12);\r\n  transform: rotate(45deg);\r\n  top: 30%;\r\n  right: 10%;\r\n  animation-delay: 15s;\r\n}\r\n\r\n@keyframes float {\r\n  0%, 100% {\r\n    transform: translateY(0px) rotate(0deg) scale(1);\r\n  }\r\n  25% {\r\n    transform: translateY(-15px) rotate(45deg) scale(1.1);\r\n  }\r\n  50% {\r\n    transform: translateY(-20px) rotate(180deg) scale(0.9);\r\n  }\r\n  75% {\r\n    transform: translateY(-10px) rotate(270deg) scale(1.05);\r\n  }\r\n}\r\n\r\n.gradient-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: linear-gradient(45deg, rgba(102, 126, 234, 0.1), rgba(118, 75, 162, 0.1));\r\n}\r\n\r\n/* 主要内容区域 */\r\n.main-content {\r\n  position: relative;\r\n  z-index: 2;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 40px 20px;\r\n}\r\n\r\n/* 左侧信息面板 */\r\n.info-panel {\r\n  flex: 1;\r\n  padding: 60px 40px;\r\n  color: white;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  animation: slideInLeft 0.8s ease-out 0.2s both;\r\n  overflow: hidden;\r\n  height: 100%;\r\n}\r\n\r\n@keyframes slideInLeft {\r\n  0% {\r\n    opacity: 0;\r\n    transform: translateX(-50px);\r\n  }\r\n  100% {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n  }\r\n}\r\n\r\n.brand-section {\r\n  margin-bottom: 60px;\r\n}\r\n\r\n.logo {\r\n  margin-bottom: 24px;\r\n}\r\n\r\n.logo-icon {\r\n  font-size: 64px;\r\n  color: white;\r\n  filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.2));\r\n  animation: logoFloat 3s ease-in-out infinite, logoGlow 2s ease-in-out infinite alternate;\r\n  transition: transform 0.3s ease;\r\n}\r\n\r\n.logo-icon:hover {\r\n  transform: scale(1.1) rotate(5deg);\r\n}\r\n\r\n@keyframes logoFloat {\r\n  0%, 100% {\r\n    transform: translateY(0px);\r\n  }\r\n  50% {\r\n    transform: translateY(-10px);\r\n  }\r\n}\r\n\r\n@keyframes logoGlow {\r\n  0% {\r\n    filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.2));\r\n  }\r\n  100% {\r\n    filter: drop-shadow(0 6px 20px rgba(255, 255, 255, 0.3));\r\n  }\r\n}\r\n\r\n.brand-title {\r\n  font-size: 48px;\r\n  font-weight: 700;\r\n  margin: 0 0 16px 0;\r\n  background: linear-gradient(135deg, #ffffff, #f0f0f0);\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  background-clip: text;\r\n  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  animation: titleSlideIn 0.8s ease-out 0.4s both;\r\n}\r\n\r\n@keyframes titleSlideIn {\r\n  0% {\r\n    opacity: 0;\r\n    transform: translateY(30px);\r\n  }\r\n  100% {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n}\r\n\r\n.brand-subtitle {\r\n  font-size: 20px;\r\n  opacity: 0.9;\r\n  margin: 0;\r\n  font-weight: 300;\r\n}\r\n\r\n.features-list {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n}\r\n\r\n.feature-item {\r\n  display: flex;\r\n  align-items: flex-start;\r\n  gap: 16px;\r\n  font-size: 16px;\r\n  opacity: 0.9;\r\n  animation: featureSlideIn 0.6s ease-out both;\r\n  transition: transform 0.3s ease, opacity 0.3s ease;\r\n  padding: 16px 0;\r\n}\r\n\r\n.feature-item:nth-child(1) {\r\n  animation-delay: 0.6s;\r\n}\r\n\r\n.feature-item:nth-child(2) {\r\n  animation-delay: 0.8s;\r\n}\r\n\r\n.feature-item:nth-child(3) {\r\n  animation-delay: 1s;\r\n}\r\n\r\n.feature-item:hover {\r\n  transform: translateX(10px);\r\n  opacity: 1;\r\n}\r\n\r\n@keyframes featureSlideIn {\r\n  0% {\r\n    opacity: 0;\r\n    transform: translateX(-30px);\r\n  }\r\n  100% {\r\n    opacity: 0.9;\r\n    transform: translateX(0);\r\n  }\r\n}\r\n\r\n.feature-icon-wrapper {\r\n  flex-shrink: 0;\r\n  width: 48px;\r\n  height: 48px;\r\n  background: rgba(255, 255, 255, 0.15);\r\n  border-radius: 12px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  backdrop-filter: blur(10px);\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.feature-item:hover .feature-icon-wrapper {\r\n  background: rgba(255, 255, 255, 0.25);\r\n  transform: scale(1.1);\r\n}\r\n\r\n.feature-icon {\r\n  font-size: 20px;\r\n  color: #52c41a;\r\n}\r\n\r\n.feature-content {\r\n  flex: 1;\r\n}\r\n\r\n.feature-title {\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  margin: 0 0 8px 0;\r\n  color: white;\r\n}\r\n\r\n.feature-desc {\r\n  font-size: 14px;\r\n  margin: 0;\r\n  opacity: 0.8;\r\n  line-height: 1.5;\r\n}\r\n\r\n/* 右侧登录面板 */\r\n.login-panel {\r\n  flex: 0 0 480px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  animation: slideInRight 0.8s ease-out 0.3s both;\r\n  overflow: hidden;\r\n  height: 100%;\r\n  padding: 20px;\r\n}\r\n\r\n@keyframes slideInRight {\r\n  0% {\r\n    opacity: 0;\r\n    transform: translateX(50px);\r\n  }\r\n  100% {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n  }\r\n}\r\n\r\n.login-container {\r\n  width: 100%;\r\n  max-width: 400px;\r\n  background: rgba(255, 255, 255, 0.95);\r\n  backdrop-filter: blur(20px);\r\n  border-radius: 24px;\r\n  padding: 48px 40px;\r\n  box-shadow: \r\n    0 20px 40px rgba(0, 0, 0, 0.1),\r\n    0 0 0 1px rgba(255, 255, 255, 0.2);\r\n  border: 1px solid rgba(255, 255, 255, 0.3);\r\n  animation: containerFloat 0.8s ease-out 0.5s both, containerPulse 4s ease-in-out infinite 2s;\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n}\r\n\r\n.login-container:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: \r\n    0 30px 60px rgba(0, 0, 0, 0.15),\r\n    0 0 0 1px rgba(255, 255, 255, 0.3);\r\n}\r\n\r\n@keyframes containerFloat {\r\n  0% {\r\n    opacity: 0;\r\n    transform: translateY(30px) scale(0.95);\r\n  }\r\n  100% {\r\n    opacity: 1;\r\n    transform: translateY(0) scale(1);\r\n  }\r\n}\r\n\r\n@keyframes containerPulse {\r\n  0%, 100% {\r\n    box-shadow: \r\n      0 20px 40px rgba(0, 0, 0, 0.1),\r\n      0 0 0 1px rgba(255, 255, 255, 0.2);\r\n  }\r\n  50% {\r\n    box-shadow: \r\n      0 25px 50px rgba(102, 126, 234, 0.15),\r\n      0 0 0 1px rgba(102, 126, 234, 0.3);\r\n  }\r\n}\r\n\r\n/* 登录头部 */\r\n.login-header {\r\n  text-align: center;\r\n  margin-bottom: 32px;\r\n}\r\n\r\n.login-title {\r\n  font-size: 32px;\r\n  font-weight: 700;\r\n  color: #1a1a1a;\r\n  margin: 0 0 8px 0;\r\n  background: linear-gradient(135deg, #667eea, #764ba2);\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  background-clip: text;\r\n}\r\n\r\n.login-subtitle {\r\n  font-size: 16px;\r\n  color: #666;\r\n  margin: 0;\r\n  font-weight: 400;\r\n}\r\n\r\n/* 模式选择器 */\r\n.mode-selector {\r\n  margin-bottom: 32px;\r\n}\r\n\r\n.mode-options {\r\n  display: flex;\r\n  background: #f8f9fa;\r\n  border-radius: 12px;\r\n  padding: 4px;\r\n  gap: 4px;\r\n}\r\n\r\n.mode-option {\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 8px;\r\n  padding: 12px 16px;\r\n  border: none;\r\n  background: transparent;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  color: #666;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n\r\n.mode-option::before {\r\n  content: '';\r\n  position: absolute;\r\n  top: 0;\r\n  left: -100%;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: linear-gradient(90deg, transparent, rgba(102, 126, 234, 0.1), transparent);\r\n  transition: left 0.6s ease;\r\n}\r\n\r\n.mode-option:hover::before {\r\n  left: 100%;\r\n}\r\n\r\n.mode-option.active {\r\n  background: white;\r\n  color: #667eea;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n  transform: translateY(-1px);\r\n}\r\n\r\n.mode-option:hover:not(.active) {\r\n  color: #333;\r\n  background: rgba(255, 255, 255, 0.5);\r\n}\r\n\r\n.mode-icon {\r\n  font-size: 16px;\r\n}\r\n\r\n/* 登录表单 */\r\n.login-form {\r\n  margin-bottom: 24px;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 24px;\r\n}\r\n\r\n.form-label {\r\n  display: block;\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  color: #333;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.input-group {\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\r\n}\r\n\r\n.input-group.input-focused {\r\n  transform: scale(1.02);\r\n}\r\n\r\n.input-group.input-focused .input-prefix-icon {\r\n  color: #667eea;\r\n  transform: scale(1.1);\r\n}\r\n\r\n.input-prefix-icon {\r\n  position: absolute;\r\n  left: 16px;\r\n  color: #999;\r\n  font-size: 16px;\r\n  z-index: 1;\r\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\r\n}\r\n\r\n.form-input {\r\n  padding-left: 48px !important;\r\n  height: 48px;\r\n  border-radius: 12px;\r\n  border: 2px solid #e8e8e8;\r\n  font-size: 16px;\r\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\r\n  background: rgba(255, 255, 255, 0.8);\r\n  position: relative;\r\n}\r\n\r\n.form-input:hover {\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 4px 12px rgba(102, 126, 234, 0.1);\r\n}\r\n\r\n.form-input:focus {\r\n  border-color: #667eea;\r\n  box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1), 0 8px 25px rgba(102, 126, 234, 0.15);\r\n  background: white;\r\n  transform: translateY(-3px);\r\n}\r\n\r\n.form-options {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 32px;\r\n  font-size: 14px;\r\n}\r\n\r\n.remember-checkbox {\r\n  color: #666;\r\n}\r\n\r\n.forgot-link {\r\n  color: #667eea;\r\n  text-decoration: none;\r\n  transition: color 0.3s ease;\r\n}\r\n\r\n.forgot-link:hover {\r\n  color: #5a67d8;\r\n}\r\n\r\n.form-submit {\r\n  margin-bottom: 0;\r\n}\r\n\r\n.login-button {\r\n  width: 100%;\r\n  height: 52px;\r\n  border-radius: 12px;\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n  border: none;\r\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\r\n  position: relative;\r\n  overflow: hidden;\r\n  animation: buttonPulse 2s ease-in-out infinite 3s;\r\n}\r\n\r\n@keyframes buttonPulse {\r\n  0%, 100% {\r\n    transform: scale(1);\r\n  }\r\n  50% {\r\n    transform: scale(1.02);\r\n  }\r\n}\r\n\r\n.login-button::before {\r\n  content: '';\r\n  position: absolute;\r\n  top: 0;\r\n  left: -100%;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);\r\n  transition: left 0.5s ease;\r\n}\r\n\r\n.login-button:hover::before {\r\n  left: 100%;\r\n}\r\n\r\n.login-button:hover {\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);\r\n}\r\n\r\n.login-button.button-pressed {\r\n  transform: translateY(0px) scale(0.98);\r\n  box-shadow: 0 4px 15px rgba(102, 126, 234, 0.2);\r\n}\r\n\r\n.button-icon {\r\n  transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);\r\n}\r\n\r\n.login-button:hover .button-icon {\r\n  transform: scale(1.1) rotate(5deg);\r\n}\r\n\r\n.button-text {\r\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\r\n}\r\n\r\n.login-button:hover .button-text {\r\n  letter-spacing: 0.5px;\r\n}\r\n\r\n/* 登录底部 */\r\n.login-footer {\r\n  text-align: center;\r\n  padding-top: 24px;\r\n  border-top: 1px solid #f0f0f0;\r\n}\r\n\r\n.security-badge {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 8px;\r\n  color: #52c41a;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n}\r\n\r\n.security-icon {\r\n  font-size: 16px;\r\n}\r\n\r\n/* 页面底部 */\r\n.page-footer {\r\n  position: absolute;\r\n  bottom: 20px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  z-index: 2;\r\n  color: rgba(255, 255, 255, 0.8);\r\n  font-size: 14px;\r\n  text-align: center;\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 1024px) {\r\n  .main-content {\r\n    flex-direction: column;\r\n    padding: 20px;\r\n  }\r\n  \r\n  .info-panel {\r\n    flex: none;\r\n    padding: 40px 20px;\r\n    text-align: center;\r\n  }\r\n  \r\n  .brand-title {\r\n    font-size: 36px;\r\n  }\r\n  \r\n  .login-panel {\r\n    flex: none;\r\n    width: 100%;\r\n    max-width: 400px;\r\n  }\r\n}\r\n\r\n/* 页面切换动画 */\r\n.page-transition-enter-active,\r\n.page-transition-leave-active {\r\n  transition: all 0.8s cubic-bezier(0.4, 0, 0.2, 1);\r\n}\r\n\r\n.page-transition-enter-from {\r\n  opacity: 0;\r\n  transform: scale(1.1) translateY(30px);\r\n}\r\n\r\n.page-transition-leave-to {\r\n  opacity: 0;\r\n  transform: scale(0.9) translateY(-30px);\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .login-page {\r\n    width: 100vw;\r\n    height: 100vh;\r\n    overflow: hidden;\r\n  }\r\n  \r\n  .login-container {\r\n    flex-direction: column;\r\n    height: 100%;\r\n    overflow: hidden;\r\n    padding: 0;\r\n  }\r\n  \r\n  .info-panel {\r\n    flex: 0 0 auto;\r\n    height: 40%;\r\n    padding: 20px;\r\n    overflow: hidden;\r\n    animation-delay: 0s;\r\n  }\r\n  \r\n  .brand-title {\r\n    font-size: 28px;\r\n    margin-bottom: 8px;\r\n  }\r\n  \r\n  .brand-subtitle {\r\n    font-size: 14px;\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .features-list {\r\n    gap: 8px;\r\n  }\r\n  \r\n  .feature-item {\r\n    padding: 8px 0;\r\n  }\r\n  \r\n  .feature-title {\r\n    font-size: 14px;\r\n  }\r\n  \r\n  .feature-desc {\r\n    font-size: 12px;\r\n  }\r\n  \r\n  .feature-icon-wrapper {\r\n    width: 36px;\r\n    height: 36px;\r\n  }\r\n  \r\n  .login-panel {\r\n    flex: 1;\r\n    height: 60%;\r\n    padding: 20px;\r\n    overflow: hidden;\r\n    animation-delay: 0.1s;\r\n  }\r\n  \r\n  .login-form {\r\n    padding: 24px 20px;\r\n    border-radius: 16px;\r\n  }\r\n  \r\n  .brand-title {\r\n    font-size: 28px;\r\n  }\r\n  \r\n  .login-title {\r\n    font-size: 24px;\r\n  }\r\n  \r\n  .form-input {\r\n    height: 44px;\r\n    font-size: 15px;\r\n  }\r\n  \r\n  .login-button {\r\n    height: 48px;\r\n    font-size: 15px;\r\n  }\r\n  \r\n  .particle {\r\n    display: none;\r\n  }\r\n  \r\n  .glow {\r\n    opacity: 0.1;\r\n  }\r\n}\r\n\r\n@media (max-width: 480px) {\r\n  .main-content {\r\n    padding: 16px;\r\n  }\r\n  \r\n  .info-panel {\r\n    padding: 20px 16px;\r\n  }\r\n  \r\n  .login-container {\r\n    padding: 24px 20px;\r\n  }\r\n  \r\n  .brand-title {\r\n    font-size: 24px;\r\n  }\r\n  \r\n  .features-list {\r\n    gap: 16px;\r\n  }\r\n  \r\n  .feature-item {\r\n    font-size: 16px;\r\n  }\r\n}\r\n\r\n/* Ant Design 组件样式覆盖 */\r\n:deep(.ant-form-item) {\r\n  margin-bottom: 0;\r\n}\r\n\r\n:deep(.ant-form-item-label) {\r\n  padding: 0;\r\n}\r\n\r\n:deep(.ant-input-affix-wrapper) {\r\n  border-radius: 12px;\r\n  border: 2px solid #e8e8e8;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n:deep(.ant-input-affix-wrapper:focus-within) {\r\n  border-color: #667eea;\r\n  box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);\r\n}\r\n\r\n:deep(.ant-input-password) {\r\n  padding-left: 48px;\r\n  height: 48px;\r\n  font-size: 16px;\r\n}\r\n\r\n:deep(.ant-checkbox-wrapper) {\r\n  color: #666;\r\n  font-size: 14px;\r\n}\r\n\r\n:deep(.ant-checkbox-checked .ant-checkbox-inner) {\r\n  background-color: #667eea;\r\n  border-color: #667eea;\r\n}\r\n\r\n:deep(.ant-btn-loading-icon) {\r\n  margin-right: 8px;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}