{"ast":null,"code":"import { ref, reactive, watch } from 'vue';\nexport default {\n  __name: 'CardConfigModal',\n  props: {\n    open: {\n      type: Boolean,\n      default: false\n    },\n    cardData: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  emits: ['update:open', 'save'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const props = __props;\n    const emit = __emit;\n    const visible = ref(false);\n    const formData = reactive({\n      title: '',\n      dataType: '',\n      dataUrl: '',\n      chartType: 'bar',\n      topCount: 5,\n      unit: '%',\n      color: '#1890ff',\n      refreshInterval: 60,\n      enableAlert: false,\n      alertThreshold: 80\n    });\n    const colorOptions = ['#1890ff', '#52c41a', '#faad14', '#f5222d', '#722ed1', '#13c2c2', '#eb2f96', '#fa8c16', '#2f54eb', '#87d068', '#ffc53d', '#ff7875'];\n    watch(() => props.open, newVal => {\n      visible.value = newVal;\n      if (newVal && props.cardData) {\n        Object.assign(formData, {\n          title: props.cardData.title || '',\n          dataType: getDataTypeFromTitle(props.cardData.title),\n          dataUrl: props.cardData.dataUrl || '',\n          chartType: props.cardData.chartType || 'bar',\n          topCount: props.cardData.data?.length || 5,\n          unit: props.cardData.unit || '%',\n          color: props.cardData.color || '#1890ff',\n          refreshInterval: props.cardData.refreshInterval || 60,\n          enableAlert: props.cardData.enableAlert || false,\n          alertThreshold: props.cardData.alertThreshold || 80\n        });\n      }\n    });\n    watch(visible, newVal => {\n      emit('update:open', newVal);\n    });\n\n    // 根据标题推测数据类型\n    const getDataTypeFromTitle = title => {\n      if (!title) return '';\n      if (title.includes('CPU')) return 'cpu';\n      if (title.includes('内存')) return 'memory';\n      if (title.includes('磁盘') || title.includes('文件')) return 'disk';\n      if (title.includes('网络')) return 'network';\n      if (title.includes('进程')) return 'process';\n      if (title.includes('连接')) return 'connection';\n      if (title.includes('响应')) return 'response_time';\n      if (title.includes('错误')) return 'error_rate';\n      return 'custom';\n    };\n    const handleSave = () => {\n      // 验证必填字段\n      if (!formData.title || !formData.dataType) {\n        return;\n      }\n\n      // 构造卡片配置\n      const cardConfig = {\n        id: props.cardData.id || `card_${Date.now()}`,\n        title: formData.title,\n        type: 'chart',\n        chartType: formData.chartType,\n        dataType: formData.dataType,\n        dataUrl: formData.dataUrl,\n        topCount: formData.topCount,\n        unit: formData.unit,\n        color: formData.color,\n        refreshInterval: formData.refreshInterval,\n        enableAlert: formData.enableAlert,\n        alertThreshold: formData.alertThreshold,\n        data: generateMockData() // 生成模拟数据\n      };\n      emit('save', cardConfig);\n      visible.value = false;\n    };\n    const handleCancel = () => {\n      visible.value = false;\n    };\n\n    // 生成模拟数据\n    const generateMockData = () => {\n      const count = formData.topCount;\n      const data = [];\n      for (let i = 0; i < count; i++) {\n        data.push({\n          name: `${getServerPrefix()}-${String(i + 1).padStart(2, '0')}`,\n          value: Math.floor(Math.random() * 100),\n          detail: getDetailInfo()\n        });\n      }\n\n      // 按值排序\n      return data.sort((a, b) => b.value - a.value);\n    };\n    const getServerPrefix = () => {\n      const prefixes = ['web-server', 'db-server', 'app-server', 'cache-server', 'proxy-server'];\n      return prefixes[Math.floor(Math.random() * prefixes.length)];\n    };\n    const getDetailInfo = () => {\n      switch (formData.dataType) {\n        case 'cpu':\n          return 'CPU负载';\n        case 'memory':\n          return '内存占用';\n        case 'disk':\n          return '磁盘占用';\n        case 'network':\n          return '网络带宽';\n        case 'process':\n          return '进程数量';\n        case 'connection':\n          return '连接数量';\n        case 'response_time':\n          return '平均响应时间';\n        case 'error_rate':\n          return '错误率';\n        default:\n          return '自定义指标';\n      }\n    };\n    const __returned__ = {\n      props,\n      emit,\n      visible,\n      formData,\n      colorOptions,\n      getDataTypeFromTitle,\n      handleSave,\n      handleCancel,\n      generateMockData,\n      getServerPrefix,\n      getDetailInfo,\n      ref,\n      reactive,\n      watch\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","watch","props","__props","emit","__emit","visible","formData","title","dataType","dataUrl","chartType","topCount","unit","color","refreshInterval","enableAlert","alertThreshold","colorOptions","open","newVal","value","cardData","Object","assign","getDataTypeFromTitle","data","length","includes","handleSave","cardConfig","id","Date","now","type","generateMockData","handleCancel","count","i","push","name","getServerPrefix","String","padStart","Math","floor","random","detail","getDetailInfo","sort","a","b","prefixes"],"sources":["E:/A_project/yuanchi/AIops/frontend/src/components/admin/CardConfigModal.vue"],"sourcesContent":["<template>\r\n  <a-modal\r\n    v-model:open=\"visible\"\r\n    title=\"自定义监控卡片\"\r\n    width=\"600px\"\r\n    @ok=\"handleSave\"\r\n    @cancel=\"handleCancel\"\r\n  >\r\n    <a-form\r\n      :model=\"formData\"\r\n      :label-col=\"{ span: 6 }\"\r\n      :wrapper-col=\"{ span: 18 }\"\r\n    >\r\n      <a-form-item label=\"卡片标题\" required>\r\n        <a-input v-model:value=\"formData.title\" placeholder=\"请输入卡片标题\" />\r\n      </a-form-item>\r\n      \r\n      <a-form-item label=\"数据类型\" required>\r\n        <a-select v-model:value=\"formData.dataType\" placeholder=\"请选择数据类型\">\r\n          <a-select-option value=\"cpu\">CPU使用率</a-select-option>\r\n          <a-select-option value=\"memory\">内存使用率</a-select-option>\r\n          <a-select-option value=\"disk\">磁盘使用率</a-select-option>\r\n          <a-select-option value=\"network\">网络流量</a-select-option>\r\n          <a-select-option value=\"process\">进程数量</a-select-option>\r\n          <a-select-option value=\"connection\">连接数</a-select-option>\r\n          <a-select-option value=\"response_time\">响应时间</a-select-option>\r\n          <a-select-option value=\"error_rate\">错误率</a-select-option>\r\n          <a-select-option value=\"custom\">自定义</a-select-option>\r\n        </a-select>\r\n      </a-form-item>\r\n      \r\n      <a-form-item v-if=\"formData.dataType === 'custom'\" label=\"数据源URL\">\r\n        <a-input v-model:value=\"formData.dataUrl\" placeholder=\"请输入数据API地址\" />\r\n      </a-form-item>\r\n      \r\n      <a-form-item label=\"显示类型\" required>\r\n        <a-radio-group v-model:value=\"formData.chartType\">\r\n          <a-radio value=\"bar\">条形图</a-radio>\r\n          <a-radio value=\"line\">折线图</a-radio>\r\n          <a-radio value=\"list\">列表</a-radio>\r\n        </a-radio-group>\r\n      </a-form-item>\r\n      \r\n      <a-form-item label=\"显示数量\">\r\n        <a-input-number \r\n          v-model:value=\"formData.topCount\" \r\n          :min=\"3\" \r\n          :max=\"10\" \r\n          placeholder=\"显示前N名\"\r\n        />\r\n      </a-form-item>\r\n      \r\n      <a-form-item label=\"单位\">\r\n        <a-input v-model:value=\"formData.unit\" placeholder=\"如：%、MB/s、ms等\" />\r\n      </a-form-item>\r\n      \r\n      <a-form-item label=\"主题色\">\r\n        <div class=\"color-picker\">\r\n          <div \r\n            v-for=\"color in colorOptions\" \r\n            :key=\"color\"\r\n            class=\"color-item\"\r\n            :class=\"{ active: formData.color === color }\"\r\n            :style=\"{ backgroundColor: color }\"\r\n            @click=\"formData.color = color\"\r\n          ></div>\r\n        </div>\r\n      </a-form-item>\r\n      \r\n      <a-form-item label=\"刷新间隔\">\r\n        <a-select v-model:value=\"formData.refreshInterval\" placeholder=\"数据刷新频率\">\r\n          <a-select-option :value=\"30\">30秒</a-select-option>\r\n          <a-select-option :value=\"60\">1分钟</a-select-option>\r\n          <a-select-option :value=\"300\">5分钟</a-select-option>\r\n          <a-select-option :value=\"600\">10分钟</a-select-option>\r\n          <a-select-option :value=\"1800\">30分钟</a-select-option>\r\n        </a-select>\r\n      </a-form-item>\r\n      \r\n      <a-form-item label=\"启用告警\">\r\n        <a-switch v-model:checked=\"formData.enableAlert\" />\r\n      </a-form-item>\r\n      \r\n      <a-form-item v-if=\"formData.enableAlert\" label=\"告警阈值\">\r\n        <a-input-number \r\n          v-model:value=\"formData.alertThreshold\" \r\n          :min=\"0\" \r\n          :max=\"100\" \r\n          placeholder=\"超过此值时告警\"\r\n        />\r\n      </a-form-item>\r\n    </a-form>\r\n  </a-modal>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, watch } from 'vue';\r\n\r\nconst props = defineProps({\r\n  open: {\r\n    type: Boolean,\r\n    default: false\r\n  },\r\n  cardData: {\r\n    type: Object,\r\n    default: () => ({})\r\n  }\r\n});\r\n\r\nconst emit = defineEmits(['update:open', 'save']);\r\n\r\nconst visible = ref(false);\r\n\r\nconst formData = reactive({\r\n  title: '',\r\n  dataType: '',\r\n  dataUrl: '',\r\n  chartType: 'bar',\r\n  topCount: 5,\r\n  unit: '%',\r\n  color: '#1890ff',\r\n  refreshInterval: 60,\r\n  enableAlert: false,\r\n  alertThreshold: 80\r\n});\r\n\r\nconst colorOptions = [\r\n  '#1890ff', '#52c41a', '#faad14', '#f5222d', \r\n  '#722ed1', '#13c2c2', '#eb2f96', '#fa8c16',\r\n  '#2f54eb', '#87d068', '#ffc53d', '#ff7875'\r\n];\r\n\r\nwatch(() => props.open, (newVal) => {\r\n  visible.value = newVal;\r\n  if (newVal && props.cardData) {\r\n    Object.assign(formData, {\r\n      title: props.cardData.title || '',\r\n      dataType: getDataTypeFromTitle(props.cardData.title),\r\n      dataUrl: props.cardData.dataUrl || '',\r\n      chartType: props.cardData.chartType || 'bar',\r\n      topCount: props.cardData.data?.length || 5,\r\n      unit: props.cardData.unit || '%',\r\n      color: props.cardData.color || '#1890ff',\r\n      refreshInterval: props.cardData.refreshInterval || 60,\r\n      enableAlert: props.cardData.enableAlert || false,\r\n      alertThreshold: props.cardData.alertThreshold || 80\r\n    });\r\n  }\r\n});\r\n\r\nwatch(visible, (newVal) => {\r\n  emit('update:open', newVal);\r\n});\r\n\r\n// 根据标题推测数据类型\r\nconst getDataTypeFromTitle = (title) => {\r\n  if (!title) return '';\r\n  \r\n  if (title.includes('CPU')) return 'cpu';\r\n  if (title.includes('内存')) return 'memory';\r\n  if (title.includes('磁盘') || title.includes('文件')) return 'disk';\r\n  if (title.includes('网络')) return 'network';\r\n  if (title.includes('进程')) return 'process';\r\n  if (title.includes('连接')) return 'connection';\r\n  if (title.includes('响应')) return 'response_time';\r\n  if (title.includes('错误')) return 'error_rate';\r\n  \r\n  return 'custom';\r\n};\r\n\r\nconst handleSave = () => {\r\n  // 验证必填字段\r\n  if (!formData.title || !formData.dataType) {\r\n    return;\r\n  }\r\n  \r\n  // 构造卡片配置\r\n  const cardConfig = {\r\n    id: props.cardData.id || `card_${Date.now()}`,\r\n    title: formData.title,\r\n    type: 'chart',\r\n    chartType: formData.chartType,\r\n    dataType: formData.dataType,\r\n    dataUrl: formData.dataUrl,\r\n    topCount: formData.topCount,\r\n    unit: formData.unit,\r\n    color: formData.color,\r\n    refreshInterval: formData.refreshInterval,\r\n    enableAlert: formData.enableAlert,\r\n    alertThreshold: formData.alertThreshold,\r\n    data: generateMockData() // 生成模拟数据\r\n  };\r\n  \r\n  emit('save', cardConfig);\r\n  visible.value = false;\r\n};\r\n\r\nconst handleCancel = () => {\r\n  visible.value = false;\r\n};\r\n\r\n// 生成模拟数据\r\nconst generateMockData = () => {\r\n  const count = formData.topCount;\r\n  const data = [];\r\n  \r\n  for (let i = 0; i < count; i++) {\r\n    data.push({\r\n      name: `${getServerPrefix()}-${String(i + 1).padStart(2, '0')}`,\r\n      value: Math.floor(Math.random() * 100),\r\n      detail: getDetailInfo()\r\n    });\r\n  }\r\n  \r\n  // 按值排序\r\n  return data.sort((a, b) => b.value - a.value);\r\n};\r\n\r\nconst getServerPrefix = () => {\r\n  const prefixes = ['web-server', 'db-server', 'app-server', 'cache-server', 'proxy-server'];\r\n  return prefixes[Math.floor(Math.random() * prefixes.length)];\r\n};\r\n\r\nconst getDetailInfo = () => {\r\n  switch (formData.dataType) {\r\n    case 'cpu': return 'CPU负载';\r\n    case 'memory': return '内存占用';\r\n    case 'disk': return '磁盘占用';\r\n    case 'network': return '网络带宽';\r\n    case 'process': return '进程数量';\r\n    case 'connection': return '连接数量';\r\n    case 'response_time': return '平均响应时间';\r\n    case 'error_rate': return '错误率';\r\n    default: return '自定义指标';\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.color-picker {\r\n  display: flex;\r\n  gap: 8px;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.color-item {\r\n  width: 32px;\r\n  height: 32px;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  border: 2px solid transparent;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.color-item:hover {\r\n  transform: scale(1.1);\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.color-item.active {\r\n  border-color: #1890ff;\r\n  box-shadow: 0 0 0 2px rgba(24, 144, 255, 0.2);\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}