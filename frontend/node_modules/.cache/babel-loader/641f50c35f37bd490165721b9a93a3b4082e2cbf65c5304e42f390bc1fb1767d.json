{"ast":null,"code":"import { computed } from 'vue';\nimport { ArrowUpOutlined, ArrowDownOutlined } from '@ant-design/icons-vue';\nimport * as Icons from '@ant-design/icons-vue';\nexport default {\n  __name: 'MetricCard',\n  props: {\n    metric: {\n      type: Object,\n      required: true,\n      validator: value => {\n        return value.label && value.value !== undefined;\n      }\n    }\n  },\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const props = __props;\n    const iconComponent = computed(() => {\n      if (!props.metric.icon) return 'div';\n      if (typeof props.metric.icon === 'string') {\n        return Icons[props.metric.icon] || 'div';\n      }\n      return props.metric.icon;\n    });\n    const iconBgColor = computed(() => {\n      return props.metric.iconBgColor || 'linear-gradient(135deg, #e6f7ff, #bae7ff)';\n    });\n    const iconColor = computed(() => {\n      return props.metric.iconColor || '#1890ff';\n    });\n    const formatValue = value => {\n      if (value === null || value === undefined) {\n        return '-';\n      }\n      if (typeof value === 'number') {\n        if (value >= 10000) {\n          return (value / 10000).toFixed(1) + '万';\n        }\n        if (value >= 1000) {\n          return (value / 1000).toFixed(1) + 'k';\n        }\n        return value.toString();\n      }\n      if (typeof value === 'object') {\n        return JSON.stringify(value);\n      }\n      return String(value);\n    };\n    const __returned__ = {\n      props,\n      iconComponent,\n      iconBgColor,\n      iconColor,\n      formatValue,\n      computed,\n      get ArrowUpOutlined() {\n        return ArrowUpOutlined;\n      },\n      get ArrowDownOutlined() {\n        return ArrowDownOutlined;\n      },\n      get Icons() {\n        return Icons;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["computed","ArrowUpOutlined","ArrowDownOutlined","Icons","props","__props","iconComponent","metric","icon","iconBgColor","iconColor","formatValue","value","undefined","toFixed","toString","JSON","stringify","String"],"sources":["E:/A_project/yuanchi/AIops/frontend/src/components/business/MetricCard.vue"],"sourcesContent":["<template>\r\n  <div class=\"metric-card\">\r\n    <div class=\"metric-icon\" :style=\"{ backgroundColor: iconBgColor }\">\r\n      <component :is=\"iconComponent\" :style=\"{ color: iconColor }\" />\r\n    </div>\r\n    <div class=\"metric-content\">\r\n      <div class=\"metric-label\">{{ metric.label }}</div>\r\n      <div class=\"metric-value\">{{ formatValue(metric.value) }}</div>\r\n      <div class=\"metric-change\" v-if=\"metric.change\">\r\n        <span :class=\"['change-indicator', metric.trend]\">\r\n          <ArrowUpOutlined v-if=\"metric.trend === 'up'\" />\r\n          <ArrowDownOutlined v-if=\"metric.trend === 'down'\" />\r\n          {{ metric.change }}\r\n        </span>\r\n        {{ metric.changeLabel || '较上月' }}\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed } from 'vue';\r\nimport { ArrowUpOutlined, ArrowDownOutlined } from '@ant-design/icons-vue';\r\nimport * as Icons from '@ant-design/icons-vue';\r\n\r\nconst props = defineProps({\r\n  metric: {\r\n    type: Object,\r\n    required: true,\r\n    validator: (value) => {\r\n      return value.label && value.value !== undefined;\r\n    }\r\n  }\r\n});\r\n\r\nconst iconComponent = computed(() => {\r\n  if (!props.metric.icon) return 'div';\r\n  \r\n  if (typeof props.metric.icon === 'string') {\r\n    return Icons[props.metric.icon] || 'div';\r\n  }\r\n  \r\n  return props.metric.icon;\r\n});\r\n\r\nconst iconBgColor = computed(() => {\r\n  return props.metric.iconBgColor || 'linear-gradient(135deg, #e6f7ff, #bae7ff)';\r\n});\r\n\r\nconst iconColor = computed(() => {\r\n  return props.metric.iconColor || '#1890ff';\r\n});\r\n\r\nconst formatValue = (value) => {\r\n  if (value === null || value === undefined) {\r\n    return '-';\r\n  }\r\n  \r\n  if (typeof value === 'number') {\r\n    if (value >= 10000) {\r\n      return (value / 10000).toFixed(1) + '万';\r\n    }\r\n    if (value >= 1000) {\r\n      return (value / 1000).toFixed(1) + 'k';\r\n    }\r\n    return value.toString();\r\n  }\r\n  \r\n  if (typeof value === 'object') {\r\n    return JSON.stringify(value);\r\n  }\r\n  \r\n  return String(value);\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.metric-card {\r\n  background: linear-gradient(135deg, #ffffff 0%, #fafbff 100%);\r\n  border-radius: 12px;\r\n  padding: 18px;\r\n  box-shadow: 0 2px 12px rgba(24, 144, 255, 0.06);\r\n  border: 1px solid rgba(24, 144, 255, 0.04);\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 16px;\r\n  transition: all 0.3s ease;\r\n  position: relative;\r\n  overflow: hidden;\r\n  min-height: 90px;\r\n  backdrop-filter: blur(10px);\r\n}\r\n\r\n.metric-card::before {\r\n  content: '';\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  height: 2px;\r\n  background: linear-gradient(90deg, #1890ff, #40a9ff, #69c0ff);\r\n  opacity: 0;\r\n  transition: opacity 0.3s ease;\r\n}\r\n\r\n.metric-card:hover {\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 6px 24px rgba(24, 144, 255, 0.12);\r\n}\r\n\r\n.metric-card:hover::before {\r\n  opacity: 1;\r\n}\r\n\r\n.metric-card::after {\r\n  content: '';\r\n  position: absolute;\r\n  top: -50%;\r\n  right: -50%;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: radial-gradient(circle, rgba(24, 144, 255, 0.03) 0%, transparent 70%);\r\n  opacity: 0;\r\n  transition: opacity 0.3s ease;\r\n  pointer-events: none;\r\n}\r\n\r\n.metric-card:hover::after {\r\n  opacity: 1;\r\n}\r\n\r\n.metric-icon {\r\n  width: 48px;\r\n  height: 48px;\r\n  background: linear-gradient(135deg, #e6f7ff, #bae7ff);\r\n  border-radius: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-shrink: 0;\r\n}\r\n\r\n.metric-icon .anticon {\r\n  font-size: 22px;\r\n  color: #1890ff;\r\n}\r\n\r\n.metric-content {\r\n  flex: 1;\r\n}\r\n\r\n.metric-label {\r\n  color: #8c8c8c;\r\n  font-size: 13px;\r\n  font-weight: 500;\r\n  margin-bottom: 3px;\r\n  line-height: 1.2;\r\n}\r\n\r\n.metric-value {\r\n  font-size: 26px;\r\n  font-weight: 700;\r\n  color: #262626;\r\n  line-height: 1.1;\r\n  margin-bottom: 4px;\r\n}\r\n\r\n.metric-change {\r\n  font-size: 12px;\r\n  color: #8c8c8c;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 4px;\r\n  line-height: 1.2;\r\n}\r\n\r\n.change-indicator {\r\n  display: inline-flex;\r\n  align-items: center;\r\n  gap: 2px;\r\n  font-weight: 600;\r\n  padding: 2px 6px;\r\n  border-radius: 6px;\r\n  font-size: 11px;\r\n  backdrop-filter: blur(4px);\r\n}\r\n\r\n.change-indicator.up {\r\n  color: #52c41a;\r\n  background: rgba(82, 196, 26, 0.1);\r\n}\r\n\r\n.change-indicator.down {\r\n  color: #ff4d4f;\r\n  background: rgba(255, 77, 79, 0.1);\r\n}\r\n\r\n.change-indicator .anticon {\r\n  font-size: 10px;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .metric-card {\r\n    padding: 16px;\r\n    gap: 14px;\r\n    min-height: 80px;\r\n  }\r\n  \r\n  .metric-icon {\r\n    width: 42px;\r\n    height: 42px;\r\n  }\r\n  \r\n  .metric-icon .anticon {\r\n    font-size: 18px;\r\n  }\r\n  \r\n  .metric-value {\r\n    font-size: 22px;\r\n  }\r\n  \r\n  .metric-label {\r\n    font-size: 12px;\r\n  }\r\n}\r\n\r\n@media (max-width: 480px) {\r\n  .metric-card {\r\n    padding: 14px;\r\n    gap: 12px;\r\n    min-height: 70px;\r\n  }\r\n  \r\n  .metric-icon {\r\n    width: 36px;\r\n    height: 36px;\r\n  }\r\n  \r\n  .metric-icon .anticon {\r\n    font-size: 16px;\r\n  }\r\n  \r\n  .metric-value {\r\n    font-size: 20px;\r\n  }\r\n  \r\n  .metric-label {\r\n    font-size: 11px;\r\n  }\r\n  \r\n  .metric-change {\r\n    font-size: 11px;\r\n  }\r\n}\r\n</style>"],"mappings":"AAqBA,SAASA,QAAQ,QAAQ,KAAK;AAC9B,SAASC,eAAe,EAAEC,iBAAiB,QAAQ,uBAAuB;AAC1E,OAAO,KAAKC,KAAK,MAAM,uBAAuB;;;;;;;;;;;;;;;;IAE9C,MAAMC,KAAK,GAAGC,OAQZ;IAEF,MAAMC,aAAa,GAAGN,QAAQ,CAAC,MAAM;MACnC,IAAI,CAACI,KAAK,CAACG,MAAM,CAACC,IAAI,EAAE,OAAO,KAAK;MAEpC,IAAI,OAAOJ,KAAK,CAACG,MAAM,CAACC,IAAI,KAAK,QAAQ,EAAE;QACzC,OAAOL,KAAK,CAACC,KAAK,CAACG,MAAM,CAACC,IAAI,CAAC,IAAI,KAAK;MAC1C;MAEA,OAAOJ,KAAK,CAACG,MAAM,CAACC,IAAI;IAC1B,CAAC,CAAC;IAEF,MAAMC,WAAW,GAAGT,QAAQ,CAAC,MAAM;MACjC,OAAOI,KAAK,CAACG,MAAM,CAACE,WAAW,IAAI,2CAA2C;IAChF,CAAC,CAAC;IAEF,MAAMC,SAAS,GAAGV,QAAQ,CAAC,MAAM;MAC/B,OAAOI,KAAK,CAACG,MAAM,CAACG,SAAS,IAAI,SAAS;IAC5C,CAAC,CAAC;IAEF,MAAMC,WAAW,GAAIC,KAAK,IAAK;MAC7B,IAAIA,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAKC,SAAS,EAAE;QACzC,OAAO,GAAG;MACZ;MAEA,IAAI,OAAOD,KAAK,KAAK,QAAQ,EAAE;QAC7B,IAAIA,KAAK,IAAI,KAAK,EAAE;UAClB,OAAO,CAACA,KAAK,GAAG,KAAK,EAAEE,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG;QACzC;QACA,IAAIF,KAAK,IAAI,IAAI,EAAE;UACjB,OAAO,CAACA,KAAK,GAAG,IAAI,EAAEE,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG;QACxC;QACA,OAAOF,KAAK,CAACG,QAAQ,CAAC,CAAC;MACzB;MAEA,IAAI,OAAOH,KAAK,KAAK,QAAQ,EAAE;QAC7B,OAAOI,IAAI,CAACC,SAAS,CAACL,KAAK,CAAC;MAC9B;MAEA,OAAOM,MAAM,CAACN,KAAK,CAAC;IACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}