{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createVNode as _createVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, renderList as _renderList, Fragment as _Fragment, resolveDynamicComponent as _resolveDynamicComponent, withModifiers as _withModifiers, normalizeStyle as _normalizeStyle } from \"vue\";\nconst _hoisted_1 = {\n  class: \"business-detail\"\n};\nconst _hoisted_2 = {\n  class: \"page-header\"\n};\nconst _hoisted_3 = {\n  class: \"header-content\"\n};\nconst _hoisted_4 = {\n  class: \"header-left\"\n};\nconst _hoisted_5 = {\n  class: \"page-title\"\n};\nconst _hoisted_6 = {\n  class: \"header-actions\"\n};\nconst _hoisted_7 = {\n  class: \"info-section\"\n};\nconst _hoisted_8 = {\n  class: \"info-item\"\n};\nconst _hoisted_9 = {\n  class: \"value\"\n};\nconst _hoisted_10 = {\n  class: \"info-item\"\n};\nconst _hoisted_11 = {\n  class: \"value\"\n};\nconst _hoisted_12 = {\n  class: \"info-item\"\n};\nconst _hoisted_13 = {\n  class: \"value\"\n};\nconst _hoisted_14 = {\n  class: \"info-item\"\n};\nconst _hoisted_15 = {\n  class: \"value\"\n};\nconst _hoisted_16 = {\n  key: 1,\n  class: \"no-data\"\n};\nconst _hoisted_17 = {\n  class: \"info-item\"\n};\nconst _hoisted_18 = {\n  class: \"value\"\n};\nconst _hoisted_19 = {\n  key: 0,\n  class: \"function-purpose-text\"\n};\nconst _hoisted_20 = {\n  key: 1,\n  class: \"no-data\"\n};\nconst _hoisted_21 = {\n  class: \"ip-section\"\n};\nconst _hoisted_22 = {\n  class: \"section-title\"\n};\nconst _hoisted_23 = {\n  key: 0,\n  class: \"ip-info\"\n};\nconst _hoisted_24 = {\n  key: 3,\n  class: \"ping-status\"\n};\nconst _hoisted_25 = {\n  class: \"topology-section\"\n};\nconst _hoisted_26 = {\n  class: \"topology-container\"\n};\nconst _hoisted_27 = {\n  key: 0,\n  class: \"topology-loading\"\n};\nconst _hoisted_28 = {\n  key: 1,\n  class: \"no-topology\"\n};\nconst _hoisted_29 = {\n  key: 2,\n  class: \"topology-content\"\n};\nconst _hoisted_30 = {\n  class: \"topology-layout\"\n};\nconst _hoisted_31 = {\n  class: \"ip-nodes-sidebar\"\n};\nconst _hoisted_32 = {\n  class: \"sidebar-header\"\n};\nconst _hoisted_33 = {\n  class: \"node-count\"\n};\nconst _hoisted_34 = {\n  class: \"sidebar-nodes\"\n};\nconst _hoisted_35 = [\"onMousedown\", \"onClick\", \"onContextmenu\"];\nconst _hoisted_36 = {\n  class: \"node-icon\"\n};\nconst _hoisted_37 = {\n  class: \"node-info\"\n};\nconst _hoisted_38 = {\n  class: \"node-title\"\n};\nconst _hoisted_39 = {\n  class: \"node-subtitle\"\n};\nconst _hoisted_40 = {\n  width: \"100%\",\n  height: \"100%\",\n  class: \"connection-svg\"\n};\nconst _hoisted_41 = [\"x1\", \"y1\", \"x2\", \"y2\"];\nconst _hoisted_42 = [\"x1\", \"y1\", \"x2\", \"y2\", \"onClick\"];\nconst _hoisted_43 = [\"x1\", \"y1\", \"x2\", \"y2\"];\nconst _hoisted_44 = {\n  key: 0\n};\nconst _hoisted_45 = [\"x1\", \"y1\", \"x2\", \"y2\"];\nconst _hoisted_46 = [\"x1\", \"y1\", \"x2\", \"y2\"];\nconst _hoisted_47 = {\n  class: \"node-info\"\n};\nconst _hoisted_48 = {\n  class: \"node-title\"\n};\nconst _hoisted_49 = {\n  key: 0,\n  class: \"connecting-indicator\"\n};\nconst _hoisted_50 = [\"onMousedown\", \"onClick\", \"onContextmenu\"];\nconst _hoisted_51 = {\n  class: \"node-icon\"\n};\nconst _hoisted_52 = {\n  class: \"node-info\"\n};\nconst _hoisted_53 = {\n  class: \"node-title\"\n};\nconst _hoisted_54 = {\n  class: \"node-subtitle\"\n};\nconst _hoisted_55 = {\n  key: 0,\n  class: \"connecting-indicator\"\n};\nconst _hoisted_56 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_a_button = _resolveComponent(\"a-button\");\n  const _component_a_space = _resolveComponent(\"a-space\");\n  const _component_a_col = _resolveComponent(\"a-col\");\n  const _component_a_row = _resolveComponent(\"a-row\");\n  const _component_a_card = _resolveComponent(\"a-card\");\n  const _component_a_badge = _resolveComponent(\"a-badge\");\n  const _component_a_tag = _resolveComponent(\"a-tag\");\n  const _component_a_tooltip = _resolveComponent(\"a-tooltip\");\n  const _component_a_table = _resolveComponent(\"a-table\");\n  const _component_a_divider = _resolveComponent(\"a-divider\");\n  const _component_a_spin = _resolveComponent(\"a-spin\");\n  const _component_a_empty = _resolveComponent(\"a-empty\");\n  const _component_a_select_option = _resolveComponent(\"a-select-option\");\n  const _component_a_select = _resolveComponent(\"a-select\");\n  const _component_a_form_item = _resolveComponent(\"a-form-item\");\n  const _component_a_textarea = _resolveComponent(\"a-textarea\");\n  const _component_a_form = _resolveComponent(\"a-form\");\n  const _component_a_modal = _resolveComponent(\"a-modal\");\n  const _component_a_input = _resolveComponent(\"a-input\");\n  const _component_a_date_picker = _resolveComponent(\"a-date-picker\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 页面头部 \"), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_a_button, {\n    type: \"text\",\n    onClick: $setup.goBack,\n    class: \"back-btn\"\n  }, {\n    icon: _withCtx(() => [_createVNode($setup[\"ArrowLeftOutlined\"])]),\n    default: _withCtx(() => [_cache[15] || (_cache[15] = _createTextVNode(\" 返回 \", -1 /* CACHED */))]),\n    _: 1 /* STABLE */\n  }), _createElementVNode(\"h2\", _hoisted_5, [_createVNode($setup[\"AppstoreOutlined\"], {\n    class: \"title-icon\"\n  }), _createTextVNode(\" \" + _toDisplayString($setup.businessInfo.name || '业务详情'), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_a_space, null, {\n    default: _withCtx(() => [_createVNode(_component_a_button, {\n      onClick: $setup.editBusiness\n    }, {\n      icon: _withCtx(() => [_createVNode($setup[\"EditOutlined\"])]),\n      default: _withCtx(() => [_cache[16] || (_cache[16] = _createTextVNode(\" 编辑 \", -1 /* CACHED */))]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_a_button, {\n      type: \"primary\",\n      onClick: $setup.refreshData\n    }, {\n      icon: _withCtx(() => [_createVNode($setup[\"ReloadOutlined\"])]),\n      default: _withCtx(() => [_cache[17] || (_cache[17] = _createTextVNode(\" 刷新 \", -1 /* CACHED */))]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  })])])]), _createCommentVNode(\" 业务基本信息 \"), _createElementVNode(\"div\", _hoisted_7, [_createVNode(_component_a_card, {\n    title: \"基本信息\",\n    bordered: false\n  }, {\n    default: _withCtx(() => [_createVNode(_component_a_row, {\n      gutter: 24\n    }, {\n      default: _withCtx(() => [_createVNode(_component_a_col, {\n        span: 12\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_8, [_cache[18] || (_cache[18] = _createElementVNode(\"span\", {\n          class: \"label\"\n        }, \"业务名称：\", -1 /* CACHED */)), _createElementVNode(\"span\", _hoisted_9, _toDisplayString($setup.businessInfo.name), 1 /* TEXT */)])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_a_col, {\n        span: 12\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_10, [_cache[19] || (_cache[19] = _createElementVNode(\"span\", {\n          class: \"label\"\n        }, \"责任人：\", -1 /* CACHED */)), _createElementVNode(\"span\", _hoisted_11, [_createVNode($setup[\"UserOutlined\"], {\n          class: \"icon\"\n        }), _createTextVNode(\" \" + _toDisplayString($setup.businessInfo.responsible_person), 1 /* TEXT */)])])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_a_row, {\n      gutter: 24,\n      style: {\n        \"margin-top\": \"16px\"\n      }\n    }, {\n      default: _withCtx(() => [_createVNode(_component_a_col, {\n        span: 12\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_12, [_cache[20] || (_cache[20] = _createElementVNode(\"span\", {\n          class: \"label\"\n        }, \"上线日期：\", -1 /* CACHED */)), _createElementVNode(\"span\", _hoisted_13, [_createVNode($setup[\"CalendarOutlined\"], {\n          class: \"icon\"\n        }), _createTextVNode(\" \" + _toDisplayString($setup.formatDate($setup.businessInfo.online_date)), 1 /* TEXT */)])])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_a_col, {\n        span: 12\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_14, [_cache[21] || (_cache[21] = _createElementVNode(\"span\", {\n          class: \"label\"\n        }, \"访问地址：\", -1 /* CACHED */)), _createElementVNode(\"span\", _hoisted_15, [$setup.businessInfo.access_url ? (_openBlock(), _createBlock(_component_a_button, {\n          key: 0,\n          type: \"link\",\n          size: \"small\",\n          onClick: _cache[0] || (_cache[0] = $event => $setup.openUrl($setup.businessInfo.access_url))\n        }, {\n          icon: _withCtx(() => [_createVNode($setup[\"LinkOutlined\"])]),\n          default: _withCtx(() => [_createTextVNode(\" \" + _toDisplayString($setup.businessInfo.access_url), 1 /* TEXT */)]),\n          _: 1 /* STABLE */\n        })) : (_openBlock(), _createElementBlock(\"span\", _hoisted_16, \"未设置\"))])])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_a_row, {\n      gutter: 24,\n      style: {\n        \"margin-top\": \"16px\"\n      }\n    }, {\n      default: _withCtx(() => [_createVNode(_component_a_col, {\n        span: 24\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_17, [_cache[22] || (_cache[22] = _createElementVNode(\"span\", {\n          class: \"label\"\n        }, \"功能用途：\", -1 /* CACHED */)), _createElementVNode(\"span\", _hoisted_18, [$setup.businessInfo.description ? (_openBlock(), _createElementBlock(\"span\", _hoisted_19, _toDisplayString($setup.businessInfo.description), 1 /* TEXT */)) : (_openBlock(), _createElementBlock(\"span\", _hoisted_20, \"暂无功能用途描述\"))])])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  })]), _createCommentVNode(\" 关联IP列表 \"), _createElementVNode(\"div\", _hoisted_21, [_createVNode(_component_a_card, {\n    bordered: false\n  }, {\n    title: _withCtx(() => [_createElementVNode(\"div\", _hoisted_22, [_createVNode($setup[\"GlobalOutlined\"], {\n      class: \"title-icon\"\n    }), _cache[23] || (_cache[23] = _createTextVNode(\" 关联IP列表 \", -1 /* CACHED */)), _createVNode(_component_a_badge, {\n      count: $setup.relatedIPs.length,\n      class: \"count-badge\"\n    }, null, 8 /* PROPS */, [\"count\"])])]),\n    extra: _withCtx(() => [_createVNode(_component_a_space, null, {\n      default: _withCtx(() => [_createVNode(_component_a_button, {\n        size: \"small\",\n        onClick: $setup.showAddIPModal\n      }, {\n        icon: _withCtx(() => [_createVNode($setup[\"PlusOutlined\"])]),\n        default: _withCtx(() => [_cache[24] || (_cache[24] = _createTextVNode(\" 添加IP \", -1 /* CACHED */))]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_a_button, {\n        size: \"small\",\n        onClick: $setup.refreshIPs\n      }, {\n        icon: _withCtx(() => [_createVNode($setup[\"ReloadOutlined\"])]),\n        default: _withCtx(() => [_cache[25] || (_cache[25] = _createTextVNode(\" 刷新 \", -1 /* CACHED */))]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    default: _withCtx(() => [_createVNode(_component_a_table, {\n      columns: $setup.ipColumns,\n      \"data-source\": $setup.relatedIPs,\n      loading: $setup.ipLoading,\n      pagination: false,\n      size: \"small\"\n    }, {\n      bodyCell: _withCtx(({\n        column,\n        record\n      }) => [column.dataIndex === 'ip_address' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_23, [_createVNode(_component_a_tag, {\n        color: \"blue\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(record.ip_address), 1 /* TEXT */)]),\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */)])) : column.dataIndex === 'status' ? (_openBlock(), _createBlock(_component_a_tag, {\n        key: 1,\n        color: $setup.getStatusColor(record.status)\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.getStatusText(record.status)), 1 /* TEXT */)]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"color\"])) : column.dataIndex === 'service_type' ? (_openBlock(), _createBlock(_component_a_tag, {\n        key: 2,\n        color: \"purple\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.getServiceTypeText(record.service_type)), 1 /* TEXT */)]),\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */)) : column.dataIndex === 'ping_status' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_24, [_createElementVNode(\"span\", {\n        class: _normalizeClass(['status-dot', record.ping_status])\n      }, null, 2 /* CLASS */), _createTextVNode(\" \" + _toDisplayString($setup.getPingStatusText(record.ping_status)), 1 /* TEXT */)])) : column.dataIndex === 'action' ? (_openBlock(), _createBlock(_component_a_space, {\n        key: 4\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_tooltip, {\n          title: \"移除关联\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_a_button, {\n            type: \"text\",\n            size: \"small\",\n            danger: \"\",\n            onClick: $event => $setup.removeIP(record)\n          }, {\n            icon: _withCtx(() => [_createVNode($setup[\"DeleteOutlined\"])]),\n            _: 2 /* DYNAMIC */\n          }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]),\n          _: 2 /* DYNAMIC */\n        }, 1024 /* DYNAMIC_SLOTS */)]),\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true)]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"data-source\", \"loading\"])]),\n    _: 1 /* STABLE */\n  })]), _createCommentVNode(\" 业务拓扑 \"), _createElementVNode(\"div\", _hoisted_25, [_createVNode(_component_a_card, {\n    title: \"业务拓扑\",\n    bordered: false\n  }, {\n    extra: _withCtx(() => [_createVNode(_component_a_space, null, {\n      default: _withCtx(() => [_createVNode(_component_a_button, {\n        size: \"small\",\n        onClick: $setup.refreshTopology\n      }, {\n        icon: _withCtx(() => [_createVNode($setup[\"ReloadOutlined\"])]),\n        default: _withCtx(() => [_cache[26] || (_cache[26] = _createTextVNode(\" 刷新拓扑 \", -1 /* CACHED */))]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_a_button, {\n        size: \"small\",\n        onClick: $setup.exportTopology\n      }, {\n        icon: _withCtx(() => [_createVNode($setup[\"ExportOutlined\"])]),\n        default: _withCtx(() => [_cache[27] || (_cache[27] = _createTextVNode(\" 导出 \", -1 /* CACHED */))]),\n        _: 1 /* STABLE */\n      }), _createCommentVNode(\" 拓扑图控制面板 \"), $setup.relatedIPs.length > 0 ? (_openBlock(), _createBlock(_component_a_divider, {\n        key: 0,\n        type: \"vertical\"\n      })) : _createCommentVNode(\"v-if\", true), $setup.relatedIPs.length > 0 ? (_openBlock(), _createBlock(_component_a_tag, {\n        key: 1,\n        color: \"green\",\n        onClick: $setup.resetNodePositions,\n        style: {\n          \"cursor\": \"pointer\"\n        }\n      }, {\n        default: _withCtx(() => [...(_cache[28] || (_cache[28] = [_createTextVNode(\" 重置位置 \", -1 /* CACHED */)]))]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), $setup.isConnecting ? (_openBlock(), _createBlock(_component_a_tag, {\n        key: 2,\n        color: \"orange\",\n        onClick: $setup.cancelConnection,\n        style: {\n          \"cursor\": \"pointer\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode($setup[\"CloseOutlined\"]), _cache[29] || (_cache[29] = _createTextVNode(\" 取消连线 \", -1 /* CACHED */))]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), $setup.customConnections.length > 0 ? (_openBlock(), _createBlock(_component_a_tag, {\n        key: 3,\n        color: \"red\",\n        onClick: $setup.clearAllConnections,\n        style: {\n          \"cursor\": \"pointer\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode($setup[\"DeleteOutlined\"]), _cache[30] || (_cache[30] = _createTextVNode(\" 清除自定义连线 \", -1 /* CACHED */))]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), $setup.isConnecting ? (_openBlock(), _createBlock(_component_a_tag, {\n        key: 4,\n        color: \"purple\",\n        class: \"connecting-tip\"\n      }, {\n        default: _withCtx(() => [...(_cache[31] || (_cache[31] = [_createTextVNode(\" 点击节点完成连线 \", -1 /* CACHED */)]))]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true)]),\n      _: 1 /* STABLE */\n    })]),\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_26, [$setup.topologyLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_27, [_createVNode(_component_a_spin, {\n      size: \"large\"\n    }), _cache[32] || (_cache[32] = _createElementVNode(\"p\", null, \"正在生成业务拓扑图...\", -1 /* CACHED */))])) : $setup.relatedIPs.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_28, [_createVNode(_component_a_empty, {\n      description: \"暂无关联IP，无法生成拓扑图\"\n    })])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_29, [_createCommentVNode(\" 业务拓扑图 \"), _createElementVNode(\"div\", _hoisted_30, [_createCommentVNode(\" 左侧IP节点列表 \"), _createElementVNode(\"div\", _hoisted_31, [_createElementVNode(\"div\", _hoisted_32, [_cache[33] || (_cache[33] = _createElementVNode(\"h4\", {\n      class: \"sidebar-title\"\n    }, \"IP节点列表\", -1 /* CACHED */)), _createElementVNode(\"span\", _hoisted_33, _toDisplayString($setup.relatedIPs.length) + \" 个节点\", 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_34, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.relatedIPs, (ip, index) => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: ip.id,\n        class: _normalizeClass([\"sidebar-ip-node\", [ip.ping_status, {\n          'connecting-from': $setup.connectingFrom && $setup.connectingFrom.type === 'ip' && $setup.connectingFrom.id === ip.id\n        }]]),\n        onMousedown: $event => $setup.startDragFromSidebar($event, ip),\n        onClick: $event => $setup.handleSidebarNodeClick($event, ip),\n        onContextmenu: _withModifiers($event => $setup.startConnection({\n          type: 'ip',\n          id: ip.id,\n          name: ip.ip_address,\n          x: 50,\n          y: 50 + index * 90\n        }), [\"prevent\"])\n      }, [_createElementVNode(\"div\", _hoisted_36, [(_openBlock(), _createBlock(_resolveDynamicComponent($setup.getServiceIcon(ip.service_type))))]), _createElementVNode(\"div\", _hoisted_37, [_createElementVNode(\"div\", _hoisted_38, _toDisplayString(ip.ip_address), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_39, _toDisplayString($setup.getServiceTypeText(ip.service_type)), 1 /* TEXT */)]), _createElementVNode(\"div\", {\n        class: _normalizeClass([\"node-status\", ip.ping_status])\n      }, [...(_cache[34] || (_cache[34] = [_createElementVNode(\"span\", {\n        class: \"status-dot\"\n      }, null, -1 /* CACHED */)]))], 2 /* CLASS */)], 42 /* CLASS, PROPS, NEED_HYDRATION */, _hoisted_35);\n    }), 128 /* KEYED_FRAGMENT */))])]), _createCommentVNode(\" 主画布区域 \"), _createElementVNode(\"div\", {\n      class: _normalizeClass([\"main-canvas\", {\n        'connecting-mode': $setup.isConnecting\n      }])\n    }, [_createCommentVNode(\" 网络连接层 \"), _createElementVNode(\"div\", {\n      class: \"topology-network\",\n      onMousemove: $setup.onMouseMove\n    }, [(_openBlock(), _createElementBlock(\"svg\", _hoisted_40, [_createCommentVNode(\" 定义箭头标记和渐变 \"), _cache[35] || (_cache[35] = _createElementVNode(\"defs\", null, [_createCommentVNode(\" 科技风渐变 \"), _createElementVNode(\"linearGradient\", {\n      id: \"techGradient\",\n      x1: \"0%\",\n      y1: \"0%\",\n      x2: \"100%\",\n      y2: \"0%\"\n    }, [_createElementVNode(\"stop\", {\n      offset: \"0%\",\n      style: {\n        \"stop-color\": \"#00d4ff\",\n        \"stop-opacity\": \"1\"\n      }\n    }), _createElementVNode(\"stop\", {\n      offset: \"50%\",\n      style: {\n        \"stop-color\": \"#0099ff\",\n        \"stop-opacity\": \"1\"\n      }\n    }), _createElementVNode(\"stop\", {\n      offset: \"100%\",\n      style: {\n        \"stop-color\": \"#0066ff\",\n        \"stop-opacity\": \"1\"\n      }\n    })]), _createCommentVNode(\" 发光效果滤镜 \"), _createElementVNode(\"filter\", {\n      id: \"glow\"\n    }, [_createElementVNode(\"feGaussianBlur\", {\n      stdDeviation: \"3\",\n      result: \"coloredBlur\"\n    }), _createElementVNode(\"feMerge\", null, [_createElementVNode(\"feMergeNode\", {\n      in: \"coloredBlur\"\n    }), _createElementVNode(\"feMergeNode\", {\n      in: \"SourceGraphic\"\n    })])]), _createElementVNode(\"marker\", {\n      id: \"arrowhead\",\n      markerWidth: \"10\",\n      markerHeight: \"7\",\n      refX: \"9\",\n      refY: \"3.5\",\n      orient: \"auto\"\n    }, [_createElementVNode(\"polygon\", {\n      points: \"0 0, 10 3.5, 0 7\",\n      fill: \"#1890ff\"\n    })]), _createElementVNode(\"marker\", {\n      id: \"custom-arrowhead\",\n      markerWidth: \"12\",\n      markerHeight: \"8\",\n      refX: \"11\",\n      refY: \"4\",\n      orient: \"auto\"\n    }, [_createElementVNode(\"polygon\", {\n      points: \"0 0, 12 4, 0 8\",\n      fill: \"url(#techGradient)\",\n      filter: \"url(#glow)\"\n    })])], -1 /* CACHED */)), _createCommentVNode(\" 自定义连线 \"), _createElementVNode(\"g\", null, [_createCommentVNode(\" 背景连线 \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.customConnections, connection => {\n      return _openBlock(), _createElementBlock(\"line\", {\n        key: 'bg-' + connection.id,\n        x1: connection.from.x,\n        y1: connection.from.y,\n        x2: connection.to.x,\n        y2: connection.to.y,\n        stroke: \"#1a1a2e\",\n        \"stroke-width\": \"6\",\n        class: \"connection-background\"\n      }, null, 8 /* PROPS */, _hoisted_41);\n    }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\" 主连线 \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.customConnections, connection => {\n      return _openBlock(), _createElementBlock(\"line\", {\n        key: 'main-' + connection.id,\n        x1: connection.from.x,\n        y1: connection.from.y,\n        x2: connection.to.x,\n        y2: connection.to.y,\n        stroke: \"url(#techGradient)\",\n        \"stroke-width\": \"3\",\n        \"marker-end\": \"url(#custom-arrowhead)\",\n        class: \"custom-connection-line tech-line\",\n        onClick: $event => $setup.removeConnection(connection.id)\n      }, null, 8 /* PROPS */, _hoisted_42);\n    }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\" 流动光效 \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.customConnections, connection => {\n      return _openBlock(), _createElementBlock(\"line\", {\n        key: 'flow-' + connection.id,\n        x1: connection.from.x,\n        y1: connection.from.y,\n        x2: connection.to.x,\n        y2: connection.to.y,\n        stroke: \"#00ffff\",\n        \"stroke-width\": \"1\",\n        \"stroke-dasharray\": \"10,20\",\n        class: \"flow-effect\"\n      }, null, 8 /* PROPS */, _hoisted_43);\n    }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" 临时连线（连线过程中显示） \"), $setup.tempConnection ? (_openBlock(), _createElementBlock(\"g\", _hoisted_44, [_createCommentVNode(\" 临时连线背景 \"), _createElementVNode(\"line\", {\n      x1: $setup.tempConnection.from.x,\n      y1: $setup.tempConnection.from.y,\n      x2: $setup.tempConnection.to.x,\n      y2: $setup.tempConnection.to.y,\n      stroke: \"#1a1a2e\",\n      \"stroke-width\": \"4\",\n      class: \"temp-connection-bg\"\n    }, null, 8 /* PROPS */, _hoisted_45), _createCommentVNode(\" 临时连线主体 \"), _createElementVNode(\"line\", {\n      x1: $setup.tempConnection.from.x,\n      y1: $setup.tempConnection.from.y,\n      x2: $setup.tempConnection.to.x,\n      y2: $setup.tempConnection.to.y,\n      stroke: \"url(#techGradient)\",\n      \"stroke-width\": \"2\",\n      \"stroke-dasharray\": \"8,4\",\n      class: \"temp-connection-line tech-temp-line\",\n      filter: \"url(#glow)\"\n    }, null, 8 /* PROPS */, _hoisted_46)])) : _createCommentVNode(\"v-if\", true)]))], 32 /* NEED_HYDRATION */), _createCommentVNode(\" 业务中心节点 \"), _createElementVNode(\"div\", {\n      class: _normalizeClass([\"business-center-node\", {\n        'connecting-from': $setup.connectingFrom && $setup.connectingFrom.type === 'business'\n      }]),\n      style: _normalizeStyle({\n        left: $setup.businessInfo.x + 'px',\n        top: $setup.businessInfo.y + 'px'\n      }),\n      onMousedown: _cache[1] || (_cache[1] = $event => $setup.startBusinessDrag($event)),\n      onClick: _cache[2] || (_cache[2] = $event => $setup.handleBusinessNodeClick($event)),\n      onContextmenu: _cache[3] || (_cache[3] = _withModifiers($event => $setup.startConnection({\n        type: 'business',\n        id: $setup.businessInfo.id,\n        name: $setup.businessInfo.name\n      }), [\"prevent\"]))\n    }, [_createVNode($setup[\"AppstoreOutlined\"], {\n      class: \"node-icon\"\n    }), _createElementVNode(\"div\", _hoisted_47, [_createElementVNode(\"div\", _hoisted_48, _toDisplayString($setup.businessInfo.name), 1 /* TEXT */), _cache[36] || (_cache[36] = _createElementVNode(\"div\", {\n      class: \"node-subtitle\"\n    }, \"业务中心\", -1 /* CACHED */))]), $setup.connectingFrom && $setup.connectingFrom.type === 'business' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_49, \" 连线起点 \")) : _createCommentVNode(\"v-if\", true)], 38 /* CLASS, STYLE, NEED_HYDRATION */), _createCommentVNode(\" 画布中的IP节点（从侧边栏拖拽过来的） \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.canvasIPs, ip => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: 'canvas-' + ip.id,\n        class: _normalizeClass([\"canvas-ip-node\", [ip.ping_status, {\n          'connecting-from': $setup.connectingFrom && $setup.connectingFrom.type === 'ip' && $setup.connectingFrom.id === ip.id\n        }]]),\n        style: _normalizeStyle({\n          left: ip.x + 'px',\n          top: ip.y + 'px'\n        }),\n        onMousedown: $event => $setup.startDrag($event, ip),\n        onClick: $event => $setup.handleCanvasNodeClick($event, ip),\n        onContextmenu: _withModifiers($event => $setup.startConnection({\n          type: 'ip',\n          id: ip.id,\n          name: ip.ip_address,\n          x: ip.x + 60,\n          y: ip.y + 40\n        }), [\"prevent\"])\n      }, [_createElementVNode(\"div\", _hoisted_51, [(_openBlock(), _createBlock(_resolveDynamicComponent($setup.getServiceIcon(ip.service_type))))]), _createElementVNode(\"div\", _hoisted_52, [_createElementVNode(\"div\", _hoisted_53, _toDisplayString(ip.ip_address), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_54, _toDisplayString($setup.getServiceTypeText(ip.service_type)), 1 /* TEXT */)]), _createElementVNode(\"div\", {\n        class: _normalizeClass([\"node-status\", ip.ping_status])\n      }, [_cache[37] || (_cache[37] = _createElementVNode(\"span\", {\n        class: \"status-dot\"\n      }, null, -1 /* CACHED */)), _createTextVNode(\" \" + _toDisplayString($setup.getPingStatusText(ip.ping_status)), 1 /* TEXT */)], 2 /* CLASS */), $setup.connectingFrom && $setup.connectingFrom.type === 'ip' && $setup.connectingFrom.id === ip.id ? (_openBlock(), _createElementBlock(\"div\", _hoisted_55, \" 连线起点 \")) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 删除按钮 \"), _createElementVNode(\"div\", {\n        class: \"node-remove-btn\",\n        onClick: _withModifiers($event => $setup.removeCanvasNode(ip.id), [\"stop\"]),\n        title: \"从画布移除\"\n      }, [_createVNode($setup[\"CloseOutlined\"])], 8 /* PROPS */, _hoisted_56)], 46 /* CLASS, STYLE, PROPS, NEED_HYDRATION */, _hoisted_50);\n    }), 128 /* KEYED_FRAGMENT */))], 2 /* CLASS */)])]))])]),\n    _: 1 /* STABLE */\n  })]), _createCommentVNode(\" 添加IP模态框 \"), _createVNode(_component_a_modal, {\n    open: $setup.addIPModalVisible,\n    \"onUpdate:open\": _cache[7] || (_cache[7] = $event => $setup.addIPModalVisible = $event),\n    title: \"添加关联IP\",\n    onOk: $setup.handleAddIP,\n    onCancel: $setup.handleCancelAddIP\n  }, {\n    default: _withCtx(() => [_createVNode(_component_a_form, {\n      layout: \"vertical\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_a_form_item, {\n        label: \"选择IP\",\n        required: \"\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_select, {\n          value: $setup.ipForm.ip_id,\n          \"onUpdate:value\": _cache[4] || (_cache[4] = $event => $setup.ipForm.ip_id = $event),\n          placeholder: \"请选择要关联的IP\",\n          \"show-search\": \"\",\n          \"filter-option\": false,\n          onSearch: $setup.handleIPSearch,\n          loading: $setup.ipLoading\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.availableIPs, ip => {\n            return _openBlock(), _createBlock(_component_a_select_option, {\n              key: ip.id,\n              value: ip.id\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString(ip.ip_address) + \" - \" + _toDisplayString(ip.hostname || '未知主机'), 1 /* TEXT */)]),\n              _: 2 /* DYNAMIC */\n            }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"value\"]);\n          }), 128 /* KEYED_FRAGMENT */))]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"value\", \"loading\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_a_form_item, {\n        label: \"服务类型\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_select, {\n          value: $setup.ipForm.service_type,\n          \"onUpdate:value\": _cache[5] || (_cache[5] = $event => $setup.ipForm.service_type = $event),\n          placeholder: \"请选择服务类型\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_a_select_option, {\n            value: \"web\"\n          }, {\n            default: _withCtx(() => [...(_cache[38] || (_cache[38] = [_createTextVNode(\"Web服务\", -1 /* CACHED */)]))]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_a_select_option, {\n            value: \"database\"\n          }, {\n            default: _withCtx(() => [...(_cache[39] || (_cache[39] = [_createTextVNode(\"数据库\", -1 /* CACHED */)]))]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_a_select_option, {\n            value: \"cache\"\n          }, {\n            default: _withCtx(() => [...(_cache[40] || (_cache[40] = [_createTextVNode(\"缓存服务\", -1 /* CACHED */)]))]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_a_select_option, {\n            value: \"message_queue\"\n          }, {\n            default: _withCtx(() => [...(_cache[41] || (_cache[41] = [_createTextVNode(\"消息队列\", -1 /* CACHED */)]))]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_a_select_option, {\n            value: \"file_storage\"\n          }, {\n            default: _withCtx(() => [...(_cache[42] || (_cache[42] = [_createTextVNode(\"文件存储\", -1 /* CACHED */)]))]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_a_select_option, {\n            value: \"monitoring\"\n          }, {\n            default: _withCtx(() => [...(_cache[43] || (_cache[43] = [_createTextVNode(\"监控服务\", -1 /* CACHED */)]))]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_a_select_option, {\n            value: \"other\"\n          }, {\n            default: _withCtx(() => [...(_cache[44] || (_cache[44] = [_createTextVNode(\"其他\", -1 /* CACHED */)]))]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"value\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_a_form_item, {\n        label: \"关联说明\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_textarea, {\n          value: $setup.ipForm.description,\n          \"onUpdate:value\": _cache[6] || (_cache[6] = $event => $setup.ipForm.description = $event),\n          placeholder: \"请输入关联说明（可选）\",\n          rows: 3\n        }, null, 8 /* PROPS */, [\"value\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"open\"]), _createCommentVNode(\" 编辑业务模态框 \"), _createVNode(_component_a_modal, {\n    open: $setup.editModalVisible,\n    \"onUpdate:open\": _cache[14] || (_cache[14] = $event => $setup.editModalVisible = $event),\n    title: \"编辑业务\",\n    width: \"800px\",\n    onOk: $setup.handleEditSubmit,\n    onCancel: $setup.handleEditCancel\n  }, {\n    default: _withCtx(() => [_createVNode(_component_a_form, {\n      ref: \"editFormRef\",\n      model: $setup.editForm,\n      rules: $setup.editFormRules,\n      layout: \"vertical\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_a_row, {\n        gutter: 16\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_col, {\n          span: 12\n        }, {\n          default: _withCtx(() => [_createVNode(_component_a_form_item, {\n            label: \"业务名称\",\n            name: \"name\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_a_input, {\n              value: $setup.editForm.name,\n              \"onUpdate:value\": _cache[8] || (_cache[8] = $event => $setup.editForm.name = $event),\n              placeholder: \"请输入业务名称\"\n            }, null, 8 /* PROPS */, [\"value\"])]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_a_col, {\n          span: 12\n        }, {\n          default: _withCtx(() => [_createVNode(_component_a_form_item, {\n            label: \"上线日期\",\n            name: \"online_date\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_a_date_picker, {\n              value: $setup.editForm.online_date,\n              \"onUpdate:value\": _cache[9] || (_cache[9] = $event => $setup.editForm.online_date = $event),\n              style: {\n                \"width\": \"100%\"\n              },\n              format: \"YYYY-MM-DD\"\n            }, null, 8 /* PROPS */, [\"value\"])]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_a_row, {\n        gutter: 16\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_col, {\n          span: 12\n        }, {\n          default: _withCtx(() => [_createVNode(_component_a_form_item, {\n            label: \"责任人\",\n            name: \"responsible_person\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_a_input, {\n              value: $setup.editForm.responsible_person,\n              \"onUpdate:value\": _cache[10] || (_cache[10] = $event => $setup.editForm.responsible_person = $event),\n              placeholder: \"请输入责任人\"\n            }, null, 8 /* PROPS */, [\"value\"])]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_a_col, {\n          span: 12\n        }, {\n          default: _withCtx(() => [_createVNode(_component_a_form_item, {\n            label: \"访问地址\",\n            name: \"access_url\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_a_input, {\n              value: $setup.editForm.access_url,\n              \"onUpdate:value\": _cache[11] || (_cache[11] = $event => $setup.editForm.access_url = $event),\n              placeholder: \"请输入访问地址\"\n            }, null, 8 /* PROPS */, [\"value\"])]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_a_form_item, {\n        label: \"功能用途\",\n        name: \"function_purpose\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_textarea, {\n          value: $setup.editForm.function_purpose,\n          \"onUpdate:value\": _cache[12] || (_cache[12] = $event => $setup.editForm.function_purpose = $event),\n          placeholder: \"请输入功能用途\",\n          rows: 3\n        }, null, 8 /* PROPS */, [\"value\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_a_form_item, {\n        label: \"业务描述\",\n        name: \"description\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_textarea, {\n          value: $setup.editForm.description,\n          \"onUpdate:value\": _cache[13] || (_cache[13] = $event => $setup.editForm.description = $event),\n          placeholder: \"请输入业务描述\",\n          rows: 4\n        }, null, 8 /* PROPS */, [\"value\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"open\"])]);\n}","map":{"version":3,"names":["class","width","height","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_createVNode","_component_a_button","type","onClick","$setup","goBack","icon","_withCtx","_hoisted_5","_toDisplayString","businessInfo","name","_hoisted_6","_component_a_space","editBusiness","refreshData","_hoisted_7","_component_a_card","title","bordered","_component_a_row","gutter","_component_a_col","span","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","responsible_person","style","_hoisted_12","_hoisted_13","formatDate","online_date","_hoisted_14","_hoisted_15","access_url","_createBlock","size","_cache","$event","openUrl","_hoisted_16","_hoisted_17","_hoisted_18","description","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_component_a_badge","count","relatedIPs","length","extra","showAddIPModal","refreshIPs","_component_a_table","columns","ipColumns","loading","ipLoading","pagination","bodyCell","column","record","dataIndex","_hoisted_23","_component_a_tag","color","ip_address","getStatusColor","status","getStatusText","getServiceTypeText","service_type","_hoisted_24","_normalizeClass","ping_status","getPingStatusText","key","_component_a_tooltip","danger","removeIP","_hoisted_25","refreshTopology","exportTopology","_component_a_divider","resetNodePositions","isConnecting","cancelConnection","customConnections","clearAllConnections","_hoisted_26","topologyLoading","_hoisted_27","_component_a_spin","_hoisted_28","_component_a_empty","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_Fragment","_renderList","ip","index","id","connectingFrom","onMousedown","startDragFromSidebar","handleSidebarNodeClick","onContextmenu","_withModifiers","startConnection","x","y","_hoisted_36","_resolveDynamicComponent","getServiceIcon","_hoisted_37","_hoisted_38","_hoisted_39","onMousemove","onMouseMove","_hoisted_40","x1","y1","x2","y2","offset","stdDeviation","result","in","markerWidth","markerHeight","refX","refY","orient","points","fill","filter","connection","from","to","stroke","removeConnection","tempConnection","_hoisted_44","_normalizeStyle","left","top","startBusinessDrag","handleBusinessNodeClick","_hoisted_47","_hoisted_48","_hoisted_49","canvasIPs","startDrag","handleCanvasNodeClick","_hoisted_51","_hoisted_52","_hoisted_53","_hoisted_54","_hoisted_55","removeCanvasNode","_component_a_modal","open","addIPModalVisible","onOk","handleAddIP","onCancel","handleCancelAddIP","_component_a_form","layout","_component_a_form_item","label","required","_component_a_select","value","ipForm","ip_id","placeholder","onSearch","handleIPSearch","availableIPs","_component_a_select_option","hostname","_component_a_textarea","rows","editModalVisible","handleEditSubmit","handleEditCancel","ref","model","editForm","rules","editFormRules","_component_a_input","_component_a_date_picker","format","function_purpose"],"sources":["E:\\A_project\\yuanchi\\AIops\\frontend\\src\\views\\business\\BusinessDetail.vue"],"sourcesContent":["<template>\r\n  <div class=\"business-detail\">\r\n    <!-- 页面头部 -->\r\n    <div class=\"page-header\">\r\n      <div class=\"header-content\">\r\n        <div class=\"header-left\">\r\n          <a-button type=\"text\" @click=\"goBack\" class=\"back-btn\">\r\n            <template #icon><ArrowLeftOutlined /></template>\r\n            返回\r\n          </a-button>\r\n          <h2 class=\"page-title\">\r\n            <AppstoreOutlined class=\"title-icon\" />\r\n            {{ businessInfo.name || '业务详情' }}\r\n          </h2>\r\n        </div>\r\n        <div class=\"header-actions\">\r\n          <a-space>\r\n            <a-button @click=\"editBusiness\">\r\n              <template #icon><EditOutlined /></template>\r\n              编辑\r\n            </a-button>\r\n            <a-button type=\"primary\" @click=\"refreshData\">\r\n              <template #icon><ReloadOutlined /></template>\r\n              刷新\r\n            </a-button>\r\n          </a-space>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 业务基本信息 -->\r\n    <div class=\"info-section\">\r\n      <a-card title=\"基本信息\" :bordered=\"false\">\r\n        <a-row :gutter=\"24\">\r\n          <a-col :span=\"12\">\r\n            <div class=\"info-item\">\r\n              <span class=\"label\">业务名称：</span>\r\n              <span class=\"value\">{{ businessInfo.name }}</span>\r\n            </div>\r\n          </a-col>\r\n          <a-col :span=\"12\">\r\n            <div class=\"info-item\">\r\n              <span class=\"label\">责任人：</span>\r\n              <span class=\"value\">\r\n                <UserOutlined class=\"icon\" />\r\n                {{ businessInfo.responsible_person }}\r\n              </span>\r\n            </div>\r\n          </a-col>\r\n        </a-row>\r\n        <a-row :gutter=\"24\" style=\"margin-top: 16px\">\r\n          <a-col :span=\"12\">\r\n            <div class=\"info-item\">\r\n              <span class=\"label\">上线日期：</span>\r\n              <span class=\"value\">\r\n                <CalendarOutlined class=\"icon\" />\r\n                {{ formatDate(businessInfo.online_date) }}\r\n              </span>\r\n            </div>\r\n          </a-col>\r\n          <a-col :span=\"12\">\r\n            <div class=\"info-item\">\r\n              <span class=\"label\">访问地址：</span>\r\n              <span class=\"value\">\r\n                <a-button\r\n                  v-if=\"businessInfo.access_url\"\r\n                  type=\"link\"\r\n                  size=\"small\"\r\n                  @click=\"openUrl(businessInfo.access_url)\"\r\n                >\r\n                  <template #icon><LinkOutlined /></template>\r\n                  {{ businessInfo.access_url }}\r\n                </a-button>\r\n                <span v-else class=\"no-data\">未设置</span>\r\n              </span>\r\n            </div>\r\n          </a-col>\r\n        </a-row>\r\n        <a-row :gutter=\"24\" style=\"margin-top: 16px\">\r\n          <a-col :span=\"24\">\r\n            <div class=\"info-item\">\r\n              <span class=\"label\">功能用途：</span>\r\n              <span class=\"value\">\r\n                <span v-if=\"businessInfo.description\" class=\"function-purpose-text\">\r\n                  {{ businessInfo.description }}\r\n                </span>\r\n                <span v-else class=\"no-data\">暂无功能用途描述</span>\r\n              </span>\r\n            </div>\r\n          </a-col>\r\n        </a-row>\r\n      </a-card>\r\n    </div>\r\n\r\n\r\n\r\n    <!-- 关联IP列表 -->\r\n    <div class=\"ip-section\">\r\n      <a-card :bordered=\"false\">\r\n        <template #title>\r\n          <div class=\"section-title\">\r\n            <GlobalOutlined class=\"title-icon\" />\r\n            关联IP列表\r\n            <a-badge :count=\"relatedIPs.length\" class=\"count-badge\" />\r\n          </div>\r\n        </template>\r\n        <template #extra>\r\n          <a-space>\r\n            <a-button size=\"small\" @click=\"showAddIPModal\">\r\n              <template #icon><PlusOutlined /></template>\r\n              添加IP\r\n            </a-button>\r\n            <a-button size=\"small\" @click=\"refreshIPs\">\r\n              <template #icon><ReloadOutlined /></template>\r\n              刷新\r\n            </a-button>\r\n          </a-space>\r\n        </template>\r\n        \r\n        <a-table\r\n          :columns=\"ipColumns\"\r\n          :data-source=\"relatedIPs\"\r\n          :loading=\"ipLoading\"\r\n          :pagination=\"false\"\r\n          size=\"small\"\r\n        >\r\n          <template #bodyCell=\"{ column, record }\">\r\n            <template v-if=\"column.dataIndex === 'ip_address'\">\r\n              <div class=\"ip-info\">\r\n                <a-tag color=\"blue\">{{ record.ip_address }}</a-tag>\r\n              </div>\r\n            </template>\r\n            \r\n            <template v-else-if=\"column.dataIndex === 'status'\">\r\n              <a-tag :color=\"getStatusColor(record.status)\">\r\n                {{ getStatusText(record.status) }}\r\n              </a-tag>\r\n            </template>\r\n            \r\n            <template v-else-if=\"column.dataIndex === 'service_type'\">\r\n              <a-tag color=\"purple\">\r\n                {{ getServiceTypeText(record.service_type) }}\r\n              </a-tag>\r\n            </template>\r\n            \r\n            <template v-else-if=\"column.dataIndex === 'ping_status'\">\r\n              <div class=\"ping-status\">\r\n                <span :class=\"['status-dot', record.ping_status]\" />\r\n                {{ getPingStatusText(record.ping_status) }}\r\n              </div>\r\n            </template>\r\n            \r\n            <template v-else-if=\"column.dataIndex === 'action'\">\r\n              <a-space>\r\n                <a-tooltip title=\"移除关联\">\r\n                  <a-button\r\n                    type=\"text\"\r\n                    size=\"small\"\r\n                    danger\r\n                    @click=\"removeIP(record)\"\r\n                  >\r\n                    <template #icon><DeleteOutlined /></template>\r\n                  </a-button>\r\n                </a-tooltip>\r\n              </a-space>\r\n            </template>\r\n          </template>\r\n        </a-table>\r\n      </a-card>\r\n    </div>\r\n\r\n    <!-- 业务拓扑 -->\r\n    <div class=\"topology-section\">\r\n      <a-card title=\"业务拓扑\" :bordered=\"false\">\r\n        <template #extra>\r\n          <a-space>\r\n            <a-button size=\"small\" @click=\"refreshTopology\">\r\n              <template #icon><ReloadOutlined /></template>\r\n              刷新拓扑\r\n            </a-button>\r\n            <a-button size=\"small\" @click=\"exportTopology\">\r\n              <template #icon><ExportOutlined /></template>\r\n              导出\r\n            </a-button>\r\n            <!-- 拓扑图控制面板 -->\r\n            <a-divider type=\"vertical\" v-if=\"relatedIPs.length > 0\" />\r\n            <a-tag v-if=\"relatedIPs.length > 0\" color=\"green\" @click=\"resetNodePositions\" style=\"cursor: pointer\">\r\n              重置位置\r\n            </a-tag>\r\n            <a-tag v-if=\"isConnecting\" color=\"orange\" @click=\"cancelConnection\" style=\"cursor: pointer\">\r\n              <CloseOutlined /> 取消连线\r\n            </a-tag>\r\n            <a-tag v-if=\"customConnections.length > 0\" color=\"red\" @click=\"clearAllConnections\" style=\"cursor: pointer\">\r\n              <DeleteOutlined /> 清除自定义连线\r\n            </a-tag>\r\n            <a-tag v-if=\"isConnecting\" color=\"purple\" class=\"connecting-tip\">\r\n              点击节点完成连线\r\n            </a-tag>\r\n          </a-space>\r\n        </template>\r\n        \r\n        <div class=\"topology-container\">\r\n          <div v-if=\"topologyLoading\" class=\"topology-loading\">\r\n            <a-spin size=\"large\" />\r\n            <p>正在生成业务拓扑图...</p>\r\n          </div>\r\n          <div v-else-if=\"relatedIPs.length === 0\" class=\"no-topology\">\r\n            <a-empty description=\"暂无关联IP，无法生成拓扑图\" />\r\n          </div>\r\n          <div v-else class=\"topology-content\">\r\n            <!-- 业务拓扑图 -->\r\n            <div class=\"topology-layout\">\r\n              <!-- 左侧IP节点列表 -->\r\n              <div class=\"ip-nodes-sidebar\">\r\n                <div class=\"sidebar-header\">\r\n                  <h4 class=\"sidebar-title\">IP节点列表</h4>\r\n                  <span class=\"node-count\">{{ relatedIPs.length }} 个节点</span>\r\n                </div>\r\n                <div class=\"sidebar-nodes\">\r\n                  <div\r\n                    v-for=\"(ip, index) in relatedIPs\"\r\n                    :key=\"ip.id\"\r\n                    class=\"sidebar-ip-node\"\r\n                    :class=\"[ip.ping_status, { \r\n                      'connecting-from': connectingFrom && connectingFrom.type === 'ip' && connectingFrom.id === ip.id \r\n                    }]\"\r\n                    @mousedown=\"startDragFromSidebar($event, ip)\"\r\n                    @click=\"handleSidebarNodeClick($event, ip)\"\r\n                    @contextmenu.prevent=\"startConnection({ type: 'ip', id: ip.id, name: ip.ip_address, x: 50, y: 50 + index * 90 })\"\r\n                  >\r\n                    <div class=\"node-icon\">\r\n                      <component :is=\"getServiceIcon(ip.service_type)\" />\r\n                    </div>\r\n                    <div class=\"node-info\">\r\n                      <div class=\"node-title\">{{ ip.ip_address }}</div>\r\n                      <div class=\"node-subtitle\">{{ getServiceTypeText(ip.service_type) }}</div>\r\n                    </div>\r\n                    <div class=\"node-status\" :class=\"ip.ping_status\">\r\n                      <span class=\"status-dot\" />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              <!-- 主画布区域 -->\r\n              <div class=\"main-canvas\" :class=\"{ 'connecting-mode': isConnecting }\">\r\n                <!-- 网络连接层 -->\r\n                <div class=\"topology-network\" @mousemove=\"onMouseMove\">\r\n                  <svg width=\"100%\" height=\"100%\" class=\"connection-svg\">\r\n                    <!-- 定义箭头标记和渐变 -->\r\n                    <defs>\r\n                      <!-- 科技风渐变 -->\r\n                      <linearGradient id=\"techGradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\r\n                        <stop offset=\"0%\" style=\"stop-color:#00d4ff;stop-opacity:1\" />\r\n                        <stop offset=\"50%\" style=\"stop-color:#0099ff;stop-opacity:1\" />\r\n                        <stop offset=\"100%\" style=\"stop-color:#0066ff;stop-opacity:1\" />\r\n                      </linearGradient>\r\n                      \r\n                      <!-- 发光效果滤镜 -->\r\n                      <filter id=\"glow\">\r\n                        <feGaussianBlur stdDeviation=\"3\" result=\"coloredBlur\"/>\r\n                        <feMerge> \r\n                          <feMergeNode in=\"coloredBlur\"/>\r\n                          <feMergeNode in=\"SourceGraphic\"/>\r\n                        </feMerge>\r\n                      </filter>\r\n                      \r\n                      <marker id=\"arrowhead\" markerWidth=\"10\" markerHeight=\"7\" \r\n                              refX=\"9\" refY=\"3.5\" orient=\"auto\">\r\n                        <polygon points=\"0 0, 10 3.5, 0 7\" fill=\"#1890ff\" />\r\n                      </marker>\r\n                      <marker id=\"custom-arrowhead\" markerWidth=\"12\" markerHeight=\"8\" \r\n                              refX=\"11\" refY=\"4\" orient=\"auto\">\r\n                        <polygon points=\"0 0, 12 4, 0 8\" fill=\"url(#techGradient)\" filter=\"url(#glow)\" />\r\n                      </marker>\r\n                    </defs>\r\n                    \r\n                    <!-- 自定义连线 -->\r\n                    <g>\r\n                      <!-- 背景连线 -->\r\n                      <line\r\n                        v-for=\"connection in customConnections\"\r\n                        :key=\"'bg-' + connection.id\"\r\n                        :x1=\"connection.from.x\"\r\n                        :y1=\"connection.from.y\"\r\n                        :x2=\"connection.to.x\"\r\n                        :y2=\"connection.to.y\"\r\n                        stroke=\"#1a1a2e\"\r\n                        stroke-width=\"6\"\r\n                        class=\"connection-background\"\r\n                      />\r\n                      <!-- 主连线 -->\r\n                      <line\r\n                        v-for=\"connection in customConnections\"\r\n                        :key=\"'main-' + connection.id\"\r\n                        :x1=\"connection.from.x\"\r\n                        :y1=\"connection.from.y\"\r\n                        :x2=\"connection.to.x\"\r\n                        :y2=\"connection.to.y\"\r\n                        stroke=\"url(#techGradient)\"\r\n                        stroke-width=\"3\"\r\n                        marker-end=\"url(#custom-arrowhead)\"\r\n                        class=\"custom-connection-line tech-line\"\r\n                        @click=\"removeConnection(connection.id)\"\r\n                      />\r\n                      <!-- 流动光效 -->\r\n                      <line\r\n                        v-for=\"connection in customConnections\"\r\n                        :key=\"'flow-' + connection.id\"\r\n                        :x1=\"connection.from.x\"\r\n                        :y1=\"connection.from.y\"\r\n                        :x2=\"connection.to.x\"\r\n                        :y2=\"connection.to.y\"\r\n                        stroke=\"#00ffff\"\r\n                        stroke-width=\"1\"\r\n                        stroke-dasharray=\"10,20\"\r\n                        class=\"flow-effect\"\r\n                      />\r\n                    </g>\r\n                    \r\n                    <!-- 临时连线（连线过程中显示） -->\r\n                    <g v-if=\"tempConnection\">\r\n                      <!-- 临时连线背景 -->\r\n                      <line\r\n                        :x1=\"tempConnection.from.x\"\r\n                        :y1=\"tempConnection.from.y\"\r\n                        :x2=\"tempConnection.to.x\"\r\n                        :y2=\"tempConnection.to.y\"\r\n                        stroke=\"#1a1a2e\"\r\n                        stroke-width=\"4\"\r\n                        class=\"temp-connection-bg\"\r\n                      />\r\n                      <!-- 临时连线主体 -->\r\n                      <line\r\n                        :x1=\"tempConnection.from.x\"\r\n                        :y1=\"tempConnection.from.y\"\r\n                        :x2=\"tempConnection.to.x\"\r\n                        :y2=\"tempConnection.to.y\"\r\n                        stroke=\"url(#techGradient)\"\r\n                        stroke-width=\"2\"\r\n                        stroke-dasharray=\"8,4\"\r\n                        class=\"temp-connection-line tech-temp-line\"\r\n                        filter=\"url(#glow)\"\r\n                      />\r\n                    </g>\r\n                  </svg>\r\n                </div>\r\n                \r\n                <!-- 业务中心节点 -->\r\n                <div \r\n                  class=\"business-center-node\"\r\n                  :class=\"{ 'connecting-from': connectingFrom && connectingFrom.type === 'business' }\"\r\n                  :style=\"{ left: businessInfo.x + 'px', top: businessInfo.y + 'px' }\"\r\n                  @mousedown=\"startBusinessDrag($event)\"\r\n                  @click=\"handleBusinessNodeClick($event)\"\r\n                  @contextmenu.prevent=\"startConnection({ type: 'business', id: businessInfo.id, name: businessInfo.name })\"\r\n                >\r\n                  <AppstoreOutlined class=\"node-icon\" />\r\n                  <div class=\"node-info\">\r\n                    <div class=\"node-title\">{{ businessInfo.name }}</div>\r\n                    <div class=\"node-subtitle\">业务中心</div>\r\n                  </div>\r\n                  <div v-if=\"connectingFrom && connectingFrom.type === 'business'\" class=\"connecting-indicator\">\r\n                    连线起点\r\n                  </div>\r\n                </div>\r\n                \r\n                <!-- 画布中的IP节点（从侧边栏拖拽过来的） -->\r\n                <div\r\n                  v-for=\"ip in canvasIPs\"\r\n                  :key=\"'canvas-' + ip.id\"\r\n                  class=\"canvas-ip-node\"\r\n                  :class=\"[ip.ping_status, { \r\n                    'connecting-from': connectingFrom && connectingFrom.type === 'ip' && connectingFrom.id === ip.id \r\n                  }]\"\r\n                  :style=\"{\r\n                    left: ip.x + 'px',\r\n                    top: ip.y + 'px'\r\n                  }\"\r\n                  @mousedown=\"startDrag($event, ip)\"\r\n                  @click=\"handleCanvasNodeClick($event, ip)\"\r\n                  @contextmenu.prevent=\"startConnection({ type: 'ip', id: ip.id, name: ip.ip_address, x: ip.x + 60, y: ip.y + 40 })\"\r\n                >\r\n                  <div class=\"node-icon\">\r\n                    <component :is=\"getServiceIcon(ip.service_type)\" />\r\n                  </div>\r\n                  <div class=\"node-info\">\r\n                    <div class=\"node-title\">{{ ip.ip_address }}</div>\r\n                    <div class=\"node-subtitle\">{{ getServiceTypeText(ip.service_type) }}</div>\r\n                  </div>\r\n                  <div class=\"node-status\" :class=\"ip.ping_status\">\r\n                    <span class=\"status-dot\" />\r\n                    {{ getPingStatusText(ip.ping_status) }}\r\n                  </div>\r\n                  <div v-if=\"connectingFrom && connectingFrom.type === 'ip' && connectingFrom.id === ip.id\" class=\"connecting-indicator\">\r\n                    连线起点\r\n                  </div>\r\n                  <!-- 删除按钮 -->\r\n                  <div class=\"node-remove-btn\" @click.stop=\"removeCanvasNode(ip.id)\" title=\"从画布移除\">\r\n                    <CloseOutlined />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            </div>\r\n            </div>\r\n\r\n      </a-card>\r\n    </div>\r\n\r\n    <!-- 添加IP模态框 -->\r\n    <a-modal\r\n      v-model:open=\"addIPModalVisible\"\r\n      title=\"添加关联IP\"\r\n      @ok=\"handleAddIP\"\r\n      @cancel=\"handleCancelAddIP\"\r\n    >\r\n      <a-form layout=\"vertical\">\r\n        <a-form-item label=\"选择IP\" required>\r\n          <a-select\r\n            v-model:value=\"ipForm.ip_id\"\r\n            placeholder=\"请选择要关联的IP\"\r\n            show-search\r\n            :filter-option=\"false\"\r\n            @search=\"handleIPSearch\"\r\n            :loading=\"ipLoading\"\r\n          >\r\n            <a-select-option\r\n              v-for=\"ip in availableIPs\"\r\n              :key=\"ip.id\"\r\n              :value=\"ip.id\"\r\n            >\r\n              {{ ip.ip_address }} - {{ ip.hostname || '未知主机' }}\r\n            </a-select-option>\r\n          </a-select>\r\n        </a-form-item>\r\n        <a-form-item label=\"服务类型\">\r\n          <a-select\r\n            v-model:value=\"ipForm.service_type\"\r\n            placeholder=\"请选择服务类型\"\r\n          >\r\n            <a-select-option value=\"web\">Web服务</a-select-option>\r\n            <a-select-option value=\"database\">数据库</a-select-option>\r\n            <a-select-option value=\"cache\">缓存服务</a-select-option>\r\n            <a-select-option value=\"message_queue\">消息队列</a-select-option>\r\n            <a-select-option value=\"file_storage\">文件存储</a-select-option>\r\n            <a-select-option value=\"monitoring\">监控服务</a-select-option>\r\n            <a-select-option value=\"other\">其他</a-select-option>\r\n          </a-select>\r\n        </a-form-item>\r\n        <a-form-item label=\"关联说明\">\r\n          <a-textarea\r\n            v-model:value=\"ipForm.description\"\r\n            placeholder=\"请输入关联说明（可选）\"\r\n            :rows=\"3\"\r\n          />\r\n        </a-form-item>\r\n      </a-form>\r\n    </a-modal>\r\n\r\n    <!-- 编辑业务模态框 -->\r\n    <a-modal\r\n      v-model:open=\"editModalVisible\"\r\n      title=\"编辑业务\"\r\n      width=\"800px\"\r\n      @ok=\"handleEditSubmit\"\r\n      @cancel=\"handleEditCancel\"\r\n    >\r\n      <a-form\r\n        ref=\"editFormRef\"\r\n        :model=\"editForm\"\r\n        :rules=\"editFormRules\"\r\n        layout=\"vertical\"\r\n      >\r\n        <a-row :gutter=\"16\">\r\n          <a-col :span=\"12\">\r\n            <a-form-item label=\"业务名称\" name=\"name\">\r\n              <a-input\r\n                v-model:value=\"editForm.name\"\r\n                placeholder=\"请输入业务名称\"\r\n              />\r\n            </a-form-item>\r\n          </a-col>\r\n          <a-col :span=\"12\">\r\n            <a-form-item label=\"上线日期\" name=\"online_date\">\r\n              <a-date-picker\r\n                v-model:value=\"editForm.online_date\"\r\n                style=\"width: 100%\"\r\n                format=\"YYYY-MM-DD\"\r\n              />\r\n            </a-form-item>\r\n          </a-col>\r\n        </a-row>\r\n\r\n        <a-row :gutter=\"16\">\r\n          <a-col :span=\"12\">\r\n            <a-form-item label=\"责任人\" name=\"responsible_person\">\r\n              <a-input\r\n                v-model:value=\"editForm.responsible_person\"\r\n                placeholder=\"请输入责任人\"\r\n              />\r\n            </a-form-item>\r\n          </a-col>\r\n          <a-col :span=\"12\">\r\n            <a-form-item label=\"访问地址\" name=\"access_url\">\r\n              <a-input\r\n                v-model:value=\"editForm.access_url\"\r\n                placeholder=\"请输入访问地址\"\r\n              />\r\n            </a-form-item>\r\n          </a-col>\r\n        </a-row>\r\n\r\n        <a-form-item label=\"功能用途\" name=\"function_purpose\">\r\n          <a-textarea\r\n            v-model:value=\"editForm.function_purpose\"\r\n            placeholder=\"请输入功能用途\"\r\n            :rows=\"3\"\r\n          />\r\n        </a-form-item>\r\n\r\n        <a-form-item label=\"业务描述\" name=\"description\">\r\n          <a-textarea\r\n            v-model:value=\"editForm.description\"\r\n            placeholder=\"请输入业务描述\"\r\n            :rows=\"4\"\r\n          />\r\n        </a-form-item>\r\n      </a-form>\r\n    </a-modal>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, onMounted, computed, nextTick } from 'vue';\r\nimport { useRoute, useRouter } from 'vue-router';\r\nimport { message, Modal } from 'ant-design-vue';\r\nimport dayjs from 'dayjs';\r\nimport { businessAPI } from '@/api/businessManagement';\r\nimport { ipAPI } from '@/api/ipManagement';\r\nimport {\r\n  ArrowLeftOutlined,\r\n  AppstoreOutlined,\r\n  EditOutlined,\r\n  ReloadOutlined,\r\n  TeamOutlined,\r\n  UserOutlined,\r\n  CalendarOutlined,\r\n  LinkOutlined,\r\n  GlobalOutlined,\r\n  PlusOutlined,\r\n  EyeOutlined,\r\n  DeleteOutlined,\r\n  ExportOutlined,\r\n  NodeIndexOutlined,\r\n  CloseOutlined,\r\n  DatabaseOutlined,\r\n  ThunderboltOutlined,\r\n  MessageOutlined,\r\n  FolderOutlined,\r\n  SettingOutlined\r\n} from '@ant-design/icons-vue';\r\n\r\nconst route = useRoute();\r\nconst router = useRouter();\r\n\r\n// 响应式数据\r\nconst businessInfo = ref({});\r\nconst relatedIPs = ref([]);\r\nconst availableIPs = ref([]);\r\nconst loading = ref(false);\r\nconst ipLoading = ref(false);\r\nconst topologyLoading = ref(false);\r\nconst addIPModalVisible = ref(false);\r\nconst editModalVisible = ref(false);\r\nconst editFormRef = ref();\r\n\r\n// 表单数据\r\nconst ipForm = reactive({\r\n  ip_id: undefined,\r\n  description: '',\r\n  service_type: 'web'\r\n});\r\n\r\n// 拓扑图相关数据\r\nconst showConnections = ref(true);\r\nconst customConnections = ref([]);\r\nconst isConnecting = ref(false);\r\nconst connectingFrom = ref(null);\r\nconst tempConnection = ref(null);\r\nconst mousePosition = ref({ x: 0, y: 0 });\r\nconst isDragging = ref(false);\r\nconst dragTarget = ref(null);\r\nconst dragOffset = ref({ x: 0, y: 0 });\r\nconst canvasIPs = ref([]); // 画布中的IP节点\r\n\r\nconst editForm = reactive({\r\n  name: '',\r\n  responsible_person: '',\r\n  online_date: null,\r\n  access_url: '',\r\n  function_purpose: '',\r\n  description: ''\r\n});\r\n\r\n// 编辑表单验证规则\r\nconst editFormRules = {\r\n  name: [{ required: true, message: '请输入业务名称', trigger: 'blur' }],\r\n  responsible_person: [{ required: true, message: '请输入责任人', trigger: 'blur' }],\r\n  online_date: [{ required: true, message: '请选择上线日期', trigger: 'change' }],\r\n  access_url: [\r\n    { \r\n      validator: (rule, value) => {\r\n        if (!value || value.trim() === '') {\r\n          return Promise.resolve();\r\n        }\r\n        return Promise.resolve();\r\n      },\r\n      trigger: 'blur'\r\n    }\r\n  ]\r\n};\r\n\r\n// IP列表表格列配置\r\nconst ipColumns = [\r\n  {\r\n    title: 'IP地址',\r\n    dataIndex: 'ip_address',\r\n    key: 'ip_address',\r\n    width: 150\r\n  },\r\n  {\r\n    title: '主机名',\r\n    dataIndex: 'hostname',\r\n    key: 'hostname',\r\n    width: 150\r\n  },\r\n  {\r\n    title: '状态',\r\n    dataIndex: 'status',\r\n    key: 'status',\r\n    width: 100\r\n  },\r\n  {\r\n    title: '服务类型',\r\n    dataIndex: 'service_type',\r\n    key: 'service_type',\r\n    width: 120\r\n  },\r\n  {\r\n    title: 'Ping状态',\r\n    dataIndex: 'ping_status',\r\n    key: 'ping_status',\r\n    width: 120\r\n  },\r\n  {\r\n    title: '最后检测',\r\n    dataIndex: 'last_seen',\r\n    key: 'last_seen',\r\n    width: 150,\r\n    customRender: ({ text }) => formatDate(text)\r\n  },\r\n  {\r\n    title: '关联说明',\r\n    dataIndex: 'description',\r\n    key: 'description',\r\n    ellipsis: true\r\n  },\r\n  {\r\n    title: '操作',\r\n    dataIndex: 'action',\r\n    key: 'action',\r\n    width: 100,\r\n    fixed: 'right'\r\n  }\r\n];\r\n\r\n// 方法\r\nconst fetchBusinessDetail = async () => {\r\n  loading.value = true;\r\n  try {\r\n    const response = await businessAPI.getBusinessDetail(route.params.id);\r\n    businessInfo.value = response.data;\r\n    \r\n    // 确保业务中心节点的坐标是数值类型\r\n    if (!businessInfo.value.x || typeof businessInfo.value.x !== 'number') {\r\n      businessInfo.value.x = 400; // 默认X坐标\r\n    }\r\n    if (!businessInfo.value.y || typeof businessInfo.value.y !== 'number') {\r\n      businessInfo.value.y = 260; // 默认Y坐标\r\n    }\r\n  } catch (error) {\r\n    message.error('获取业务详情失败');\r\n  } finally {\r\n    loading.value = false;\r\n  }\r\n};\r\n\r\nconst fetchRelatedIPs = async () => {\r\n  ipLoading.value = true;\r\n  try {\r\n    const response = await businessAPI.getBusinessIPs(route.params.id);\r\n    relatedIPs.value = response.data || [];\r\n    \r\n    // 数据加载完成后，重置IP节点位置\r\n    nextTick(() => {\r\n      resetNodePositions();\r\n    });\r\n  } catch (error) {\r\n    message.error('获取关联IP失败');\r\n  } finally {\r\n    ipLoading.value = false;\r\n  }\r\n};\r\n\r\nconst fetchAvailableIPs = async (searchKeyword = '') => {\r\n  try {\r\n    const response = await ipAPI.getIPList({\r\n      search: searchKeyword,\r\n      page_size: 100 // 获取更多IP供选择\r\n    });\r\n    \r\n    let allIPs = response.data.results || response.data || [];\r\n    \r\n    // 过滤掉已经关联到当前业务的IP\r\n    const relatedIPIds = relatedIPs.value.map(ip => ip.ip_address);\r\n    availableIPs.value = allIPs.filter(ip => !relatedIPIds.includes(ip.ip_address));\r\n  } catch (error) {\r\n    console.error('获取可用IP列表失败:', error);\r\n    message.error('获取可用IP列表失败');\r\n  }\r\n};\r\n\r\nconst handleIPSearch = (value) => {\r\n  fetchAvailableIPs(value);\r\n};\r\n\r\nconst goBack = () => {\r\n  router.go(-1);\r\n};\r\n\r\nconst editBusiness = () => {\r\n  // 将当前业务信息填充到编辑表单\r\n  Object.assign(editForm, {\r\n    name: businessInfo.value.name || '',\r\n    responsible_person: businessInfo.value.responsible_person || '',\r\n    online_date: businessInfo.value.online_date ? dayjs(businessInfo.value.online_date) : null,\r\n    access_url: businessInfo.value.access_url || '',\r\n    description: businessInfo.value.description || ''\r\n  });\r\n  editModalVisible.value = true;\r\n};\r\n\r\nconst refreshData = () => {\r\n  fetchBusinessDetail();\r\n  fetchRelatedIPs();\r\n};\r\n\r\nconst refreshIPs = () => {\r\n  fetchRelatedIPs();\r\n};\r\n\r\nconst refreshTopology = () => {\r\n  topologyLoading.value = true;\r\n  // 模拟拓扑图刷新\r\n  setTimeout(() => {\r\n    topologyLoading.value = false;\r\n    message.success('拓扑图已刷新');\r\n  }, 1500);\r\n};\r\n\r\nconst exportTopology = () => {\r\n  message.info('拓扑图导出功能开发中...');\r\n};\r\n\r\nconst showAddIPModal = () => {\r\n  fetchAvailableIPs();\r\n  addIPModalVisible.value = true;\r\n};\r\n\r\nconst handleAddIP = async () => {\r\n  if (!ipForm.ip_id) {\r\n    message.error('请选择要关联的IP');\r\n    return;\r\n  }\r\n  \r\n  try {\r\n    // 找到选中的IP信息\r\n    const selectedIP = availableIPs.value.find(ip => ip.id === ipForm.ip_id);\r\n    if (!selectedIP) {\r\n      message.error('选中的IP信息无效');\r\n      return;\r\n    }\r\n    \r\n    // 构造后端所需的数据格式\r\n    const submitData = {\r\n      ip_address: selectedIP.ip_address,\r\n      hostname: selectedIP.hostname || '',\r\n      description: ipForm.description || '',\r\n      service_type: ipForm.service_type || 'web',\r\n      status: 'unknown'\r\n    };\r\n    \r\n    await businessAPI.addBusinessIP(route.params.id, submitData);\r\n    message.success('IP关联成功');\r\n    addIPModalVisible.value = false;\r\n    Object.assign(ipForm, { ip_id: undefined, description: '', service_type: 'web' });\r\n    fetchRelatedIPs();\r\n  } catch (error) {\r\n    console.error('IP关联失败:', error);\r\n    message.error('IP关联失败');\r\n  }\r\n};\r\n\r\nconst handleCancelAddIP = () => {\r\n  addIPModalVisible.value = false;\r\n  Object.assign(ipForm, { ip_id: undefined, description: '', service_type: 'web' });\r\n};\r\n\r\nconst handleEditSubmit = async () => {\r\n  try {\r\n    await editFormRef.value.validate();\r\n    \r\n    const submitData = {\r\n      name: editForm.name,\r\n      responsible_person: editForm.responsible_person,\r\n      online_date: editForm.online_date ? dayjs(editForm.online_date).format('YYYY-MM-DD') : null,\r\n      access_url: editForm.access_url && editForm.access_url.trim() ? editForm.access_url.trim() : null,\r\n      function_purpose: editForm.function_purpose || '',\r\n      description: editForm.description || ''\r\n    };\r\n    \r\n    await businessAPI.updateBusiness(route.params.id, submitData);\r\n    message.success('业务更新成功');\r\n    editModalVisible.value = false;\r\n    fetchBusinessDetail(); // 重新获取业务详情\r\n  } catch (error) {\r\n    if (error.errorFields) {\r\n      message.error('请检查表单输入');\r\n    } else {\r\n      message.error('业务更新失败');\r\n    }\r\n  }\r\n};\r\n\r\nconst handleEditCancel = () => {\r\n  editModalVisible.value = false;\r\n  editFormRef.value?.resetFields();\r\n};\r\n\r\nconst removeIP = (record) => {\r\n  Modal.confirm({\r\n    title: '确认移除',\r\n    content: `确定要移除IP \"${record.ip_address}\" 的关联吗？`,\r\n    okText: '确定',\r\n    cancelText: '取消',\r\n    onOk: async () => {\r\n      try {\r\n        await businessAPI.removeBusinessIP(route.params.id, record.id);\r\n        message.success('移除成功');\r\n        fetchRelatedIPs();\r\n      } catch (error) {\r\n        message.error('移除失败');\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\nconst viewIPDetail = (record) => {\r\n  router.push({\r\n    name: 'ipManagement',\r\n    query: { highlight: record.ip_address }\r\n  });\r\n};\r\n\r\nconst openUrl = (url) => {\r\n  if (url) {\r\n    window.open(url, '_blank');\r\n  }\r\n};\r\n\r\nconst formatDate = (date) => {\r\n  return date ? dayjs(date).format('YYYY-MM-DD HH:mm:ss') : '-';\r\n};\r\n\r\nconst getStatusColor = (status) => {\r\n  const colors = {\r\n    'active': 'green',\r\n    'inactive': 'red',\r\n    'pending': 'orange',\r\n    'unknown': 'default'\r\n  };\r\n  return colors[status] || 'default';\r\n};\r\n\r\nconst getStatusText = (status) => {\r\n  const texts = {\r\n    'active': '活跃',\r\n    'inactive': '非活跃',\r\n    'pending': '待确认',\r\n    'unknown': '未知'\r\n  };\r\n  return texts[status] || '未知';\r\n};\r\n\r\nconst getPingStatusText = (status) => {\r\n  const texts = {\r\n    'online': '在线',\r\n    'offline': '离线',\r\n    'timeout': '超时'\r\n  };\r\n  return texts[status] || '未知';\r\n};\r\n\r\nconst getServiceTypeText = (serviceType) => {\r\n  const texts = {\r\n    'web': 'Web服务',\r\n    'database': '数据库',\r\n    'cache': '缓存服务',\r\n    'message_queue': '消息队列',\r\n    'file_storage': '文件存储',\r\n    'monitoring': '监控服务',\r\n    'other': '其他'\r\n  };\r\n  return texts[serviceType] || '其他';\r\n};\r\n\r\nconst filterOption = (input, option) => {\r\n  return option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\r\n};\r\n\r\n// 计算节点中心点坐标的统一方法\r\nconst getNodeCenterCoordinates = (node) => {\r\n  if (node.type === 'business') {\r\n    // 业务中心节点：120x80px，中心点偏移60,40\r\n    return {\r\n      x: businessInfo.value.x + 60,\r\n      y: businessInfo.value.y + 40\r\n    };\r\n  } else {\r\n    // IP节点：120x80px，中心点偏移60,40\r\n    return {\r\n      x: (node.x || 0) + 60,\r\n      y: (node.y || 0) + 40\r\n    };\r\n  }\r\n};\r\n\r\n// 自定义连线相关方法\r\nconst startConnection = (node) => {\r\n  if (isConnecting.value) {\r\n    // 如果已经在连线模式，完成连线\r\n    finishConnection(node);\r\n  } else {\r\n    // 开始连线\r\n    isConnecting.value = true;\r\n    connectingFrom.value = { ...node };\r\n    \r\n    // 计算起点坐标\r\n    const centerCoords = getNodeCenterCoordinates(node);\r\n    connectingFrom.value.x = centerCoords.x;\r\n    connectingFrom.value.y = centerCoords.y;\r\n  }\r\n};\r\n\r\nconst finishConnection = (toNode) => {\r\n  if (!connectingFrom.value || !toNode) return;\r\n  \r\n  // 不能连接到自己\r\n  if (connectingFrom.value.type === toNode.type && connectingFrom.value.id === toNode.id) {\r\n    return;\r\n  }\r\n  \r\n  // 计算目标节点的中心点坐标\r\n  const toCenterCoords = getNodeCenterCoordinates(toNode);\r\n  const toX = toCenterCoords.x;\r\n  const toY = toCenterCoords.y;\r\n  \r\n  // 创建连线\r\n  const connection = {\r\n    id: Date.now() + Math.random(),\r\n    from: {\r\n      type: connectingFrom.value.type,\r\n      id: connectingFrom.value.id,\r\n      name: connectingFrom.value.name,\r\n      x: connectingFrom.value.x,\r\n      y: connectingFrom.value.y\r\n    },\r\n    to: {\r\n      type: toNode.type,\r\n      id: toNode.id,\r\n      name: toNode.name,\r\n      x: toX,\r\n      y: toY\r\n    }\r\n  };\r\n  \r\n  customConnections.value.push(connection);\r\n  \r\n  // 重置连线状态\r\n  isConnecting.value = false;\r\n  connectingFrom.value = null;\r\n  tempConnection.value = null;\r\n  \r\n  message.success(`已创建从 ${connection.from.name} 到 ${connection.to.name} 的连线`);\r\n};\r\n\r\nconst cancelConnection = () => {\r\n  isConnecting.value = false;\r\n  connectingFrom.value = null;\r\n  tempConnection.value = null;\r\n};\r\n\r\nconst removeConnection = (connectionId) => {\r\n  const index = customConnections.value.findIndex(conn => conn.id === connectionId);\r\n  if (index > -1) {\r\n    customConnections.value.splice(index, 1);\r\n    message.success('连线已删除');\r\n  }\r\n};\r\n\r\nconst clearAllConnections = () => {\r\n  Modal.confirm({\r\n    title: '确认清除',\r\n    content: '确定要清除所有自定义连线吗？',\r\n    onOk() {\r\n      customConnections.value = [];\r\n      message.success('已清除所有自定义连线');\r\n    }\r\n  });\r\n};\r\n\r\nconst getNodeCenter = (node) => {\r\n  return {\r\n    x: node.x + 60, // 节点宽度的一半\r\n    y: node.y + 40  // 节点高度的一半\r\n  };\r\n};\r\n\r\nconst onMouseMove = (event) => {\r\n  if (isConnecting.value && connectingFrom.value) {\r\n    const rect = event.currentTarget.getBoundingClientRect();\r\n    mousePosition.value = {\r\n      x: event.clientX - rect.left,\r\n      y: event.clientY - rect.top\r\n    };\r\n    \r\n    tempConnection.value = {\r\n      from: {\r\n        x: connectingFrom.value.x,\r\n        y: connectingFrom.value.y\r\n      },\r\n      to: {\r\n        x: mousePosition.value.x,\r\n        y: mousePosition.value.y\r\n      }\r\n    };\r\n  }\r\n};\r\n\r\n// 获取节点默认位置（围绕中心点排列）\r\nconst getDefaultNodePosition = (index) => {\r\n  // 获取业务中心节点的中心坐标\r\n  const businessCenter = getNodeCenterCoordinates({ type: 'business' });\r\n  const centerX = businessCenter.x;\r\n  const centerY = businessCenter.y;\r\n  const radius = 150; // 围绕中心的半径\r\n  const totalNodes = relatedIPs.value.length;\r\n  \r\n  if (totalNodes === 1) {\r\n    // 单个节点放在中心右侧\r\n    return { x: centerX + 120, y: centerY - 40 };\r\n  }\r\n  \r\n  // 多个节点围绕中心排列\r\n  const angle = (2 * Math.PI * index) / totalNodes;\r\n  const x = centerX + radius * Math.cos(angle) - 60; // 减去节点宽度的一半\r\n  const y = centerY + radius * Math.sin(angle) - 40; // 减去节点高度的一半\r\n  \r\n  return { x: Math.max(0, x), y: Math.max(0, y) };\r\n};\r\n\r\nconst resetNodePositions = () => {\r\n  relatedIPs.value.forEach((ip, index) => {\r\n    const pos = getDefaultNodePosition(index);\r\n    ip.x = pos.x;\r\n    ip.y = pos.y;\r\n  });\r\n  message.success('节点位置已重置');\r\n};\r\n\r\n// 处理侧边栏节点点击事件\r\nconst handleSidebarNodeClick = (event, ip) => {\r\n  // 如果刚刚完成拖拽，不触发连线\r\n  if (isDragging.value) {\r\n    return;\r\n  }\r\n  \r\n  // 检查是否已在画布中\r\n  const existsInCanvas = canvasIPs.value.find(canvasIP => canvasIP.id === ip.id);\r\n  if (existsInCanvas) {\r\n    message.info('该IP节点已在画布中');\r\n    return;\r\n  }\r\n  \r\n  // 显示IP详情或其他操作\r\n  console.log('点击侧边栏IP节点:', ip);\r\n};\r\n\r\n// 处理画布节点点击事件\r\nconst handleCanvasNodeClick = (event, ip) => {\r\n  // 如果刚刚完成拖拽，不触发连线\r\n  if (isDragging.value) {\r\n    return;\r\n  }\r\n  \r\n  // 触发连线\r\n  startConnection({ \r\n    type: 'ip', \r\n    id: ip.id, \r\n    name: ip.ip_address, \r\n    x: ip.x, \r\n    y: ip.y \r\n  });\r\n};\r\n\r\n// 从画布移除IP节点\r\nconst removeCanvasNode = (ipId) => {\r\n  const index = canvasIPs.value.findIndex(ip => ip.id === ipId);\r\n  if (index !== -1) {\r\n    canvasIPs.value.splice(index, 1);\r\n    \r\n    // 移除相关连线\r\n    customConnections.value = customConnections.value.filter(conn => \r\n      !(conn.from.id === ipId || conn.to.id === ipId)\r\n    );\r\n    \r\n    message.success('已从画布移除IP节点');\r\n  }\r\n};\r\n\r\n// 处理业务节点点击事件\r\nconst handleBusinessNodeClick = (event) => {\r\n  // 如果刚刚完成拖拽，不触发连线\r\n  if (isDragging.value) {\r\n    return;\r\n  }\r\n  \r\n  // 触发连线\r\n  startConnection({ type: 'business', id: businessInfo.value.id, name: businessInfo.value.name });\r\n};\r\n\r\nconst startDrag = (event, ip) => {\r\n  if (isConnecting.value) return; // 连线模式下不允许拖拽\r\n  \r\n  isDragging.value = true;\r\n  dragTarget.value = ip;\r\n  \r\n  // 获取容器的位置\r\n  const container = document.querySelector('.main-canvas');\r\n  if (!container) return;\r\n  \r\n  const containerRect = container.getBoundingClientRect();\r\n  \r\n  // 设置较小的偏移，让节点中心跟随鼠标\r\n  dragOffset.value = {\r\n    x: 60, // 节点宽度的一半\r\n    y: 40  // 节点高度的一半\r\n  };\r\n  \r\n  document.addEventListener('mousemove', onDrag);\r\n  document.addEventListener('mouseup', stopDrag);\r\n  event.preventDefault();\r\n  event.stopPropagation();\r\n};\r\n\r\n// 从侧边栏拖拽IP节点到画布\r\nconst startDragFromSidebar = (event, ip) => {\r\n  if (isConnecting.value) return; // 连线模式下不允许拖拽\r\n  \r\n  // 检查IP是否已经在画布中\r\n  const existingIndex = canvasIPs.value.findIndex(canvasIP => canvasIP.id === ip.id);\r\n  if (existingIndex !== -1) {\r\n    message.warning('该IP节点已在画布中');\r\n    return;\r\n  }\r\n  \r\n  // 创建新的画布IP节点\r\n  const newCanvasIP = {\r\n    ...ip,\r\n    x: 100, // 默认位置\r\n    y: 100\r\n  };\r\n  \r\n  canvasIPs.value.push(newCanvasIP);\r\n  \r\n  isDragging.value = true;\r\n  dragTarget.value = newCanvasIP;\r\n  \r\n  // 设置较小的偏移，让节点中心跟随鼠标\r\n  dragOffset.value = {\r\n    x: 60, // 节点宽度的一半\r\n    y: 40  // 节点高度的一半\r\n  };\r\n  \r\n  document.addEventListener('mousemove', onCanvasDrag);\r\n  document.addEventListener('mouseup', stopCanvasDrag);\r\n  event.preventDefault();\r\n  event.stopPropagation();\r\n};\r\n\r\n// 业务中心节点拖拽处理\r\nconst startBusinessDrag = (event) => {\r\n  if (isConnecting.value) return; // 连线模式下不允许拖拽\r\n  \r\n  isDragging.value = true;\r\n  dragTarget.value = { type: 'business', data: businessInfo.value };\r\n  \r\n  // 获取容器的位置\r\n  const container = document.querySelector('.enhanced-topology');\r\n  if (!container) return;\r\n  \r\n  const containerRect = container.getBoundingClientRect();\r\n  \r\n  // 设置较小的偏移，让节点中心跟随鼠标\r\n  dragOffset.value = {\r\n    x: 60, // 节点宽度的一半\r\n    y: 40  // 节点高度的一半\r\n  };\r\n  \r\n  document.addEventListener('mousemove', onBusinessDrag);\r\n  document.addEventListener('mouseup', stopBusinessDrag);\r\n  event.preventDefault();\r\n  event.stopPropagation();\r\n};\r\n\r\nconst onDrag = (event) => {\r\n  if (!isDragging.value || !dragTarget.value) return;\r\n  \r\n  const container = document.querySelector('.main-canvas');\r\n  if (!container) return;\r\n  \r\n  const rect = container.getBoundingClientRect();\r\n  \r\n  // 计算新位置（鼠标位置减去偏移量）\r\n  const newX = event.clientX - rect.left - dragOffset.value.x;\r\n  const newY = event.clientY - rect.top - dragOffset.value.y;\r\n  \r\n  // 限制在容器范围内\r\n  dragTarget.value.x = Math.max(0, Math.min(newX, rect.width - 120));\r\n  dragTarget.value.y = Math.max(0, Math.min(newY, rect.height - 80));\r\n  \r\n  // 更新相关的自定义连线\r\n  const centerCoords = getNodeCenterCoordinates(dragTarget.value);\r\n  customConnections.value.forEach(connection => {\r\n    if (connection.from.type === 'ip' && connection.from.id === dragTarget.value.id) {\r\n      connection.from.x = centerCoords.x;\r\n      connection.from.y = centerCoords.y;\r\n    }\r\n    if (connection.to.type === 'ip' && connection.to.id === dragTarget.value.id) {\r\n      connection.to.x = centerCoords.x;\r\n      connection.to.y = centerCoords.y;\r\n    }\r\n  });\r\n};\r\n\r\nconst stopDrag = () => {\r\n  document.removeEventListener('mousemove', onDrag);\r\n  document.removeEventListener('mouseup', stopDrag);\r\n  \r\n  // 延迟重置拖拽状态，避免立即触发点击事件\r\n  setTimeout(() => {\r\n    isDragging.value = false;\r\n    dragTarget.value = null;\r\n  }, 100);\r\n};\r\n\r\n// 画布IP节点拖拽移动\r\nconst onCanvasDrag = (event) => {\r\n  if (!isDragging.value || !dragTarget.value) return;\r\n  \r\n  const container = document.querySelector('.main-canvas');\r\n  if (!container) return;\r\n  \r\n  const rect = container.getBoundingClientRect();\r\n  \r\n  // 计算新位置（鼠标位置减去偏移量）\r\n  const newX = event.clientX - rect.left - dragOffset.value.x;\r\n  const newY = event.clientY - rect.top - dragOffset.value.y;\r\n  \r\n  // 限制在容器范围内\r\n  dragTarget.value.x = Math.max(0, Math.min(newX, rect.width - 120));\r\n  dragTarget.value.y = Math.max(0, Math.min(newY, rect.height - 80));\r\n  \r\n  // 更新相关的自定义连线\r\n  const centerCoords = getNodeCenterCoordinates(dragTarget.value);\r\n  customConnections.value.forEach(connection => {\r\n    if (connection.from.type === 'ip' && connection.from.id === dragTarget.value.id) {\r\n      connection.from.x = centerCoords.x;\r\n      connection.from.y = centerCoords.y;\r\n    }\r\n    if (connection.to.type === 'ip' && connection.to.id === dragTarget.value.id) {\r\n      connection.to.x = centerCoords.x;\r\n      connection.to.y = centerCoords.y;\r\n    }\r\n  });\r\n};\r\n\r\n// 停止画布IP节点拖拽\r\nconst stopCanvasDrag = () => {\r\n  document.removeEventListener('mousemove', onCanvasDrag);\r\n  document.removeEventListener('mouseup', stopCanvasDrag);\r\n  \r\n  // 延迟重置拖拽状态，避免立即触发点击事件\r\n  setTimeout(() => {\r\n    isDragging.value = false;\r\n    dragTarget.value = null;\r\n  }, 100);\r\n};\r\n\r\n// 业务中心节点拖拽移动\r\nconst onBusinessDrag = (event) => {\r\n  if (!isDragging.value || !dragTarget.value || dragTarget.value.type !== 'business') return;\r\n  \r\n  const container = document.querySelector('.main-canvas');\r\n  if (!container) return;\r\n  \r\n  const rect = container.getBoundingClientRect();\r\n  \r\n  // 计算新位置（鼠标位置减去偏移量）\r\n  const newX = event.clientX - rect.left - dragOffset.value.x;\r\n  const newY = event.clientY - rect.top - dragOffset.value.y;\r\n  \r\n  // 限制在容器范围内\r\n  businessInfo.value.x = Math.max(0, Math.min(newX, rect.width - 120));\r\n  businessInfo.value.y = Math.max(0, Math.min(newY, rect.height - 80));\r\n  \r\n  // 更新相关的自定义连线\r\n  const centerCoords = getNodeCenterCoordinates({ type: 'business' });\r\n  customConnections.value.forEach(connection => {\r\n    if (connection.from.type === 'business') {\r\n      connection.from.x = centerCoords.x;\r\n      connection.from.y = centerCoords.y;\r\n    }\r\n    if (connection.to.type === 'business') {\r\n      connection.to.x = centerCoords.x;\r\n      connection.to.y = centerCoords.y;\r\n    }\r\n  });\r\n};\r\n\r\n// 业务中心节点停止拖拽\r\nconst stopBusinessDrag = () => {\r\n  document.removeEventListener('mousemove', onBusinessDrag);\r\n  document.removeEventListener('mouseup', stopBusinessDrag);\r\n  \r\n  // 延迟重置拖拽状态，避免立即触发点击事件\r\n  setTimeout(() => {\r\n    isDragging.value = false;\r\n    dragTarget.value = null;\r\n  }, 100);\r\n};\r\n\r\nconst getServiceIcon = (serviceType) => {\r\n  const icons = {\r\n    'web': 'GlobalOutlined',\r\n    'database': 'DatabaseOutlined',\r\n    'cache': 'ThunderboltOutlined',\r\n    'message_queue': 'MessageOutlined',\r\n    'file_storage': 'FolderOutlined',\r\n    'monitoring': 'EyeOutlined',\r\n    'other': 'SettingOutlined'\r\n  };\r\n  return icons[serviceType] || 'SettingOutlined';\r\n};\r\n\r\n// 生命周期\r\nonMounted(() => {\r\n  fetchBusinessDetail();\r\n  fetchRelatedIPs();\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.business-detail {\r\n  min-height: 100vh;\r\n}\r\n\r\n.page-header {\r\n  margin-bottom: 24px;\r\n}\r\n\r\n.header-content {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  background: white;\r\n  padding: 16px 24px;\r\n  border-radius: 8px;\r\n}\r\n\r\n.header-left {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.back-btn {\r\n  margin-right: 16px;\r\n  color: #666;\r\n}\r\n\r\n.page-title {\r\n  margin: 0;\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  color: #262626;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.title-icon {\r\n  margin-right: 8px;\r\n  color: #1890ff;\r\n}\r\n\r\n.info-section,\r\n.ip-section,\r\n.topology-section {\r\n  margin-bottom: 24px;\r\n}\r\n\r\n.info-item {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.label {\r\n  font-weight: 500;\r\n  color: #666;\r\n  margin-right: 8px;\r\n  min-width: 80px;\r\n}\r\n\r\n.value {\r\n  color: #262626;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.icon {\r\n  margin-right: 4px;\r\n  color: #1890ff;\r\n}\r\n\r\n.no-data {\r\n  color: #ccc;\r\n}\r\n\r\n.function-purpose-text {\r\n  line-height: 1.6;\r\n  color: #262626;\r\n}\r\n\r\n.section-title {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.count-badge {\r\n  margin-left: 8px;\r\n}\r\n\r\n.ip-info {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.ping-status {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.status-dot {\r\n  width: 8px;\r\n  height: 8px;\r\n  border-radius: 50%;\r\n  margin-right: 6px;\r\n  animation: pulse 2s infinite;\r\n}\r\n\r\n.status-dot.online {\r\n  background-color: #52c41a;\r\n}\r\n\r\n.status-dot.offline {\r\n  background-color: #ff4d4f;\r\n}\r\n\r\n.status-dot.timeout {\r\n  background-color: #faad14;\r\n}\r\n\r\n@keyframes pulse {\r\n  0% {\r\n    box-shadow: 0 0 0 0 rgba(82, 196, 26, 0.7);\r\n  }\r\n  70% {\r\n    box-shadow: 0 0 0 10px rgba(82, 196, 26, 0);\r\n  }\r\n  100% {\r\n    box-shadow: 0 0 0 0 rgba(82, 196, 26, 0);\r\n  }\r\n}\r\n\r\n.topology-container {\r\n  min-height: 300px;\r\n  width: 100%;\r\n  overflow-x: auto;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 16px;\r\n}\r\n\r\n.topology-loading {\r\n  text-align: center;\r\n  color: #666;\r\n}\r\n\r\n.topology-placeholder {\r\n  text-align: center;\r\n  color: #666;\r\n}\r\n\r\n.topology-icon {\r\n  font-size: 48px;\r\n  color: #1890ff;\r\n  margin-bottom: 16px;\r\n}\r\n\r\n.topology-desc {\r\n  color: #999;\r\n  margin-bottom: 24px;\r\n}\r\n\r\n.simple-topology {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 24px;\r\n}\r\n\r\n.business-node {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 16px;\r\n  background: #e6f7ff;\r\n  border: 2px solid #1890ff;\r\n  border-radius: 8px;\r\n  font-weight: 500;\r\n}\r\n\r\n/* 增强拓扑图样式 - 蓝色简约风格 */\r\n.topology-layout {\r\n  display: flex;\r\n  width: 100%;\r\n  height: 600px;\r\n  border: 2px solid #1890ff;\r\n  border-radius: 12px;\r\n  overflow: hidden;\r\n  box-shadow: 0 4px 16px rgba(24, 144, 255, 0.1);\r\n  margin: 16px 0;\r\n}\r\n\r\n.ip-nodes-sidebar {\r\n  width: 250px;\r\n  background: linear-gradient(180deg, #f0f8ff 0%, #e6f3ff 100%);\r\n  border-right: 1px solid #d9d9d9;\r\n  padding: 16px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.sidebar-title {\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  color: #1890ff;\r\n  margin-bottom: 12px;\r\n  text-align: center;\r\n}\r\n\r\n.sidebar-ip-node {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 8px 12px;\r\n  margin-bottom: 8px;\r\n  background: white;\r\n  border: 1px solid #d9d9d9;\r\n  border-radius: 6px;\r\n  cursor: grab;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.sidebar-ip-node:hover {\r\n  border-color: #1890ff;\r\n  box-shadow: 0 2px 8px rgba(24, 144, 255, 0.15);\r\n}\r\n\r\n.sidebar-ip-node:active {\r\n  cursor: grabbing;\r\n}\r\n\r\n.main-canvas {\r\n  flex: 1;\r\n  position: relative;\r\n  background: linear-gradient(135deg, #f8fbff 0%, #f0f7ff 50%, #e8f3ff 100%);\r\n  overflow: visible;\r\n}\r\n\r\n.enhanced-topology {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 600px;\r\n  background: linear-gradient(135deg, #f8fbff 0%, #f0f7ff 50%, #e8f3ff 100%);\r\n  border: 1px solid rgba(0, 102, 255, 0.2);\r\n  border-radius: 20px;\r\n  overflow: visible;\r\n  box-shadow: 0 8px 32px rgba(0, 102, 255, 0.1), inset 0 1px 0 rgba(255, 255, 255, 0.8);\r\n  margin: 16px 0;\r\n  backdrop-filter: blur(10px);\r\n}\r\n\r\n\r\n\r\n.topology-network {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.connection-lines {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  pointer-events: none;\r\n}\r\n\r\n.connection-lines line {\r\n  pointer-events: stroke;\r\n}\r\n\r\n.connection-line {\r\n  transition: all 0.3s ease;\r\n  filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.1));\r\n}\r\n\r\n.connection-line.success {\r\n  stroke: #52c41a;\r\n  animation: pulse-success 2s infinite;\r\n}\r\n\r\n.connection-line.failed {\r\n  stroke: #ff4d4f;\r\n  animation: pulse-failed 2s infinite;\r\n}\r\n\r\n.connection-line.timeout {\r\n  stroke: #faad14;\r\n  animation: pulse-timeout 2s infinite;\r\n}\r\n\r\n@keyframes pulse-success {\r\n  0%, 100% { opacity: 0.6; }\r\n  50% { opacity: 1; }\r\n}\r\n\r\n@keyframes pulse-failed {\r\n  0%, 100% { opacity: 0.4; }\r\n  50% { opacity: 0.8; }\r\n}\r\n\r\n@keyframes pulse-timeout {\r\n  0%, 100% { opacity: 0.5; }\r\n  50% { opacity: 0.9; }\r\n}\r\n\r\n.center-node {\r\n  position: absolute;\r\n  width: 120px;\r\n  height: 120px;\r\n  background: linear-gradient(135deg, #1890ff 0%, #40a9ff 100%);\r\n  border-radius: 50%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: white;\r\n  font-weight: 600;\r\n  box-shadow: 0 6px 20px rgba(24, 144, 255, 0.3);\r\n  border: 3px solid #ffffff;\r\n  transition: all 0.3s ease;\r\n  z-index: 10;\r\n}\r\n\r\n.center-node:hover {\r\n  box-shadow: 0 8px 24px rgba(24, 144, 255, 0.4);\r\n}\r\n\r\n.business-center {\r\n  background: linear-gradient(135deg, #1890ff 0%, #40a9ff 100%);\r\n}\r\n\r\n.ip-topology-node {\r\n  position: absolute;\r\n  width: 80px;\r\n  height: 80px;\r\n  background: #ffffff;\r\n  border-radius: 12px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #1890ff;\r\n  font-size: 11px;\r\n  font-weight: 500;\r\n  box-shadow: 0 4px 12px rgba(24, 144, 255, 0.15);\r\n  border: 2px solid #1890ff;\r\n  transition: all 0.3s ease;\r\n  cursor: move;\r\n  user-select: none;\r\n  z-index: 5;\r\n}\r\n\r\n.ip-topology-node:hover {\r\n  box-shadow: 0 6px 16px rgba(24, 144, 255, 0.25);\r\n  background: #f0f8ff;\r\n}\r\n\r\n.ip-topology-node.success {\r\n  background: #f6ffed;\r\n  border-color: #52c41a;\r\n  color: #52c41a;\r\n}\r\n\r\n.ip-topology-node.failed {\r\n  background: #fff2f0;\r\n  border-color: #ff4d4f;\r\n  color: #ff4d4f;\r\n}\r\n\r\n.ip-topology-node.timeout {\r\n  background: #fffbe6;\r\n  border-color: #faad14;\r\n  color: #faad14;\r\n}\r\n\r\n.node-icon {\r\n  font-size: 24px;\r\n  margin-bottom: 4px;\r\n  opacity: 0.8;\r\n}\r\n\r\n.center-node .node-icon {\r\n  font-size: 32px;\r\n  color: rgba(255, 255, 255, 0.9);\r\n}\r\n\r\n.node-info {\r\n  text-align: center;\r\n  line-height: 1.2;\r\n}\r\n\r\n.node-title {\r\n  font-weight: 600;\r\n  font-size: 12px;\r\n  margin-bottom: 2px;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  max-width: 70px;\r\n}\r\n\r\n.center-node .node-title {\r\n  font-size: 14px;\r\n  color: rgba(255, 255, 255, 0.95);\r\n  max-width: 100px;\r\n}\r\n\r\n.node-subtitle {\r\n  font-size: 10px;\r\n  opacity: 0.7;\r\n  white-space: nowrap;\r\n}\r\n\r\n.center-node .node-subtitle {\r\n  color: rgba(255, 255, 255, 0.8);\r\n}\r\n\r\n.node-type {\r\n  font-size: 9px;\r\n  opacity: 0.6;\r\n  margin-top: 2px;\r\n}\r\n\r\n.node-status {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 4px;\r\n  font-size: 9px;\r\n  margin-top: 4px;\r\n  padding: 2px 6px;\r\n  border-radius: 10px;\r\n  background: rgba(255, 255, 255, 0.2);\r\n}\r\n\r\n.node-status.success {\r\n  color: #52c41a;\r\n  background: rgba(82, 196, 26, 0.1);\r\n}\r\n\r\n.node-status.failed {\r\n  color: #ff4d4f;\r\n  background: rgba(255, 77, 79, 0.1);\r\n}\r\n\r\n.node-status.timeout {\r\n  color: #faad14;\r\n  background: rgba(250, 173, 20, 0.1);\r\n}\r\n\r\n.status-dot {\r\n  width: 6px;\r\n  height: 6px;\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n}\r\n\r\n.status-dot.success {\r\n  background-color: #52c41a;\r\n  box-shadow: 0 0 6px rgba(82, 196, 26, 0.6);\r\n}\r\n\r\n.status-dot.failed {\r\n  background-color: #ff4d4f;\r\n  box-shadow: 0 0 6px rgba(255, 77, 79, 0.6);\r\n}\r\n\r\n.status-dot.timeout {\r\n  background-color: #faad14;\r\n  box-shadow: 0 0 6px rgba(250, 173, 20, 0.6);\r\n}\r\n\r\n/* 自定义连线相关样式 */\r\n.connecting-mode {\r\n  cursor: crosshair !important;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.connecting-mode:hover {\r\n  box-shadow: 0 0 15px rgba(24, 144, 255, 0.5);\r\n}\r\n\r\n.connecting-from {\r\n  border: 2px solid #1890ff;\r\n  box-shadow: 0 0 10px rgba(24, 144, 255, 0.6);\r\n  animation: pulse 1.5s infinite;\r\n}\r\n\r\n@keyframes pulse {\r\n  0% {\r\n    box-shadow: 0 0 10px rgba(24, 144, 255, 0.6);\r\n  }\r\n  50% {\r\n    box-shadow: 0 0 20px rgba(24, 144, 255, 0.8);\r\n  }\r\n  100% {\r\n    box-shadow: 0 0 10px rgba(24, 144, 255, 0.6);\r\n  }\r\n}\r\n\r\n.connecting-indicator {\r\n  position: absolute;\r\n  top: -25px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  background: #1890ff;\r\n  color: white;\r\n  padding: 2px 8px;\r\n  border-radius: 4px;\r\n  font-size: 10px;\r\n  white-space: nowrap;\r\n  z-index: 1000;\r\n}\r\n\r\n.connecting-indicator::after {\r\n  content: '';\r\n  position: absolute;\r\n  top: 100%;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  border: 4px solid transparent;\r\n  border-top-color: #1890ff;\r\n}\r\n\r\n/* 连线背景样式 */\r\n.connection-background {\r\n  opacity: 0.3;\r\n}\r\n\r\n/* 主连线样式 */\r\n.custom-connection-line {\r\n  transition: all 0.3s ease;\r\n  filter: url(#glow);\r\n}\r\n\r\n.custom-connection-line:hover {\r\n  stroke-width: 4;\r\n  filter: url(#glow) brightness(1.5);\r\n}\r\n\r\n/* 科技风连线动画 */\r\n.tech-line {\r\n  animation: techPulse 2s ease-in-out infinite;\r\n}\r\n\r\n@keyframes techPulse {\r\n  0%, 100% {\r\n    opacity: 0.8;\r\n    stroke-width: 3;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n    stroke-width: 3.5;\r\n  }\r\n}\r\n\r\n/* 流动光效动画 */\r\n.flow-effect {\r\n  animation: flowAnimation 2s linear infinite;\r\n  opacity: 0.7;\r\n}\r\n\r\n@keyframes flowAnimation {\r\n  0% {\r\n    stroke-dashoffset: 0;\r\n  }\r\n  100% {\r\n    stroke-dashoffset: 30;\r\n  }\r\n}\r\n\r\n/* 临时连线样式 */\r\n.temp-connection-line {\r\n  pointer-events: none;\r\n}\r\n\r\n.temp-connection-bg {\r\n  opacity: 0.2;\r\n}\r\n\r\n.tech-temp-line {\r\n  animation: tempLineFlow 1s linear infinite;\r\n}\r\n\r\n@keyframes tempLineFlow {\r\n  0% {\r\n    stroke-dashoffset: 0;\r\n    opacity: 0.6;\r\n  }\r\n  100% {\r\n    stroke-dashoffset: 12;\r\n    opacity: 0.9;\r\n  }\r\n}\r\n\r\n.topology-controls .ant-tag {\r\n  margin: 0;\r\n  animation: blink 1s infinite;\r\n}\r\n\r\n/* 头部控制标签样式 */\r\n.ant-card-extra .ant-tag {\r\n  margin: 2px;\r\n  font-size: 12px;\r\n  border-radius: 6px;\r\n  transition: all 0.3s ease;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.ant-card-extra .ant-tag:hover {\r\n  transform: translateY(-1px);\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);\r\n}\r\n\r\n.ant-card-extra .connecting-tip {\r\n  animation: blink 1s infinite;\r\n}\r\n\r\n@keyframes blink {\r\n  0%, 50% {\r\n    opacity: 1;\r\n  }\r\n  51%, 100% {\r\n    opacity: 0.5;\r\n  }\r\n}\r\n\r\n.ip-nodes {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 12px;\r\n  justify-content: center;\r\n  max-width: 600px;\r\n}\r\n\r\n.ip-node {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 8px 12px;\r\n  background: #f6ffed;\r\n  border: 1px solid #b7eb8f;\r\n  border-radius: 6px;\r\n  font-size: 12px;\r\n  min-width: 80px;\r\n}\r\n\r\n.ip-node.offline {\r\n  background: #fff2f0;\r\n  border-color: #ffccc7;\r\n}\r\n\r\n.ip-node.timeout {\r\n  background: #fffbe6;\r\n  border-color: #ffe58f;\r\n}\r\n\r\n.more-nodes {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 8px 12px;\r\n  background: #fafafa;\r\n  border: 1px dashed #d9d9d9;\r\n  border-radius: 6px;\r\n  color: #666;\r\n  font-size: 12px;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .business-detail {\r\n    padding: 16px;\r\n  }\r\n  \r\n  .header-content {\r\n    flex-direction: column;\r\n    gap: 16px;\r\n    align-items: stretch;\r\n  }\r\n  \r\n  .header-left {\r\n    justify-content: center;\r\n  }\r\n  \r\n  .info-item {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n  }\r\n  \r\n  .label {\r\n    margin-bottom: 4px;\r\n  }\r\n  \r\n  .ip-nodes {\r\n    max-width: 100%;\r\n  }\r\n}\r\n\r\n/* 自定义连线功能样式 */\r\n.connecting-mode {\r\n  cursor: crosshair;\r\n}\r\n\r\n.connecting-mode .ip-topology-node:hover,\r\n.connecting-mode .business-center-node:hover {\r\n  box-shadow: 0 0 20px rgba(0, 102, 255, 0.6);\r\n  border-color: rgba(0, 102, 255, 0.8);\r\n}\r\n\r\n.connecting-from {\r\n  animation: pulse 1.5s infinite;\r\n  box-shadow: 0 0 20px rgba(24, 144, 255, 0.8) !important;\r\n}\r\n\r\n@keyframes pulse {\r\n  0% {\r\n    box-shadow: 0 0 20px rgba(24, 144, 255, 0.8);\r\n  }\r\n  50% {\r\n    box-shadow: 0 0 30px rgba(24, 144, 255, 1);\r\n  }\r\n  100% {\r\n    box-shadow: 0 0 20px rgba(24, 144, 255, 0.8);\r\n  }\r\n}\r\n\r\n.connecting-indicator {\r\n  position: absolute;\r\n  top: -25px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  background: #1890ff;\r\n  color: white;\r\n  padding: 2px 8px;\r\n  border-radius: 4px;\r\n  font-size: 10px;\r\n  white-space: nowrap;\r\n  z-index: 10;\r\n}\r\n\r\n.connecting-indicator::after {\r\n  content: '';\r\n  position: absolute;\r\n  top: 100%;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  border: 4px solid transparent;\r\n  border-top-color: #1890ff;\r\n}\r\n\r\n.custom-connection-line {\r\n  cursor: pointer;\r\n  transition: stroke-width 0.2s;\r\n}\r\n\r\n.custom-connection-line:hover {\r\n  stroke-width: 5;\r\n  stroke: #ff4d4f;\r\n}\r\n\r\n.temp-connection-line {\r\n  pointer-events: none;\r\n}\r\n\r\n\r\n\r\n@keyframes blink {\r\n  0%, 50% {\r\n    opacity: 1;\r\n  }\r\n  51%, 100% {\r\n    opacity: 0.5;\r\n  }\r\n}\r\n\r\n.business-center-node {\r\n  position: absolute;\r\n  width: 120px;\r\n  height: 80px;\r\n  background: #1890ff;\r\n  border-radius: 8px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: white;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n  border: 1px solid #1890ff;\r\n  z-index: 5;\r\n}\r\n\r\n.business-center-node:hover {\r\n  background: #40a9ff;\r\n  border-color: #40a9ff;\r\n}\r\n\r\n.business-center-node .node-icon {\r\n  font-size: 24px;\r\n  margin-bottom: 4px;\r\n}\r\n\r\n.business-center-node .node-info {\r\n  text-align: center;\r\n}\r\n\r\n.business-center-node .node-title {\r\n  font-size: 12px;\r\n  font-weight: 600;\r\n  margin-bottom: 2px;\r\n}\r\n\r\n.business-center-node .node-subtitle {\r\n  font-size: 10px;\r\n  opacity: 0.8;\r\n}\r\n.topology-content{\r\n  width: 100%;\r\n}\r\n\r\n/* 画布中的IP节点样式 */\r\n.canvas-ip-node {\r\n  position: absolute;\r\n  width: 120px;\r\n  height: 80px;\r\n  background: #f0f8ff;\r\n  border-radius: 6px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #1890ff;\r\n  font-size: 11px;\r\n  font-weight: 600;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n  border: 1px solid #d9d9d9;\r\n  transition: all 0.2s ease;\r\n  cursor: move;\r\n  user-select: none;\r\n  z-index: 5;\r\n}\r\n\r\n\r\n\r\n.canvas-ip-node:hover {\r\n  background: #e6f7ff;\r\n  border-color: #1890ff;\r\n}\r\n\r\n.canvas-ip-node.success {\r\n  background: #f6ffed;\r\n  border-color: #52c41a;\r\n  color: #389e0d;\r\n}\r\n\r\n.canvas-ip-node.failed {\r\n  background: #fff2f0;\r\n  border-color: #ff4d4f;\r\n  color: #cf1322;\r\n}\r\n\r\n.canvas-ip-node.timeout {\r\n  background: #fffbe6;\r\n  border-color: #faad14;\r\n  color: #d48806;\r\n}\r\n\r\n.canvas-ip-node.connecting-from {\r\n  background: #e6f7ff;\r\n  border-color: #1890ff;\r\n  color: #1890ff;\r\n  border-width: 2px;\r\n}\r\n\r\n.canvas-ip-node .node-icon {\r\n  font-size: 24px;\r\n  margin-bottom: 4px;\r\n  opacity: 0.8;\r\n}\r\n\r\n.canvas-ip-node .node-info {\r\n  text-align: center;\r\n  line-height: 1.2;\r\n}\r\n\r\n.canvas-ip-node .node-title {\r\n  font-weight: 600;\r\n  font-size: 12px;\r\n  margin-bottom: 2px;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  max-width: 100px;\r\n}\r\n\r\n.canvas-ip-node .node-subtitle {\r\n  font-size: 10px;\r\n  opacity: 0.7;\r\n  white-space: nowrap;\r\n}\r\n\r\n.canvas-ip-node .node-status {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 4px;\r\n  font-size: 9px;\r\n  margin-top: 4px;\r\n  padding: 2px 6px;\r\n  border-radius: 10px;\r\n  background: rgba(255, 255, 255, 0.2);\r\n}\r\n\r\n.canvas-ip-node .status-dot {\r\n  width: 6px;\r\n  height: 6px;\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n}\r\n\r\n.canvas-ip-node.success .status-dot {\r\n  background: #52c41a;\r\n}\r\n\r\n.canvas-ip-node.failed .status-dot {\r\n  background: #ff4d4f;\r\n}\r\n\r\n.canvas-ip-node.timeout .status-dot {\r\n  background: #faad14;\r\n}\r\n\r\n.canvas-ip-node .connecting-indicator {\r\n  position: absolute;\r\n  top: -8px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  background: #1890ff;\r\n  color: white;\r\n  padding: 2px 8px;\r\n  border-radius: 4px;\r\n  font-size: 10px;\r\n  white-space: nowrap;\r\n  z-index: 10;\r\n}\r\n\r\n.canvas-ip-node .connecting-indicator::after {\r\n  content: '';\r\n  position: absolute;\r\n  top: 100%;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  border: 4px solid transparent;\r\n  border-top-color: #1890ff;\r\n}\r\n\r\n/* 删除按钮样式 */\r\n.node-remove-btn {\r\n  position: absolute;\r\n  top: -8px;\r\n  right: -8px;\r\n  width: 20px;\r\n  height: 20px;\r\n  background: #ff4d4f;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: white;\r\n  font-size: 10px;\r\n  cursor: pointer;\r\n  opacity: 0;\r\n  transition: all 0.2s ease;\r\n  z-index: 10;\r\n}\r\n\r\n.canvas-ip-node:hover .node-remove-btn {\r\n  opacity: 1;\r\n}\r\n\r\n.node-remove-btn:hover {\r\n  background: #ff7875;\r\n  transform: scale(1.1);\r\n}\r\n\r\n/* 优化侧边栏样式 */\r\n.sidebar-header {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n\r\n.sidebar-title {\r\n  margin: 0;\r\n  color: #1890ff;\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n}\r\n\r\n.node-count {\r\n  color: #666;\r\n  font-size: 12px;\r\n  background: #f0f0f0;\r\n  padding: 2px 8px;\r\n  border-radius: 12px;\r\n}\r\n\r\n.sidebar-ip-node:hover {\r\n  transform: translateY(-1px);\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}