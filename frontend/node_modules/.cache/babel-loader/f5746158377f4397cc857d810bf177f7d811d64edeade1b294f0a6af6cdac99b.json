{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport { ref, reactive, computed, onMounted, onUnmounted, watch, onBeforeUnmount, nextTick, h, createVNode } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { message, Modal } from 'ant-design-vue';\nimport hardwareAssetApi from '@/api/hardwareAsset';\nimport { suppressResizeObserverError } from '@/utils/errorHandler';\nimport * as Vue from 'vue';\nimport * as antdvIcons from '@ant-design/icons-vue';\nimport HardwareAssetForm from '@/components/business/HardwareAssetForm.vue';\n\n// 导入拆分的组件\nimport HardwareAssetTable from '@/components/business/HardwareAssetTable.vue';\nimport MonitoringActions from '@/components/business/MonitoringActions.vue';\nimport TemplateDrawer from '@/components/business/TemplateDrawer.vue';\nimport { ExclamationCircleOutlined } from '@ant-design/icons-vue';\n\n// 路由实例\n\nexport default {\n  __name: 'HardwareAssetList',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n\n    // 搜索条件\n    const searchKeyword = ref('');\n    const assetStatus = ref([]);\n    const assetType = ref('');\n    const formDialogVisible = ref(false);\n\n    // 资产类型选项\n    const assetTypeOptions = ref([{\n      label: '服务器',\n      value: 'server'\n    }, {\n      label: '网络设备',\n      value: 'network'\n    }, {\n      label: '存储设备',\n      value: 'storage'\n    }, {\n      label: '安全设备',\n      value: 'security'\n    }]);\n\n    // 资产状态选项\n    const assetStatusOptions = ref([{\n      label: '在用',\n      value: 'active'\n    }, {\n      label: '维护中',\n      value: 'maintenance'\n    }, {\n      label: '已退役',\n      value: 'retired'\n    }, {\n      label: '预留',\n      value: 'reserved'\n    }]);\n\n    // 硬件资产数据状态 - 确保始终是数组\n    const assetData = ref([]);\n    const loading = ref(false);\n\n    // 批量操作相关状态\n    const selectedRowKeys = ref([]);\n    const batchDeleting = ref(false);\n    const batchMonitoringToggling = ref(false);\n\n    // 模板选择抽屉相关状态\n    const templateDrawerVisible = ref(false);\n    const zabbixTemplates = ref([]);\n    const selectedTemplateIds = ref([]);\n    const templateLoading = ref(false);\n    const templateSearchKeyword = ref('');\n    const monitoringCreating = ref(false);\n    const selectedCategory = ref(''); // 当前选中的分类\n    const expandedCategories = ref({}); // 展开的分类\n\n    // 历史记录相关状态\n    const historyModalVisible = ref(false);\n    const historyActiveTab = ref('spec');\n    const currentHistoryAsset = ref(null);\n    const specHistory = ref([]);\n    const warrantyHistory = ref([]);\n    const specHistoryLoading = ref(false);\n    const warrantyHistoryLoading = ref(false);\n\n    // 历史记录表格列配置\n    const specHistoryColumns = [{\n      title: '更新时间',\n      dataIndex: 'update_time',\n      key: 'update_time',\n      width: 180,\n      customRender: ({\n        text\n      }) => {\n        return text ? new Date(text).toLocaleString() : '-';\n      }\n    }, {\n      title: '更新方式',\n      dataIndex: 'update_method',\n      key: 'update_method',\n      width: 100,\n      customRender: ({\n        text\n      }) => {\n        return text === 'manual' ? '手动' : '自动';\n      }\n    }, {\n      title: '更新前规格参数',\n      dataIndex: 'old_specifications',\n      key: 'old_specifications',\n      minWidth: 200,\n      customRender: ({\n        text\n      }) => {\n        return text ? JSON.stringify(text, null, 2) : '-';\n      }\n    }, {\n      title: '更新后规格参数',\n      dataIndex: 'new_specifications',\n      key: 'new_specifications',\n      minWidth: 200,\n      customRender: ({\n        text\n      }) => {\n        return text ? JSON.stringify(text, null, 2) : '-';\n      }\n    }, {\n      title: '更新人',\n      dataIndex: 'updated_by',\n      key: 'updated_by',\n      width: 120\n    }, {\n      title: '备注',\n      dataIndex: 'remarks',\n      key: 'remarks',\n      width: 150\n    }];\n    const warrantyHistoryColumns = [{\n      title: '更新时间',\n      dataIndex: 'update_time',\n      key: 'update_time',\n      width: 180,\n      customRender: ({\n        text\n      }) => {\n        return text ? new Date(text).toLocaleString() : '-';\n      }\n    }, {\n      title: '更新前保修类型',\n      dataIndex: 'old_warranty_type',\n      key: 'old_warranty_type',\n      width: 120,\n      customRender: ({\n        text\n      }) => {\n        return text === 'original' ? '原厂保修' : '第三方保修';\n      }\n    }, {\n      title: '更新后保修类型',\n      dataIndex: 'new_warranty_type',\n      key: 'new_warranty_type',\n      width: 120,\n      customRender: ({\n        text\n      }) => {\n        return text === 'original' ? '原厂保修' : '第三方保修';\n      }\n    }, {\n      title: '更新前保修期',\n      key: 'old_warranty_period',\n      width: 200,\n      customRender: ({\n        record\n      }) => {\n        return `${record.old_warranty_start_date} ~ ${record.old_warranty_end_date}`;\n      }\n    }, {\n      title: '更新后保修期',\n      key: 'new_warranty_period',\n      width: 200,\n      customRender: ({\n        record\n      }) => {\n        return `${record.new_warranty_start_date} ~ ${record.new_warranty_end_date}`;\n      }\n    }, {\n      title: '更新人',\n      dataIndex: 'updated_by',\n      key: 'updated_by',\n      width: 120\n    }, {\n      title: '备注',\n      dataIndex: 'remarks',\n      key: 'remarks',\n      width: 150\n    }];\n\n    // 防御性检查，确保assetData始终是数组\n    const setAssetData = data => {\n      if (Array.isArray(data)) {\n        // 为每个硬件资产记录设置保护状态信息\n        const processedData = data.map(asset => {\n          // 确保保护状态字段存在\n          if (asset.is_protected === undefined) {\n            asset.is_protected = asset.is_auto_discovered || false;\n          }\n\n          // 设置保护原因\n          if (!asset.protection_reason && asset.is_auto_discovered) {\n            asset.protection_reason = '自动发现的硬件资产';\n          }\n\n          // 设置可编辑字段列表\n          if (asset.is_auto_discovered) {\n            asset.editable_fields = ['description', 'status'];\n          } else {\n            asset.editable_fields = 'all';\n          }\n          return asset;\n        });\n        assetData.value = processedData;\n      } else {\n        console.warn('尝试设置非数组数据到assetData:', data);\n        assetData.value = [];\n      }\n    };\n\n    // 统计计算属性 - 添加防御性检查\n    const activeCount = computed(() => {\n      if (!Array.isArray(assetData.value)) {\n        console.warn('assetData不是数组，返回0');\n        return 0;\n      }\n      return assetData.value.filter(asset => asset.asset_status === 'active').length;\n    });\n    const maintenanceCount = computed(() => {\n      if (!Array.isArray(assetData.value)) {\n        console.warn('assetData不是数组，返回0');\n        return 0;\n      }\n      return assetData.value.filter(asset => asset.asset_status === 'maintenance').length;\n    });\n    const retiredCount = computed(() => {\n      if (!Array.isArray(assetData.value)) {\n        console.warn('assetData不是数组，返回0');\n        return 0;\n      }\n      return assetData.value.filter(asset => asset.asset_status === 'retired').length;\n    });\n\n    // 统计对象\n    const statistics = computed(() => ({\n      total: assetData.value.length || 0,\n      active: activeCount.value,\n      maintenance: maintenanceCount.value,\n      retired: retiredCount.value\n    }));\n\n    // 计算属性：分离在用和报废设备\n    const inUseAssets = computed(() => {\n      return assetData.value.filter(asset => asset.asset_status === 'in_use');\n    });\n    const scrappedAssets = computed(() => {\n      return assetData.value.filter(asset => asset.asset_status === 'scrapped');\n    });\n\n    // 计算属性：统计数据\n    const totalCount = computed(() => assetData.value.length);\n    const inUseCount = computed(() => inUseAssets.value.length);\n    const scrappedCount = computed(() => scrappedAssets.value.length);\n\n    // 计算属性：按状态分离设备\n    const activeAssets = computed(() => {\n      return assetData.value.filter(asset => asset.asset_status === 'active' || asset.asset_status === 'in_use');\n    });\n\n    // 统计按钮过滤状态\n    const currentFilter = ref('active');\n\n    // 计算属性 - 保修相关\n    const needsWarrantyCheck = computed(() => {\n      const type = warrantyFormData.checkType;\n      return type === 'auto' || type === 'manual';\n    });\n\n    // 工具函数\n    const getStatusText = status => {\n      const textMap = {\n        'active': '在用',\n        'maintenance': '维护中',\n        'retired': '已退役',\n        'reserved': '预留'\n      };\n      return textMap[status] || status;\n    };\n    const getTypeText = type => {\n      const typeMap = {\n        'server': '服务器',\n        'network': '网络设备',\n        'storage': '存储设备',\n        'security': '安全设备'\n      };\n      return typeMap[type] || type;\n    };\n    const formatDate = date => {\n      if (!date) return null;\n      return new Date(date).toLocaleString('zh-CN');\n    };\n\n    // 弹窗状态\n    const detailModalVisible = ref(false);\n    const editModalVisible = ref(false);\n    const warrantyModalVisible = ref(false);\n    const taskDetailModalVisible = ref(false);\n    const taskResultModalVisible = ref(false);\n    const selectedAsset = ref(null);\n    const editingAsset = ref(null);\n    const selectedTask = ref(null);\n\n    // 保修查询相关\n    const warrantyTasks = ref([]);\n    const taskResults = ref([]);\n    const taskLoading = ref(false);\n    const resultLoading = ref(false);\n    const taskStatusFilter = ref('');\n    const taskDateRange = ref([]);\n    const taskNameFilter = ref('');\n    const taskPagination = reactive({\n      current: 1,\n      pageSize: 20,\n      total: 0,\n      showSizeChanger: true,\n      showQuickJumper: true,\n      showTotal: (total, range) => `第 ${range[0]}-${range[1]} 条，共 ${total} 条`\n    });\n\n    // 表单相关\n    const formRef = ref();\n    const warrantyFormRef = ref();\n    const formData = reactive({\n      assetTag: '',\n      assetName: '',\n      status: 'active',\n      type: 'server',\n      brand: '',\n      model: '',\n      serialNumber: '',\n      location: '',\n      description: ''\n    });\n\n    // 保修配置数据\n    const warrantyFormData = reactive({\n      checkType: 'auto',\n      // 默认自动检查\n      warrantyPeriod: 36,\n      // 保修期（月）\n      purchaseDate: null,\n      warrantyStartDate: null,\n      warrantyEndDate: null,\n      supplierInfo: {\n        name: '',\n        contact: '',\n        phone: '',\n        email: ''\n      }\n    });\n\n    // 表单验证规则\n    const rules = {\n      assetTag: [{\n        required: true,\n        message: '请输入资产标签'\n      }, {\n        pattern: /^[A-Za-z0-9-_]+$/,\n        message: '资产标签只能包含字母、数字、横线和下划线'\n      }],\n      assetName: [{\n        required: true,\n        message: '请输入资产名称'\n      }],\n      status: [{\n        required: true,\n        message: '请选择资产状态'\n      }],\n      type: [{\n        required: true,\n        message: '请选择资产类型'\n      }]\n    };\n\n    // 保修配置验证规则\n    const warrantyRules = {\n      checkType: [{\n        required: true,\n        message: '请选择检查类型'\n      }],\n      warrantyPeriod: [{\n        type: 'number',\n        min: 1,\n        max: 120,\n        message: '保修期必须在1-120个月之间'\n      }],\n      purchaseDate: [{\n        required: true,\n        message: '请选择采购日期'\n      }]\n    };\n\n    // 分页配置\n    const pagination = reactive({\n      current: 1,\n      pageSize: 20,\n      total: 0,\n      pageSizeOptions: ['10', '20', '50', '100'],\n      showSizeChanger: true,\n      showQuickJumper: true,\n      showTotal: total => `共 ${total} 条记录`\n    });\n\n    // 在用设备分页配置\n    const inUsePagination = reactive({\n      current: 1,\n      pageSize: 20,\n      total: 0,\n      showSizeChanger: true,\n      showQuickJumper: true,\n      showTotal: (total, range) => `第 ${range[0]}-${range[1]} 条/共 ${total} 条`\n    });\n\n    // 报废设备分页配置\n    const scrappedPagination = reactive({\n      current: 1,\n      pageSize: 20,\n      total: 0,\n      showSizeChanger: true,\n      showQuickJumper: true,\n      showTotal: (total, range) => `第 ${range[0]}-${range[1]} 条/共 ${total} 条`\n    });\n\n    // 正常设备分页配置\n    const activePagination = reactive({\n      current: 1,\n      pageSize: 20,\n      total: 0,\n      showSizeChanger: true,\n      showQuickJumper: true,\n      showTotal: (total, range) => `第 ${range[0]}-${range[1]} 条/共 ${total} 条`\n    });\n\n    // 加载硬件资产列表数据\n    const loadAssetList = async () => {\n      loading.value = true;\n      try {\n        const params = {\n          page: pagination.current,\n          page_size: pagination.pageSize\n        };\n\n        // 添加搜索条件\n        if (searchKeyword.value && searchKeyword.value.trim()) {\n          params.search = searchKeyword.value.trim();\n        }\n        if (assetStatus.value) {\n          params.status = assetStatus.value;\n        }\n        if (assetType.value) {\n          params.type = assetType.value;\n        }\n        console.log('正在获取硬件资产列表，参数:', params);\n        console.log('当前分页状态:', {\n          current: pagination.current,\n          pageSize: pagination.pageSize,\n          total: pagination.total\n        });\n        const response = await hardwareAssetApi.getList(params);\n        console.log('API响应:', response);\n        if (response && response.data) {\n          // 检查是否是统一响应格式（包含code字段）\n          if (response.data.code !== undefined) {\n            // 统一响应格式\n            if (response.data.code === 200) {\n              const data = response.data.data;\n              // 确保获取的数据是数组\n              let resultData = [];\n              if (data && data.results && Array.isArray(data.results)) {\n                resultData = data.results;\n              } else if (Array.isArray(data)) {\n                resultData = data;\n              } else {\n                console.warn('API返回的数据不是数组格式:', data);\n                resultData = [];\n              }\n              setAssetData(resultData);\n              pagination.total = data.count || data.total || resultData.length;\n              // 更新各表格的分页总数\n              inUsePagination.total = inUseCount.value;\n              scrappedPagination.total = scrappedCount.value;\n              console.log('成功获取硬件资产列表（统一格式）:', assetData.value);\n              message.success('硬件资产列表数据已更新', 1);\n            } else {\n              console.error('API返回错误代码:', response.data.code, '错误信息:', response.data.message);\n              message.error(`获取硬件资产列表失败: ${response.data.message}`);\n              setAssetData([]);\n              pagination.total = 0;\n            }\n          } else {\n            // DRF标准响应格式（直接包含count、results字段）\n            console.log('检测到DRF标准响应格式');\n            // 确保获取的数据是数组\n            let resultData = [];\n            if (response.data.results && Array.isArray(response.data.results)) {\n              resultData = response.data.results;\n            } else if (Array.isArray(response.data)) {\n              resultData = response.data;\n            } else {\n              console.warn('API返回的数据不是数组格式:', response.data);\n              resultData = [];\n            }\n            setAssetData(resultData);\n            pagination.total = response.data.count || response.data.total || resultData.length;\n            // 更新各表格的分页总数\n            inUsePagination.total = inUseCount.value;\n            scrappedPagination.total = scrappedCount.value;\n            console.log('成功获取硬件资产列表（DRF格式）:', assetData.value);\n            message.success('硬件资产列表数据已更新', 1);\n          }\n        } else {\n          console.error('无效的API响应:', response);\n          message.error('获取硬件资产列表失败: 无效的响应数据');\n          setAssetData([]);\n          pagination.total = 0;\n        }\n      } catch (error) {\n        console.error('加载硬件资产列表失败:', error);\n        console.error('错误详情:', {\n          message: error.message,\n          response: error.response,\n          request: error.request\n        });\n        let errorMessage = '获取硬件资产列表失败';\n        if (error.response) {\n          // 服务器响应错误\n          errorMessage += `: HTTP ${error.response.status}`;\n          if (error.response.data && error.response.data.message) {\n            errorMessage += ` - ${error.response.data.message}`;\n          }\n        } else if (error.request) {\n          // 请求发送但无响应\n          errorMessage += ': 网络连接失败或服务器无响应';\n        } else {\n          // 请求设置错误\n          errorMessage += `: ${error.message}`;\n        }\n        message.error(errorMessage);\n\n        // 如果API调用失败，显示空数据\n        setAssetData([]);\n        pagination.total = 0;\n      } finally {\n        loading.value = false;\n      }\n    };\n    const columns = [{\n      title: '资产标签',\n      dataIndex: 'asset_tag',\n      key: 'assetTag',\n      width: 120,\n      fixed: 'left'\n    }, {\n      title: '资产名称',\n      dataIndex: 'asset_name',\n      key: 'assetName',\n      width: 150\n    }, {\n      title: '状态',\n      dataIndex: 'status',\n      key: 'status',\n      width: 80\n    }, {\n      title: '类型',\n      dataIndex: 'type',\n      key: 'type',\n      width: 100\n    }, {\n      title: '品牌',\n      dataIndex: 'brand',\n      key: 'brand',\n      width: 100\n    }, {\n      title: '型号',\n      dataIndex: 'model',\n      key: 'model',\n      width: 120\n    }, {\n      title: '序列号',\n      dataIndex: 'serial_number',\n      key: 'serialNumber',\n      width: 150\n    }, {\n      title: '位置',\n      dataIndex: 'location',\n      key: 'location',\n      width: 120\n    }, {\n      title: '保修状态',\n      dataIndex: 'warranty_status',\n      key: 'warrantyStatus',\n      width: 100\n    }, {\n      title: '最后更新',\n      dataIndex: 'updated_at',\n      key: 'updatedAt',\n      width: 160\n    }, {\n      title: '操作',\n      key: 'operation',\n      fixed: 'right',\n      width: 280\n    }];\n\n    // 保修结果表格列定义\n    const resultColumns = [{\n      title: '资产标签',\n      dataIndex: 'asset_tag',\n      key: 'asset_tag',\n      width: 120\n    }, {\n      title: '资产名称',\n      dataIndex: 'asset_name',\n      key: 'asset_name',\n      ellipsis: true\n    }, {\n      title: '保修状态',\n      dataIndex: 'warranty_status',\n      key: 'warranty_status'\n    }, {\n      title: '保修到期日',\n      dataIndex: 'warranty_end_date',\n      key: 'warranty_end_date'\n    }, {\n      title: '检查时间',\n      dataIndex: 'created_at',\n      key: 'created_at'\n    }];\n\n    // 事件处理函数\n    // 批量保修检查状态管理\n    const batchWarrantyState = reactive({\n      isVisible: false,\n      phase: 'confirm',\n      // confirm, checking, result\n      stats: {\n        total: 0,\n        currentValid: 0,\n        currentExpired: 0,\n        testResult: null\n      },\n      checking: {\n        progress: 0,\n        currentAsset: '',\n        startTime: null\n      }\n    });\n    const handleBatchWarrantyCheck = async () => {\n      try {\n        // 获取当前页面的所有资产ID\n        const allAssetIds = assetData.value.map(asset => asset.id).filter(id => id);\n        if (allAssetIds.length === 0) {\n          message.warning('没有可以检查保修的资产记录');\n          return;\n        }\n\n        // 初始化状态\n        batchWarrantyState.stats.total = allAssetIds.length;\n        batchWarrantyState.stats.currentValid = assetData.value.filter(asset => asset.warranty_status === 'valid').length;\n        batchWarrantyState.stats.currentExpired = allAssetIds.length - batchWarrantyState.stats.currentValid;\n        batchWarrantyState.phase = 'confirm';\n        batchWarrantyState.isVisible = true;\n      } catch (error) {\n        console.error('初始化批量保修检查失败:', error);\n        message.error('初始化批量保修检查失败');\n      }\n    };\n\n    // 开始保修检查\n    const startBatchWarrantyCheck = async () => {\n      try {\n        const allAssetIds = assetData.value.map(asset => asset.id).filter(id => id);\n\n        // 切换到检查阶段\n        batchWarrantyState.phase = 'checking';\n        batchWarrantyState.checking.startTime = new Date();\n        batchWarrantyState.checking.progress = 0;\n        loading.value = true;\n\n        // 调用批量保修检查API\n        const response = await hardwareAssetApi.batchCheckWarranty(allAssetIds);\n        if (response.data && response.data.code === 200) {\n          const batchData = response.data.data;\n          const summary = batchData.summary;\n\n          // 更新本地数据\n          const resultsMap = new Map();\n          batchData.results.forEach(result => {\n            resultsMap.set(result.asset_id, result);\n          });\n\n          // 更新assetData中的记录\n          assetData.value.forEach(asset => {\n            const result = resultsMap.get(asset.id);\n            if (result) {\n              asset.warranty_status = result.status;\n              asset.warranty_end_date = result.warranty_end_date;\n              asset.updated_at = new Date().toISOString();\n            }\n          });\n\n          // 设置检查结果并切换到结果阶段\n          batchWarrantyState.stats.testResult = summary;\n          batchWarrantyState.phase = 'result';\n        } else {\n          message.error(`批量保修检查失败: ${response.data?.message || '未知错误'}`);\n          batchWarrantyState.isVisible = false;\n        }\n      } catch (error) {\n        console.error('批量保修检查失败:', error);\n        let errorMessage = '批量保修检查失败';\n        if (error.response && error.response.data) {\n          errorMessage += `: ${error.response.data.message || error.response.data.error || '网络错误'}`;\n        } else if (error.message) {\n          errorMessage += `: ${error.message}`;\n        }\n        message.error(errorMessage);\n        batchWarrantyState.isVisible = false;\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 关闭批量保修检查弹窗\n    const closeBatchWarrantyModal = () => {\n      batchWarrantyState.isVisible = false;\n      batchWarrantyState.phase = 'confirm';\n      batchWarrantyState.stats.testResult = null;\n      batchWarrantyState.checking.progress = 0;\n    };\n\n    // 行选择管理\n    const onSelectChange = newSelectedRowKeys => {\n      console.log('选中的行 keys:', newSelectedRowKeys);\n      selectedRowKeys.value = newSelectedRowKeys;\n    };\n    const onSelectAll = (selected, selectedRows, changeRows) => {\n      console.log('全选/反选:', {\n        selected,\n        selectedRows: selectedRows.length,\n        changeRows: changeRows.length\n      });\n    };\n    const clearSelection = () => {\n      selectedRowKeys.value = [];\n    };\n\n    // 批量删除\n    const handleBatchDelete = async () => {\n      if (selectedRowKeys.value.length === 0) {\n        message.warning('请选择要删除的硬件资产');\n        return;\n      }\n      try {\n        Modal.confirm({\n          title: '批量删除确认',\n          content: `您将删除 ${selectedRowKeys.value.length} 个硬件资产，此操作不可恢复！`,\n          okText: '确认删除',\n          okType: 'danger',\n          cancelText: '取消',\n          onOk: async () => {\n            batchDeleting.value = true;\n            try {\n              const response = await hardwareAssetApi.batchDeleteAssets(selectedRowKeys.value);\n              if (response.data && response.data.code === 200) {\n                const result = response.data.data;\n                message.success(`批量删除成功！删除: ${result.deleted_count} 个，失败: ${result.failed_count} 个`, 1);\n\n                // 清空选中状态\n                clearSelection();\n\n                // 刷新列表\n                await loadAssetList();\n              } else {\n                message.error(`批量删除失败: ${response.data?.message || '未知错误'}`);\n              }\n            } catch (error) {\n              console.error('批量删除失败:', error);\n              message.error(`批量删除失败: ${error.message}`);\n            } finally {\n              batchDeleting.value = false;\n            }\n          }\n        });\n      } catch (error) {\n        console.error('批量删除操作失败:', error);\n        message.error('批量删除操作失败');\n      }\n    };\n\n    // 批量切换监控状态\n    const handleBatchToggleMonitoring = async enableMonitoring => {\n      if (selectedRowKeys.value.length === 0) {\n        message.warning('请选择要操作的硬件资产');\n        return;\n      }\n      const actionText = enableMonitoring ? '启用监控' : '禁用监控';\n      try {\n        Modal.confirm({\n          title: `批量${actionText}`,\n          content: `您将对 ${selectedRowKeys.value.length} 个硬件资产${actionText}，是否继续？`,\n          okText: `确认${actionText}`,\n          cancelText: '取消',\n          onOk: async () => {\n            batchMonitoringToggling.value = true;\n            try {\n              const response = await hardwareAssetApi.batchToggleMonitoring(selectedRowKeys.value, enableMonitoring);\n              if (response.data && response.data.code === 200) {\n                const result = response.data.data;\n                message.success(`批量${actionText}成功！成功: ${result.success_count} 个，失败: ${result.failed_count} 个`, 1);\n\n                // 更新本地数据\n                assetData.value.forEach(asset => {\n                  if (selectedRowKeys.value.includes(asset.id)) {\n                    asset.monitoring_enabled = enableMonitoring;\n                  }\n                });\n\n                // 清空选中状态\n                clearSelection();\n              } else {\n                message.error(`批量${actionText}失败: ${response.data?.message || '未知错误'}`);\n              }\n            } catch (error) {\n              console.error(`批量${actionText}失败:`, error);\n              message.error(`批量${actionText}失败: ${error.message}`);\n            } finally {\n              batchMonitoringToggling.value = false;\n            }\n          }\n        });\n      } catch (error) {\n        console.error(`批量${actionText}操作失败:`, error);\n        message.error(`批量${actionText}操作失败`);\n      }\n    };\n\n    // 单个监控状态切换\n    const handleToggleMonitoring = async (record, enableMonitoring) => {\n      if (enableMonitoring) {\n        // 启用监控时显示模板选择抽屉\n        selectedAsset.value = record;\n        await loadZabbixTemplates(record.id);\n        templateDrawerVisible.value = true;\n      } else {\n        // 直接禁用监控\n        await toggleMonitoringStatus(record, false);\n      }\n    };\n\n    // 切换监控状态的实际方法\n    const toggleMonitoringStatus = async (record, enableMonitoring) => {\n      const actionText = enableMonitoring ? '启用监控' : '禁用监控';\n\n      // 设置单个记录的加载状态\n      record.monitoringToggling = true;\n      try {\n        const response = await hardwareAssetApi.toggleMonitoring(record.id, enableMonitoring);\n        if (response.data && response.data.code === 200) {\n          // 更新本地数据\n          record.monitoring_enabled = enableMonitoring;\n          message.success(`${record.asset_name || record.asset_tag} ${actionText}成功`, 1);\n        } else {\n          message.error(`${actionText}失败: ${response.data?.message || '未知错误'}`);\n        }\n      } catch (error) {\n        console.error(`${actionText}失败:`, error);\n        message.error(`${actionText}失败: ${error.message}`);\n      } finally {\n        record.monitoringToggling = false;\n      }\n    };\n\n    // 加载Zabbix模板列表\n    const loadZabbixTemplates = async assetId => {\n      templateLoading.value = true;\n      try {\n        const response = await hardwareAssetApi.getZabbixTemplates(assetId, templateSearchKeyword.value);\n        if (response.data && response.data.code === 200) {\n          zabbixTemplates.value = response.data.data.templates || [];\n\n          // 初始化展开状态，默认展开所有分类\n          nextTick(() => {\n            try {\n              const categories = Object.keys(groupedTemplates.value || {});\n              categories.forEach(category => {\n                const categoryStr = String(category);\n                expandedCategories.value[categoryStr] = true;\n              });\n            } catch (error) {\n              console.warn('初始化展开状态错误:', error);\n            }\n          });\n          console.log('成功加载模板列表:', zabbixTemplates.value.length, '个模板');\n        } else {\n          message.error(`加载模板列表失败: ${response.data?.message || '未知错误'}`);\n          zabbixTemplates.value = [];\n        }\n      } catch (error) {\n        console.error('加载模板列表失败:', error);\n        message.error(`加载模板列表失败: ${error.message}`);\n        zabbixTemplates.value = [];\n      } finally {\n        templateLoading.value = false;\n      }\n    };\n\n    // 创建监控主机\n    const handleCreateMonitoring = async () => {\n      if (!selectedAsset.value) {\n        message.error('请先选择硬件资产');\n        return;\n      }\n      if (selectedTemplateIds.value.length === 0) {\n        message.error('请选择至少一个监控模板');\n        return;\n      }\n      monitoringCreating.value = true;\n      try {\n        const monitoringData = {\n          template_ids: selectedTemplateIds.value,\n          host_name: selectedAsset.value.asset_name || selectedAsset.value.asset_tag,\n          group_ids: []\n        };\n        const response = await hardwareAssetApi.createMonitoring(selectedAsset.value.id, monitoringData);\n        if (response.data && response.data.code === 200) {\n          const result = response.data.data;\n          message.success({\n            content: `监控主机创建成功！\\n主机名: ${result.host_name}\\n资产: ${result.asset_tag}\\n模板数量: ${result.template_count}`,\n            duration: 5\n          });\n\n          // 更新本地资产记录的监控状态\n          selectedAsset.value.monitoring_enabled = true;\n\n          // 关闭抽屉\n          templateDrawerVisible.value = false;\n\n          // 清空选中的模板\n          selectedTemplateIds.value = [];\n        } else {\n          message.error(`创建监控主机失败: ${response.data?.message || '未知错误'}`);\n        }\n      } catch (error) {\n        console.error('创建监控主机失败:', error);\n        message.error(`创建监控主机失败: ${error.message}`);\n      } finally {\n        monitoringCreating.value = false;\n      }\n    };\n\n    // 关闭模板抽屉\n    const handleCloseTemplateDrawer = () => {\n      templateDrawerVisible.value = false;\n      selectedTemplateIds.value = [];\n      templateSearchKeyword.value = '';\n      selectedCategory.value = '';\n      expandedCategories.value = {};\n      selectedAsset.value = null;\n    };\n\n    // 按分类组织模板\n    const groupedTemplates = computed(() => {\n      const groups = {};\n      try {\n        if (!Array.isArray(zabbixTemplates.value)) {\n          console.warn('zabbixTemplates不是数组:', zabbixTemplates.value);\n          return groups;\n        }\n        zabbixTemplates.value.forEach(template => {\n          if (!template || typeof template !== 'object') {\n            return;\n          }\n          const category = template.category || '📝 其他';\n          if (!groups[category]) {\n            groups[category] = [];\n          }\n          groups[category].push(template);\n        });\n\n        // 对每个分类的模板按名称排序\n        Object.keys(groups).forEach(category => {\n          try {\n            groups[category].sort((a, b) => {\n              const nameA = a.name || '';\n              const nameB = b.name || '';\n              return nameA.localeCompare(nameB);\n            });\n          } catch (sortError) {\n            console.warn(`排序分类${category}时出错:`, sortError);\n          }\n        });\n      } catch (error) {\n        console.error('groupedTemplates计算出错:', error);\n      }\n      return groups;\n    });\n    const handleSearch = async () => {\n      pagination.current = 1;\n      await loadAssetList();\n    };\n    const handleReset = async () => {\n      searchKeyword.value = '';\n      assetStatus.value = [];\n      assetType.value = '';\n      pagination.current = 1;\n      await loadAssetList();\n    };\n    const handleSearchInput = value => {\n      searchKeyword.value = value;\n    };\n    const handleStatusChange = value => {\n      assetStatus.value = value;\n    };\n    const handleTypeChange = value => {\n      assetType.value = value;\n    };\n\n    // 处理统计按钮点击事件\n    const handleStatsFilter = filterType => {\n      currentFilter.value = filterType;\n      console.log('统计按钮点击:', filterType);\n\n      // 根据点击的统计按钮类型进行相应的过滤或操作\n      switch (filterType) {\n        case 'total':\n          // 显示所有设备\n          assetStatus.value = [];\n          break;\n        case 'active':\n          // 显示在用设备\n          assetStatus.value = ['active'];\n          break;\n        case 'available':\n          // 显示可用设备（这里可以根据实际业务逻辑调整）\n          assetStatus.value = ['reserved'];\n          break;\n        case 'scrapped':\n          // 显示报废设备\n          assetStatus.value = ['scrapped'];\n          break;\n        case 'warranty':\n          // 显示保修中的设备（这里可以根据实际业务逻辑调整）\n          // 可以添加特定的过滤逻辑\n          break;\n        default:\n          break;\n      }\n\n      // 更新当前过滤器状态\n      currentFilter.value = filterType;\n\n      // 重新加载数据\n      pagination.current = 1;\n      loadAssetList();\n    };\n\n    // 查看历史记录\n    const handleViewHistory = record => {\n      currentHistoryAsset.value = record;\n      historyModalVisible.value = true;\n      historyActiveTab.value = 'spec';\n      // 自动加载规格参数历史\n      loadSpecHistory();\n    };\n\n    // 加载规格参数更新历史\n    const loadSpecHistory = async () => {\n      if (!currentHistoryAsset.value) return;\n      specHistoryLoading.value = true;\n      try {\n        const response = await hardwareAssetApi.getSpecHistory(currentHistoryAsset.value.id);\n        if (response.data && response.data.code === 200) {\n          specHistory.value = response.data.data || [];\n        } else {\n          message.error('加载规格参数历史失败');\n          specHistory.value = [];\n        }\n      } catch (error) {\n        console.error('加载规格参数历史失败:', error);\n        message.error('加载规格参数历史失败');\n        specHistory.value = [];\n      } finally {\n        specHistoryLoading.value = false;\n      }\n    };\n\n    // 加载保修更新历史\n    const loadWarrantyHistory = async () => {\n      if (!currentHistoryAsset.value) return;\n      warrantyHistoryLoading.value = true;\n      try {\n        const response = await hardwareAssetApi.getWarrantyHistory(currentHistoryAsset.value.id);\n        if (response.data && response.data.code === 200) {\n          warrantyHistory.value = response.data.data || [];\n        } else {\n          message.error('加载保修历史失败');\n          warrantyHistory.value = [];\n        }\n      } catch (error) {\n        console.error('加载保修历史失败:', error);\n        message.error('加载保修历史失败');\n        warrantyHistory.value = [];\n      } finally {\n        warrantyHistoryLoading.value = false;\n      }\n    };\n\n    // 历史记录标签页切换\n    const handleHistoryTabChange = activeKey => {\n      historyActiveTab.value = activeKey;\n      if (activeKey === 'warranty' && warrantyHistory.value.length === 0) {\n        loadWarrantyHistory();\n      }\n    };\n\n    // 关闭历史记录弹窗\n    const handleHistoryModalClose = () => {\n      historyModalVisible.value = false;\n      currentHistoryAsset.value = null;\n      specHistory.value = [];\n      warrantyHistory.value = [];\n      historyActiveTab.value = 'spec';\n    };\n    const handleTableChange = async (paginationInfo, filters, sorter) => {\n      console.log('handleTableChange 被调用:', {\n        paginationInfo,\n        当前分页状态: {\n          current: pagination.current,\n          pageSize: pagination.pageSize\n        }\n      });\n      pagination.current = paginationInfo.current;\n      pagination.pageSize = paginationInfo.pageSize;\n      console.log('更新后的分页状态:', {\n        current: pagination.current,\n        pageSize: pagination.pageSize\n      });\n\n      // 更新 URL 参数\n      const currentUrl = new URL(window.location);\n      currentUrl.searchParams.set('page', pagination.current.toString());\n      currentUrl.searchParams.set('page_size', pagination.pageSize.toString());\n      window.history.replaceState({}, '', currentUrl.toString());\n      console.log('已更新 URL:', currentUrl.toString());\n      await loadAssetList();\n    };\n\n    // 在用设备表格变化处理\n    const handleActiveTableChange = async (paginationInfo, filters, sorter) => {\n      activePagination.current = paginationInfo.current;\n      activePagination.pageSize = paginationInfo.pageSize;\n      // 更新查询参数\n      pagination.current = paginationInfo.current;\n      pagination.pageSize = paginationInfo.pageSize;\n      await loadAssetList();\n    };\n    const handleView = record => {\n      selectedAsset.value = record;\n      detailModalVisible.value = true;\n    };\n    const handleEdit = record => {\n      // 检查资产是否受保护\n      if (record.is_protected || record.is_auto_discovered) {\n        message.warning({\n          content: `不能编辑此硬件资产：${record.asset_name || record.asset_tag}\\n原因：${record.protection_reason || '自动发现的硬件资产不允许编辑'}\\n可编辑字段：${Array.isArray(record.editable_fields) ? record.editable_fields.join(', ') : '备注、状态'}`,\n          duration: 5\n        });\n        return;\n      }\n      editingAsset.value = record;\n      Object.assign(formData, record);\n      editModalVisible.value = true;\n    };\n    const handleDelete = async record => {\n      try {\n        Modal.confirm({\n          title: '确认删除硬件资产',\n          content: `确定要删除硬件资产 \"${record.asset_name || record.asset_tag}\" 吗？\\n\\n警告：此操作将删除资产记录及所有相关数据（包括保修记录、监控数据等），该操作不可恢复！`,\n          okText: '确认删除',\n          okType: 'danger',\n          cancelText: '取消',\n          onOk: async () => {\n            const deleteMessage = message.loading('正在删除硬件资产及相关数据...', 0);\n            try {\n              const response = await hardwareAssetApi.deleteAsset(record.id);\n              deleteMessage();\n              if (response.data && response.data.code === 200) {\n                const cleanupData = response.data.data;\n                let successMessage = `硬件资产 \"${cleanupData.asset_name || cleanupData.asset_tag}\" 已成功删除`;\n                const cleanupDetails = [];\n                if (cleanupData.warranty_records_deleted > 0) {\n                  cleanupDetails.push(`保修记录: ${cleanupData.warranty_records_deleted}条`);\n                }\n                if (cleanupData.monitoring_cleanup && cleanupData.monitoring_cleanup.success) {\n                  cleanupDetails.push('监控数据: 已清理');\n                }\n                if (cleanupDetails.length > 0) {\n                  successMessage += `\\n同时清理了：${cleanupDetails.join('、')}`;\n                }\n                message.success({\n                  content: successMessage,\n                  duration: 6\n                });\n\n                // 直接从列表中移除已删除的资产\n                assetData.value = assetData.value.filter(asset => asset.id !== record.id);\n                pagination.total = assetData.value.length;\n              } else {\n                message.error('删除硬件资产失败');\n              }\n            } catch (deleteError) {\n              deleteMessage();\n              throw deleteError;\n            }\n          }\n        });\n      } catch (error) {\n        if (error.message !== 'User cancelled') {\n          console.error('删除硬件资产失败:', error);\n          message.error(`删除硬件资产失败: ${error.response?.data?.message || error.message}`);\n        }\n      }\n    };\n    const handleCheckWarranty = async record => {\n      record.warrantyChecking = true;\n      try {\n        const response = await hardwareAssetApi.checkWarranty(record.id);\n        if (response.data && response.data.code === 200) {\n          const warrantyData = response.data.data;\n          // 更新记录的保修状态\n          record.warranty_status = warrantyData.status;\n          record.warranty_end_date = warrantyData.warranty_end_date;\n          record.updated_at = new Date().toISOString();\n          const statusText = warrantyData.is_valid ? '有效' : '已过期';\n          const endDateText = warrantyData.warranty_end_date ? ` (到期日: ${warrantyData.warranty_end_date})` : '';\n          message.success(`保修检查 ${record.asset_name || record.asset_tag} 完成: ${statusText}${endDateText}`, 1);\n        } else {\n          message.error(`保修检查失败: ${response.data?.message || '未知错误'}`);\n        }\n      } catch (error) {\n        console.error('保修检查失败:', error);\n        let errorMessage = '保修检查失败';\n        if (error.response && error.response.data) {\n          errorMessage += `: ${error.response.data.message || error.response.data.error || '网络错误'}`;\n        } else if (error.message) {\n          errorMessage += `: ${error.message}`;\n        }\n        message.error(errorMessage);\n      } finally {\n        record.warrantyChecking = false;\n      }\n    };\n    const handleExport = () => {\n      message.info('导出功能开发中...');\n    };\n    const handleImport = () => {\n      message.info('导入功能开发中...');\n    };\n\n    // 处理新增设备\n    const handleAdd = () => {\n      formDialogVisible.value = true;\n    };\n\n    // 处理表单提交\n    const handleSubmit = async formData => {\n      try {\n        const response = await hardwareAssetApi.createAsset(formData);\n        if (response.data && response.data.code === 200) {\n          message.success('硬件资产创建成功');\n          formDialogVisible.value = false;\n          // 刷新列表\n          await loadAssetList();\n        } else {\n          message.error(`创建失败: ${response.data?.message || '未知错误'}`);\n        }\n      } catch (error) {\n        console.error('创建硬件资产失败:', error);\n        message.error(`创建失败: ${error.message}`);\n      }\n    };\n    const handleWarrantyCancel = () => {\n      warrantyModalVisible.value = false;\n    };\n    const handleWarrantyConfirm = () => {\n      message.info('保修配置功能开发中...');\n      warrantyModalVisible.value = false;\n    };\n\n    // 生命周期钩子\n    onMounted(async () => {\n      try {\n        // 抑制ResizeObserver错误\n        suppressResizeObserverError();\n\n        // 从URL参数恢复分页状态\n        const urlParams = new URLSearchParams(window.location.search);\n        const page = urlParams.get('page');\n        const pageSize = urlParams.get('page_size');\n        if (page && !isNaN(parseInt(page))) {\n          pagination.current = parseInt(page);\n        }\n        if (pageSize && !isNaN(parseInt(pageSize))) {\n          pagination.pageSize = parseInt(pageSize);\n        }\n        console.log('从URL恢复分页状态:', {\n          current: pagination.current,\n          pageSize: pagination.pageSize\n        });\n\n        // 加载硬件资产列表\n        await loadAssetList();\n      } catch (error) {\n        console.error('初始化硬件资产列表失败:', error);\n        message.error('初始化硬件资产列表失败');\n      }\n    });\n\n    // 清理函数\n    onBeforeUnmount(() => {\n      // 清理定时器或其他资源\n    });\n    const __returned__ = {\n      router,\n      searchKeyword,\n      assetStatus,\n      assetType,\n      formDialogVisible,\n      assetTypeOptions,\n      assetStatusOptions,\n      assetData,\n      loading,\n      selectedRowKeys,\n      batchDeleting,\n      batchMonitoringToggling,\n      templateDrawerVisible,\n      zabbixTemplates,\n      selectedTemplateIds,\n      templateLoading,\n      templateSearchKeyword,\n      monitoringCreating,\n      selectedCategory,\n      expandedCategories,\n      historyModalVisible,\n      historyActiveTab,\n      currentHistoryAsset,\n      specHistory,\n      warrantyHistory,\n      specHistoryLoading,\n      warrantyHistoryLoading,\n      specHistoryColumns,\n      warrantyHistoryColumns,\n      setAssetData,\n      activeCount,\n      maintenanceCount,\n      retiredCount,\n      statistics,\n      inUseAssets,\n      scrappedAssets,\n      totalCount,\n      inUseCount,\n      scrappedCount,\n      activeAssets,\n      currentFilter,\n      needsWarrantyCheck,\n      getStatusText,\n      getTypeText,\n      formatDate,\n      detailModalVisible,\n      editModalVisible,\n      warrantyModalVisible,\n      taskDetailModalVisible,\n      taskResultModalVisible,\n      selectedAsset,\n      editingAsset,\n      selectedTask,\n      warrantyTasks,\n      taskResults,\n      taskLoading,\n      resultLoading,\n      taskStatusFilter,\n      taskDateRange,\n      taskNameFilter,\n      taskPagination,\n      formRef,\n      warrantyFormRef,\n      formData,\n      warrantyFormData,\n      rules,\n      warrantyRules,\n      pagination,\n      inUsePagination,\n      scrappedPagination,\n      activePagination,\n      loadAssetList,\n      columns,\n      resultColumns,\n      batchWarrantyState,\n      handleBatchWarrantyCheck,\n      startBatchWarrantyCheck,\n      closeBatchWarrantyModal,\n      onSelectChange,\n      onSelectAll,\n      clearSelection,\n      handleBatchDelete,\n      handleBatchToggleMonitoring,\n      handleToggleMonitoring,\n      toggleMonitoringStatus,\n      loadZabbixTemplates,\n      handleCreateMonitoring,\n      handleCloseTemplateDrawer,\n      groupedTemplates,\n      handleSearch,\n      handleReset,\n      handleSearchInput,\n      handleStatusChange,\n      handleTypeChange,\n      handleStatsFilter,\n      handleViewHistory,\n      loadSpecHistory,\n      loadWarrantyHistory,\n      handleHistoryTabChange,\n      handleHistoryModalClose,\n      handleTableChange,\n      handleActiveTableChange,\n      handleView,\n      handleEdit,\n      handleDelete,\n      handleCheckWarranty,\n      handleExport,\n      handleImport,\n      handleAdd,\n      handleSubmit,\n      handleWarrantyCancel,\n      handleWarrantyConfirm,\n      ref,\n      reactive,\n      computed,\n      onMounted,\n      onUnmounted,\n      watch,\n      onBeforeUnmount,\n      nextTick,\n      h,\n      createVNode,\n      get useRouter() {\n        return useRouter;\n      },\n      get message() {\n        return message;\n      },\n      get Modal() {\n        return Modal;\n      },\n      get hardwareAssetApi() {\n        return hardwareAssetApi;\n      },\n      get suppressResizeObserverError() {\n        return suppressResizeObserverError;\n      },\n      Vue,\n      get antdvIcons() {\n        return antdvIcons;\n      },\n      HardwareAssetForm,\n      HardwareAssetTable,\n      MonitoringActions,\n      TemplateDrawer,\n      get ExclamationCircleOutlined() {\n        return ExclamationCircleOutlined;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","computed","onMounted","onUnmounted","watch","onBeforeUnmount","nextTick","h","createVNode","useRouter","message","Modal","hardwareAssetApi","suppressResizeObserverError","Vue","antdvIcons","HardwareAssetForm","HardwareAssetTable","MonitoringActions","TemplateDrawer","ExclamationCircleOutlined","router","searchKeyword","assetStatus","assetType","formDialogVisible","assetTypeOptions","label","value","assetStatusOptions","assetData","loading","selectedRowKeys","batchDeleting","batchMonitoringToggling","templateDrawerVisible","zabbixTemplates","selectedTemplateIds","templateLoading","templateSearchKeyword","monitoringCreating","selectedCategory","expandedCategories","historyModalVisible","historyActiveTab","currentHistoryAsset","specHistory","warrantyHistory","specHistoryLoading","warrantyHistoryLoading","specHistoryColumns","title","dataIndex","key","width","customRender","text","Date","toLocaleString","minWidth","JSON","stringify","warrantyHistoryColumns","record","old_warranty_start_date","old_warranty_end_date","new_warranty_start_date","new_warranty_end_date","setAssetData","data","Array","isArray","processedData","map","asset","is_protected","undefined","is_auto_discovered","protection_reason","editable_fields","console","warn","activeCount","filter","asset_status","length","maintenanceCount","retiredCount","statistics","total","active","maintenance","retired","inUseAssets","scrappedAssets","totalCount","inUseCount","scrappedCount","activeAssets","currentFilter","needsWarrantyCheck","type","warrantyFormData","checkType","getStatusText","status","textMap","getTypeText","typeMap","formatDate","date","detailModalVisible","editModalVisible","warrantyModalVisible","taskDetailModalVisible","taskResultModalVisible","selectedAsset","editingAsset","selectedTask","warrantyTasks","taskResults","taskLoading","resultLoading","taskStatusFilter","taskDateRange","taskNameFilter","taskPagination","current","pageSize","showSizeChanger","showQuickJumper","showTotal","range","formRef","warrantyFormRef","formData","assetTag","assetName","brand","model","serialNumber","location","description","warrantyPeriod","purchaseDate","warrantyStartDate","warrantyEndDate","supplierInfo","name","contact","phone","email","rules","required","pattern","warrantyRules","min","max","pagination","pageSizeOptions","inUsePagination","scrappedPagination","activePagination","loadAssetList","params","page","page_size","trim","search","log","response","getList","code","resultData","results","count","success","error","request","errorMessage","columns","fixed","resultColumns","ellipsis","batchWarrantyState","isVisible","phase","stats","currentValid","currentExpired","testResult","checking","progress","currentAsset","startTime","handleBatchWarrantyCheck","allAssetIds","id","warning","warranty_status","startBatchWarrantyCheck","batchCheckWarranty","batchData","summary","resultsMap","Map","forEach","result","set","asset_id","get","warranty_end_date","updated_at","toISOString","closeBatchWarrantyModal","onSelectChange","newSelectedRowKeys","onSelectAll","selected","selectedRows","changeRows","clearSelection","handleBatchDelete","confirm","content","okText","okType","cancelText","onOk","batchDeleteAssets","deleted_count","failed_count","handleBatchToggleMonitoring","enableMonitoring","actionText","batchToggleMonitoring","success_count","includes","monitoring_enabled","handleToggleMonitoring","loadZabbixTemplates","toggleMonitoringStatus","monitoringToggling","toggleMonitoring","asset_name","asset_tag","assetId","getZabbixTemplates","templates","categories","Object","keys","groupedTemplates","category","categoryStr","String","handleCreateMonitoring","monitoringData","template_ids","host_name","group_ids","createMonitoring","template_count","duration","handleCloseTemplateDrawer","groups","template","push","sort","a","b","nameA","nameB","localeCompare","sortError","handleSearch","handleReset","handleSearchInput","handleStatusChange","handleTypeChange","handleStatsFilter","filterType","handleViewHistory","loadSpecHistory","getSpecHistory","loadWarrantyHistory","getWarrantyHistory","handleHistoryTabChange","activeKey","handleHistoryModalClose","handleTableChange","paginationInfo","filters","sorter","当前分页状态","currentUrl","URL","window","searchParams","toString","history","replaceState","handleActiveTableChange","handleView","handleEdit","join","assign","handleDelete","deleteMessage","deleteAsset","cleanupData","successMessage","cleanupDetails","warranty_records_deleted","monitoring_cleanup","deleteError","handleCheckWarranty","warrantyChecking","checkWarranty","warrantyData","statusText","is_valid","endDateText","handleExport","info","handleImport","handleAdd","handleSubmit","createAsset","handleWarrantyCancel","handleWarrantyConfirm","urlParams","URLSearchParams","isNaN","parseInt"],"sources":["E:/A_project/yuanchi/AIops/frontend/src/views/business/HardwareAssetList.vue"],"sourcesContent":["<template>\r\n  <div class=\"hardware-asset-list-container\">\r\n    <!-- 设备内容区域 -->\r\n    <div class=\"device-content\">\r\n        <!-- 在用设备表格 -->\r\n        <div class=\"content-container\">\r\n          <HardwareAssetTable\r\n            :dataSource=\"currentFilter === 'scrapped' ? scrappedAssets : activeAssets\"\r\n            :loading=\"loading\"\r\n            :pagination=\"activePagination\"\r\n            :selectedRowKeys=\"selectedRowKeys\"\r\n            :searchKeyword=\"searchKeyword\"\r\n            :assetStatus=\"assetStatus\"\r\n            :assetType=\"assetType\"\r\n            :totalCount=\"totalCount\"\r\n            :activeCount=\"activeCount\"\r\n            :maintenanceCount=\"0\"\r\n            :retiredCount=\"0\"\r\n            :scrappedCount=\"scrappedCount\"\r\n            :tableMode=\"currentFilter\"\r\n            :currentFilter=\"currentFilter\"\r\n            @select-change=\"onSelectChange\"\r\n            @select-all=\"onSelectAll\"\r\n            @table-change=\"handleActiveTableChange\"\r\n            @view=\"handleView\"\r\n            @edit=\"handleEdit\"\r\n            @delete=\"handleDelete\"\r\n            @check-warranty=\"handleCheckWarranty\"\r\n            @toggle-monitoring=\"handleToggleMonitoring\"\r\n            @batch-delete=\"handleBatchDelete\"\r\n            @batch-toggle-monitoring=\"handleBatchToggleMonitoring\"\r\n            @clear-selection=\"clearSelection\"\r\n            @add=\"handleAdd\"\r\n            @export=\"handleExport\"\r\n            @import=\"handleImport\"\r\n            @search=\"handleSearch\"\r\n            @reset=\"handleReset\"\r\n            @search-input=\"handleSearchInput\"\r\n            @status-change=\"handleStatusChange\"\r\n            @type-change=\"handleTypeChange\"\r\n            @view-history=\"handleViewHistory\"\r\n            @stats-filter=\"handleStatsFilter\"\r\n            :batchDeleting=\"batchDeleting\"\r\n            :batchMonitoringToggling=\"batchMonitoringToggling\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 监控操作组件 -->\r\n    <MonitoringActions\r\n      :selectedAsset=\"selectedAsset\"\r\n      :detailModalVisible=\"detailModalVisible\"\r\n      :warrantyModalVisible=\"warrantyModalVisible\"\r\n      :batchWarrantyState=\"batchWarrantyState\"\r\n      :taskResultModalVisible=\"taskResultModalVisible\"\r\n      :warrantyFormData=\"warrantyFormData\"\r\n      :warrantyRules=\"warrantyRules\"\r\n      :selectedTask=\"selectedTask\"\r\n      :taskResults=\"taskResults\"\r\n      :resultLoading=\"resultLoading\"\r\n      :resultColumns=\"resultColumns\"\r\n      @close-detail-modal=\"detailModalVisible = false\"\r\n      @close-warranty-modal=\"handleWarrantyCancel\"\r\n      @warranty-confirm=\"handleWarrantyConfirm\"\r\n      @close-batch-warranty=\"closeBatchWarrantyModal\"\r\n      @start-batch-warranty=\"startBatchWarrantyCheck\"\r\n      @close-task-result=\"taskResultModalVisible = false\"\r\n    />\r\n\r\n    <!-- 模板选择抽屉组件 -->\r\n    <TemplateDrawer \r\n      v-model:visible=\"templateDrawerVisible\"\r\n      v-model:selectedTemplateIds=\"selectedTemplateIds\"\r\n      :loading=\"templateLoading\"\r\n      :selectedAsset=\"selectedAsset\"\r\n      @confirm=\"handleCreateMonitoring\"\r\n    />\r\n    <!-- 资产详情弹窗 -->\r\n    <HardwareAssetForm\r\n      ref=\"assetFormRef\"\r\n      v-model:visible=\"formDialogVisible\"\r\n      :selectedAsset=\"selectedAsset\"\r\n      :assetTypes=\"assetTypeOptions\"\r\n      :statusOptions=\"assetStatusOptions\"\r\n      @close=\"formDialogVisible = false\"\r\n      @submit=\"handleSubmit\"\r\n    />\r\n\r\n    <!-- 历史记录弹窗 -->\r\n    <a-modal\r\n      v-model:open=\"historyModalVisible\"\r\n      title=\"更新历史记录\"\r\n      width=\"1200px\"\r\n      :footer=\"null\"\r\n      @cancel=\"historyModalVisible = false\"\r\n    >\r\n      <a-tabs v-model:activeKey=\"historyActiveTab\">\r\n        <a-tab-pane tab=\"规格参数更新记录\" key=\"spec\">\r\n          <div class=\"history-section\">\r\n            <div class=\"history-header\">\r\n              <h4>规格参数更新记录</h4>\r\n              <a-button type=\"primary\" size=\"small\" @click=\"loadSpecHistory\">\r\n                刷新记录\r\n              </a-button>\r\n            </div>\r\n            \r\n            <a-table\r\n              :data-source=\"specHistory\"\r\n              :columns=\"specHistoryColumns\"\r\n              bordered\r\n              :loading=\"specHistoryLoading\"\r\n              :pagination=\"false\"\r\n              :locale=\"{ emptyText: '暂无更新记录' }\"\r\n            />\r\n          </div>\r\n        </a-tab-pane>\r\n        \r\n        <a-tab-pane tab=\"保修更新记录\" key=\"warranty\">\r\n          <div class=\"history-section\">\r\n            <div class=\"history-header\">\r\n              <h4>保修更新记录</h4>\r\n              <a-button type=\"primary\" size=\"small\" @click=\"loadWarrantyHistory\">\r\n                刷新记录\r\n              </a-button>\r\n            </div>\r\n            \r\n            <a-table\r\n              :data-source=\"warrantyHistory\"\r\n              :columns=\"warrantyHistoryColumns\"\r\n              bordered\r\n              :loading=\"warrantyHistoryLoading\"\r\n              :pagination=\"false\"\r\n              :locale=\"{ emptyText: '暂无更新记录' }\"\r\n            />\r\n          </div>\r\n        </a-tab-pane>\r\n      </a-tabs>\r\n    </a-modal>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, computed, onMounted, onUnmounted, watch, onBeforeUnmount, nextTick, h, createVNode } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport { message, Modal } from 'ant-design-vue';\r\nimport hardwareAssetApi from '@/api/hardwareAsset';\r\nimport { suppressResizeObserverError } from '@/utils/errorHandler';\r\nimport * as Vue from 'vue';\r\nimport * as antdvIcons from '@ant-design/icons-vue';\r\nimport HardwareAssetForm from '@/components/business/HardwareAssetForm.vue';\r\n\r\n// 导入拆分的组件\r\nimport HardwareAssetTable from '@/components/business/HardwareAssetTable.vue';\r\nimport MonitoringActions from '@/components/business/MonitoringActions.vue';\r\nimport TemplateDrawer from '@/components/business/TemplateDrawer.vue';\r\nimport { \r\n  ExclamationCircleOutlined,\r\n} from '@ant-design/icons-vue';\r\n\r\n// 路由实例\r\nconst router = useRouter();\r\n\r\n// 搜索条件\r\nconst searchKeyword = ref('');\r\nconst assetStatus = ref([]);\r\nconst assetType = ref('');\r\nconst formDialogVisible = ref(false);\r\n\r\n// 资产类型选项\r\nconst assetTypeOptions = ref([\r\n  { label: '服务器', value: 'server' },\r\n  { label: '网络设备', value: 'network' },\r\n  { label: '存储设备', value: 'storage' },\r\n  { label: '安全设备', value: 'security' }\r\n]);\r\n\r\n// 资产状态选项\r\nconst assetStatusOptions = ref([\r\n  { label: '在用', value: 'active' },\r\n  { label: '维护中', value: 'maintenance' },\r\n  { label: '已退役', value: 'retired' },\r\n  { label: '预留', value: 'reserved' }\r\n]);\r\n\r\n// 硬件资产数据状态 - 确保始终是数组\r\nconst assetData = ref([]);\r\nconst loading = ref(false);\r\n\r\n// 批量操作相关状态\r\nconst selectedRowKeys = ref([]);\r\nconst batchDeleting = ref(false);\r\nconst batchMonitoringToggling = ref(false);\r\n\r\n// 模板选择抽屉相关状态\r\nconst templateDrawerVisible = ref(false);\r\nconst zabbixTemplates = ref([]);\r\nconst selectedTemplateIds = ref([]);\r\nconst templateLoading = ref(false);\r\nconst templateSearchKeyword = ref('');\r\nconst monitoringCreating = ref(false);\r\nconst selectedCategory = ref(''); // 当前选中的分类\r\nconst expandedCategories = ref({}); // 展开的分类\r\n\r\n// 历史记录相关状态\r\nconst historyModalVisible = ref(false);\r\nconst historyActiveTab = ref('spec');\r\nconst currentHistoryAsset = ref(null);\r\nconst specHistory = ref([]);\r\nconst warrantyHistory = ref([]);\r\nconst specHistoryLoading = ref(false);\r\nconst warrantyHistoryLoading = ref(false);\r\n\r\n// 历史记录表格列配置\r\nconst specHistoryColumns = [\r\n  {\r\n    title: '更新时间',\r\n    dataIndex: 'update_time',\r\n    key: 'update_time',\r\n    width: 180,\r\n    customRender: ({ text }) => {\r\n      return text ? new Date(text).toLocaleString() : '-';\r\n    }\r\n  },\r\n  {\r\n    title: '更新方式',\r\n    dataIndex: 'update_method',\r\n    key: 'update_method',\r\n    width: 100,\r\n    customRender: ({ text }) => {\r\n      return text === 'manual' ? '手动' : '自动';\r\n    }\r\n  },\r\n  {\r\n    title: '更新前规格参数',\r\n    dataIndex: 'old_specifications',\r\n    key: 'old_specifications',\r\n    minWidth: 200,\r\n    customRender: ({ text }) => {\r\n      return text ? JSON.stringify(text, null, 2) : '-';\r\n    }\r\n  },\r\n  {\r\n    title: '更新后规格参数',\r\n    dataIndex: 'new_specifications',\r\n    key: 'new_specifications',\r\n    minWidth: 200,\r\n    customRender: ({ text }) => {\r\n      return text ? JSON.stringify(text, null, 2) : '-';\r\n    }\r\n  },\r\n  {\r\n    title: '更新人',\r\n    dataIndex: 'updated_by',\r\n    key: 'updated_by',\r\n    width: 120\r\n  },\r\n  {\r\n    title: '备注',\r\n    dataIndex: 'remarks',\r\n    key: 'remarks',\r\n    width: 150\r\n  }\r\n];\r\n\r\nconst warrantyHistoryColumns = [\r\n  {\r\n    title: '更新时间',\r\n    dataIndex: 'update_time',\r\n    key: 'update_time',\r\n    width: 180,\r\n    customRender: ({ text }) => {\r\n      return text ? new Date(text).toLocaleString() : '-';\r\n    }\r\n  },\r\n  {\r\n    title: '更新前保修类型',\r\n    dataIndex: 'old_warranty_type',\r\n    key: 'old_warranty_type',\r\n    width: 120,\r\n    customRender: ({ text }) => {\r\n      return text === 'original' ? '原厂保修' : '第三方保修';\r\n    }\r\n  },\r\n  {\r\n    title: '更新后保修类型',\r\n    dataIndex: 'new_warranty_type',\r\n    key: 'new_warranty_type',\r\n    width: 120,\r\n    customRender: ({ text }) => {\r\n      return text === 'original' ? '原厂保修' : '第三方保修';\r\n    }\r\n  },\r\n  {\r\n    title: '更新前保修期',\r\n    key: 'old_warranty_period',\r\n    width: 200,\r\n    customRender: ({ record }) => {\r\n      return `${record.old_warranty_start_date} ~ ${record.old_warranty_end_date}`;\r\n    }\r\n  },\r\n  {\r\n    title: '更新后保修期',\r\n    key: 'new_warranty_period',\r\n    width: 200,\r\n    customRender: ({ record }) => {\r\n      return `${record.new_warranty_start_date} ~ ${record.new_warranty_end_date}`;\r\n    }\r\n  },\r\n  {\r\n    title: '更新人',\r\n    dataIndex: 'updated_by',\r\n    key: 'updated_by',\r\n    width: 120\r\n  },\r\n  {\r\n    title: '备注',\r\n    dataIndex: 'remarks',\r\n    key: 'remarks',\r\n    width: 150\r\n  }\r\n];\r\n\r\n// 防御性检查，确保assetData始终是数组\r\nconst setAssetData = (data) => {\r\n  if (Array.isArray(data)) {\r\n    // 为每个硬件资产记录设置保护状态信息\r\n    const processedData = data.map(asset => {\r\n      // 确保保护状态字段存在\r\n      if (asset.is_protected === undefined) {\r\n        asset.is_protected = asset.is_auto_discovered || false;\r\n      }\r\n      \r\n      // 设置保护原因\r\n      if (!asset.protection_reason && asset.is_auto_discovered) {\r\n        asset.protection_reason = '自动发现的硬件资产';\r\n      }\r\n      \r\n      // 设置可编辑字段列表\r\n      if (asset.is_auto_discovered) {\r\n        asset.editable_fields = ['description', 'status'];\r\n      } else {\r\n        asset.editable_fields = 'all';\r\n      }\r\n      \r\n      return asset;\r\n    });\r\n    \r\n    assetData.value = processedData;\r\n  } else {\r\n    console.warn('尝试设置非数组数据到assetData:', data);\r\n    assetData.value = [];\r\n  }\r\n};\r\n\r\n// 统计计算属性 - 添加防御性检查\r\nconst activeCount = computed(() => {\r\n  if (!Array.isArray(assetData.value)) {\r\n    console.warn('assetData不是数组，返回0');\r\n    return 0;\r\n  }\r\n  return assetData.value.filter(asset => asset.asset_status === 'active').length;\r\n});\r\n\r\nconst maintenanceCount = computed(() => {\r\n  if (!Array.isArray(assetData.value)) {\r\n    console.warn('assetData不是数组，返回0');\r\n    return 0;\r\n  }\r\n  return assetData.value.filter(asset => asset.asset_status === 'maintenance').length;\r\n});\r\n\r\nconst retiredCount = computed(() => {\r\n  if (!Array.isArray(assetData.value)) {\r\n    console.warn('assetData不是数组，返回0');\r\n    return 0;\r\n  }\r\n  return assetData.value.filter(asset => asset.asset_status === 'retired').length;\r\n});\r\n\r\n// 统计对象\r\nconst statistics = computed(() => ({\r\n  total: assetData.value.length || 0,\r\n  active: activeCount.value,\r\n  maintenance: maintenanceCount.value,\r\n  retired: retiredCount.value\r\n}));\r\n\r\n// 计算属性：分离在用和报废设备\r\nconst inUseAssets = computed(() => {\r\n  return assetData.value.filter(asset => asset.asset_status === 'in_use');\r\n});\r\n\r\nconst scrappedAssets = computed(() => {\r\n  return assetData.value.filter(asset => asset.asset_status === 'scrapped');\r\n});\r\n\r\n// 计算属性：统计数据\r\nconst totalCount = computed(() => assetData.value.length);\r\nconst inUseCount = computed(() => inUseAssets.value.length);\r\nconst scrappedCount = computed(() => scrappedAssets.value.length);\r\n\r\n// 计算属性：按状态分离设备\r\nconst activeAssets = computed(() => {\r\n  return assetData.value.filter(asset => asset.asset_status === 'active' || asset.asset_status === 'in_use');\r\n});\r\n\r\n// 统计按钮过滤状态\r\nconst currentFilter = ref('active');\r\n\r\n// 计算属性 - 保修相关\r\nconst needsWarrantyCheck = computed(() => {\r\n  const type = warrantyFormData.checkType;\r\n  return type === 'auto' || type === 'manual';\r\n});\r\n\r\n// 工具函数\r\nconst getStatusText = (status) => {\r\n  const textMap = {\r\n    'active': '在用',\r\n    'maintenance': '维护中',\r\n    'retired': '已退役',\r\n    'reserved': '预留'\r\n  };\r\n  return textMap[status] || status;\r\n};\r\n\r\nconst getTypeText = (type) => {\r\n  const typeMap = {\r\n    'server': '服务器',\r\n    'network': '网络设备',\r\n    'storage': '存储设备',\r\n    'security': '安全设备'\r\n  };\r\n  return typeMap[type] || type;\r\n};\r\n\r\nconst formatDate = (date) => {\r\n  if (!date) return null;\r\n  return new Date(date).toLocaleString('zh-CN');\r\n};\r\n\r\n// 弹窗状态\r\nconst detailModalVisible = ref(false);\r\nconst editModalVisible = ref(false);\r\nconst warrantyModalVisible = ref(false);\r\nconst taskDetailModalVisible = ref(false);\r\nconst taskResultModalVisible = ref(false);\r\nconst selectedAsset = ref(null);\r\nconst editingAsset = ref(null);\r\nconst selectedTask = ref(null);\r\n\r\n// 保修查询相关\r\nconst warrantyTasks = ref([]);\r\nconst taskResults = ref([]);\r\nconst taskLoading = ref(false);\r\nconst resultLoading = ref(false);\r\nconst taskStatusFilter = ref('');\r\nconst taskDateRange = ref([]);\r\nconst taskNameFilter = ref('');\r\nconst taskPagination = reactive({\r\n  current: 1,\r\n  pageSize: 20,\r\n  total: 0,\r\n  showSizeChanger: true,\r\n  showQuickJumper: true,\r\n  showTotal: (total, range) => `第 ${range[0]}-${range[1]} 条，共 ${total} 条`\r\n});\r\n\r\n// 表单相关\r\nconst formRef = ref();\r\nconst warrantyFormRef = ref();\r\nconst formData = reactive({\r\n  assetTag: '',\r\n  assetName: '',\r\n  status: 'active',\r\n  type: 'server',\r\n  brand: '',\r\n  model: '',\r\n  serialNumber: '',\r\n  location: '',\r\n  description: ''\r\n});\r\n\r\n// 保修配置数据\r\nconst warrantyFormData = reactive({\r\n  checkType: 'auto', // 默认自动检查\r\n  warrantyPeriod: 36, // 保修期（月）\r\n  purchaseDate: null,\r\n  warrantyStartDate: null,\r\n  warrantyEndDate: null,\r\n  supplierInfo: {\r\n    name: '',\r\n    contact: '',\r\n    phone: '',\r\n    email: ''\r\n  }\r\n});\r\n\r\n// 表单验证规则\r\nconst rules = {\r\n  assetTag: [\r\n    { required: true, message: '请输入资产标签' },\r\n    { pattern: /^[A-Za-z0-9-_]+$/, message: '资产标签只能包含字母、数字、横线和下划线' }\r\n  ],\r\n  assetName: [{ required: true, message: '请输入资产名称' }],\r\n  status: [{ required: true, message: '请选择资产状态' }],\r\n  type: [{ required: true, message: '请选择资产类型' }]\r\n};\r\n\r\n// 保修配置验证规则\r\nconst warrantyRules = {\r\n  checkType: [{ required: true, message: '请选择检查类型' }],\r\n  warrantyPeriod: [\r\n    { type: 'number', min: 1, max: 120, message: '保修期必须在1-120个月之间' }\r\n  ],\r\n  purchaseDate: [{ required: true, message: '请选择采购日期' }]\r\n};\r\n\r\n// 分页配置\r\nconst pagination = reactive({\r\n  current: 1,\r\n  pageSize: 20,\r\n  total: 0,\r\n  pageSizeOptions: ['10', '20', '50', '100'],\r\n  showSizeChanger: true,\r\n  showQuickJumper: true,\r\n  showTotal: (total) => `共 ${total} 条记录`,\r\n});\r\n\r\n// 在用设备分页配置\r\nconst inUsePagination = reactive({\r\n  current: 1,\r\n  pageSize: 20,\r\n  total: 0,\r\n  showSizeChanger: true,\r\n  showQuickJumper: true,\r\n  showTotal: (total, range) => `第 ${range[0]}-${range[1]} 条/共 ${total} 条`\r\n});\r\n\r\n// 报废设备分页配置\r\nconst scrappedPagination = reactive({\r\n  current: 1,\r\n  pageSize: 20,\r\n  total: 0,\r\n  showSizeChanger: true,\r\n  showQuickJumper: true,\r\n  showTotal: (total, range) => `第 ${range[0]}-${range[1]} 条/共 ${total} 条`\r\n});\r\n\r\n// 正常设备分页配置\r\nconst activePagination = reactive({\r\n  current: 1,\r\n  pageSize: 20,\r\n  total: 0,\r\n  showSizeChanger: true,\r\n  showQuickJumper: true,\r\n  showTotal: (total, range) => `第 ${range[0]}-${range[1]} 条/共 ${total} 条`\r\n});\r\n\r\n\r\n\r\n// 加载硬件资产列表数据\r\nconst loadAssetList = async () => {\r\n  loading.value = true;\r\n  try {\r\n    const params = {\r\n      page: pagination.current,\r\n      page_size: pagination.pageSize\r\n    };\r\n    \r\n    // 添加搜索条件\r\n    if (searchKeyword.value && searchKeyword.value.trim()) {\r\n      params.search = searchKeyword.value.trim();\r\n    }\r\n    if (assetStatus.value) {\r\n      params.status = assetStatus.value;\r\n    }\r\n    if (assetType.value) {\r\n      params.type = assetType.value;\r\n    }\r\n    \r\n    console.log('正在获取硬件资产列表，参数:', params);\r\n    console.log('当前分页状态:', {\r\n      current: pagination.current,\r\n      pageSize: pagination.pageSize,\r\n      total: pagination.total\r\n    });\r\n    \r\n    const response = await hardwareAssetApi.getList(params);\r\n    \r\n    console.log('API响应:', response);\r\n    \r\n    if (response && response.data) {\r\n      // 检查是否是统一响应格式（包含code字段）\r\n      if (response.data.code !== undefined) {\r\n        // 统一响应格式\r\n        if (response.data.code === 200) {\r\n          const data = response.data.data;\r\n          // 确保获取的数据是数组\r\n          let resultData = [];\r\n          if (data && data.results && Array.isArray(data.results)) {\r\n            resultData = data.results;\r\n          } else if (Array.isArray(data)) {\r\n            resultData = data;\r\n          } else {\r\n            console.warn('API返回的数据不是数组格式:', data);\r\n            resultData = [];\r\n          }\r\n          \r\n          setAssetData(resultData);\r\n          pagination.total = data.count || data.total || resultData.length;\r\n          // 更新各表格的分页总数\r\n          inUsePagination.total = inUseCount.value;\r\n          scrappedPagination.total = scrappedCount.value;\r\n          console.log('成功获取硬件资产列表（统一格式）:', assetData.value);\r\n          message.success('硬件资产列表数据已更新', 1);\r\n        } else {\r\n          console.error('API返回错误代码:', response.data.code, '错误信息:', response.data.message);\r\n          message.error(`获取硬件资产列表失败: ${response.data.message}`);\r\n          setAssetData([]);\r\n          pagination.total = 0;\r\n        }\r\n      } else {\r\n        // DRF标准响应格式（直接包含count、results字段）\r\n        console.log('检测到DRF标准响应格式');\r\n        // 确保获取的数据是数组\r\n        let resultData = [];\r\n        if (response.data.results && Array.isArray(response.data.results)) {\r\n          resultData = response.data.results;\r\n        } else if (Array.isArray(response.data)) {\r\n          resultData = response.data;\r\n        } else {\r\n          console.warn('API返回的数据不是数组格式:', response.data);\r\n          resultData = [];\r\n        }\r\n        \r\n        setAssetData(resultData);\r\n        pagination.total = response.data.count || response.data.total || resultData.length;\r\n        // 更新各表格的分页总数\r\n        inUsePagination.total = inUseCount.value;\r\n        scrappedPagination.total = scrappedCount.value;\r\n        console.log('成功获取硬件资产列表（DRF格式）:', assetData.value);\r\n        message.success('硬件资产列表数据已更新', 1);\r\n      }\r\n    } else {\r\n      console.error('无效的API响应:', response);\r\n      message.error('获取硬件资产列表失败: 无效的响应数据');\r\n      setAssetData([]);\r\n      pagination.total = 0;\r\n    }\r\n  } catch (error) {\r\n    console.error('加载硬件资产列表失败:', error);\r\n    console.error('错误详情:', {\r\n      message: error.message,\r\n      response: error.response,\r\n      request: error.request\r\n    });\r\n    \r\n    let errorMessage = '获取硬件资产列表失败';\r\n    if (error.response) {\r\n      // 服务器响应错误\r\n      errorMessage += `: HTTP ${error.response.status}`;\r\n      if (error.response.data && error.response.data.message) {\r\n        errorMessage += ` - ${error.response.data.message}`;\r\n      }\r\n    } else if (error.request) {\r\n      // 请求发送但无响应\r\n      errorMessage += ': 网络连接失败或服务器无响应';\r\n    } else {\r\n      // 请求设置错误\r\n      errorMessage += `: ${error.message}`;\r\n    }\r\n    \r\n    message.error(errorMessage);\r\n    \r\n    // 如果API调用失败，显示空数据\r\n    setAssetData([]);\r\n    pagination.total = 0;\r\n  } finally {\r\n    loading.value = false;\r\n  }\r\n};\r\n\r\nconst columns = [\r\n  {\r\n    title: '资产标签',\r\n    dataIndex: 'asset_tag',\r\n    key: 'assetTag',\r\n    width: 120,\r\n    fixed: 'left'\r\n  },\r\n  {\r\n    title: '资产名称',\r\n    dataIndex: 'asset_name',\r\n    key: 'assetName',\r\n    width: 150\r\n  },\r\n  {\r\n    title: '状态',\r\n    dataIndex: 'status',\r\n    key: 'status',\r\n    width: 80\r\n  },\r\n  {\r\n    title: '类型',\r\n    dataIndex: 'type',\r\n    key: 'type',\r\n    width: 100\r\n  },\r\n  {\r\n    title: '品牌',\r\n    dataIndex: 'brand',\r\n    key: 'brand',\r\n    width: 100\r\n  },\r\n  {\r\n    title: '型号',\r\n    dataIndex: 'model',\r\n    key: 'model',\r\n    width: 120\r\n  },\r\n  {\r\n    title: '序列号',\r\n    dataIndex: 'serial_number',\r\n    key: 'serialNumber',\r\n    width: 150\r\n  },\r\n  {\r\n    title: '位置',\r\n    dataIndex: 'location',\r\n    key: 'location',\r\n    width: 120\r\n  },\r\n  {\r\n    title: '保修状态',\r\n    dataIndex: 'warranty_status',\r\n    key: 'warrantyStatus',\r\n    width: 100\r\n  },\r\n  {\r\n    title: '最后更新',\r\n    dataIndex: 'updated_at',\r\n    key: 'updatedAt',\r\n    width: 160\r\n  },\r\n  {\r\n    title: '操作',\r\n    key: 'operation',\r\n    fixed: 'right',\r\n    width: 280\r\n  }\r\n];\r\n\r\n// 保修结果表格列定义\r\nconst resultColumns = [\r\n  {\r\n    title: '资产标签',\r\n    dataIndex: 'asset_tag',\r\n    key: 'asset_tag',\r\n    width: 120,\r\n  },\r\n  {\r\n    title: '资产名称',\r\n    dataIndex: 'asset_name',\r\n    key: 'asset_name',\r\n    ellipsis: true\r\n  },\r\n  {\r\n    title: '保修状态',\r\n    dataIndex: 'warranty_status',\r\n    key: 'warranty_status'\r\n  },\r\n  {\r\n    title: '保修到期日',\r\n    dataIndex: 'warranty_end_date',\r\n    key: 'warranty_end_date'\r\n  },\r\n  {\r\n    title: '检查时间',\r\n    dataIndex: 'created_at',\r\n    key: 'created_at'\r\n  }\r\n];\r\n\r\n// 事件处理函数\r\n// 批量保修检查状态管理\r\nconst batchWarrantyState = reactive({\r\n  isVisible: false,\r\n  phase: 'confirm', // confirm, checking, result\r\n  stats: {\r\n    total: 0,\r\n    currentValid: 0,\r\n    currentExpired: 0,\r\n    testResult: null\r\n  },\r\n  checking: {\r\n    progress: 0,\r\n    currentAsset: '',\r\n    startTime: null\r\n  }\r\n});\r\n\r\nconst handleBatchWarrantyCheck = async () => {\r\n  try {\r\n    // 获取当前页面的所有资产ID\r\n    const allAssetIds = assetData.value.map(asset => asset.id).filter(id => id);\r\n    \r\n    if (allAssetIds.length === 0) {\r\n      message.warning('没有可以检查保修的资产记录');\r\n      return;\r\n    }\r\n    \r\n    // 初始化状态\r\n    batchWarrantyState.stats.total = allAssetIds.length;\r\n    batchWarrantyState.stats.currentValid = assetData.value.filter(asset => asset.warranty_status === 'valid').length;\r\n    batchWarrantyState.stats.currentExpired = allAssetIds.length - batchWarrantyState.stats.currentValid;\r\n    batchWarrantyState.phase = 'confirm';\r\n    batchWarrantyState.isVisible = true;\r\n    \r\n  } catch (error) {\r\n    console.error('初始化批量保修检查失败:', error);\r\n    message.error('初始化批量保修检查失败');\r\n  }\r\n};\r\n\r\n// 开始保修检查\r\nconst startBatchWarrantyCheck = async () => {\r\n  try {\r\n    const allAssetIds = assetData.value.map(asset => asset.id).filter(id => id);\r\n    \r\n    // 切换到检查阶段\r\n    batchWarrantyState.phase = 'checking';\r\n    batchWarrantyState.checking.startTime = new Date();\r\n    batchWarrantyState.checking.progress = 0;\r\n    \r\n    loading.value = true;\r\n    \r\n    // 调用批量保修检查API\r\n    const response = await hardwareAssetApi.batchCheckWarranty(allAssetIds);\r\n    \r\n    if (response.data && response.data.code === 200) {\r\n      const batchData = response.data.data;\r\n      const summary = batchData.summary;\r\n      \r\n      // 更新本地数据\r\n      const resultsMap = new Map();\r\n      batchData.results.forEach(result => {\r\n        resultsMap.set(result.asset_id, result);\r\n      });\r\n      \r\n      // 更新assetData中的记录\r\n      assetData.value.forEach(asset => {\r\n        const result = resultsMap.get(asset.id);\r\n        if (result) {\r\n          asset.warranty_status = result.status;\r\n          asset.warranty_end_date = result.warranty_end_date;\r\n          asset.updated_at = new Date().toISOString();\r\n        }\r\n      });\r\n      \r\n      // 设置检查结果并切换到结果阶段\r\n      batchWarrantyState.stats.testResult = summary;\r\n      batchWarrantyState.phase = 'result';\r\n      \r\n    } else {\r\n      message.error(`批量保修检查失败: ${response.data?.message || '未知错误'}`);\r\n      batchWarrantyState.isVisible = false;\r\n    }\r\n  } catch (error) {\r\n    console.error('批量保修检查失败:', error);\r\n    let errorMessage = '批量保修检查失败';\r\n    if (error.response && error.response.data) {\r\n      errorMessage += `: ${error.response.data.message || error.response.data.error || '网络错误'}`;\r\n    } else if (error.message) {\r\n      errorMessage += `: ${error.message}`;\r\n    }\r\n    message.error(errorMessage);\r\n    batchWarrantyState.isVisible = false;\r\n  } finally {\r\n    loading.value = false;\r\n  }\r\n};\r\n\r\n// 关闭批量保修检查弹窗\r\nconst closeBatchWarrantyModal = () => {\r\n  batchWarrantyState.isVisible = false;\r\n  batchWarrantyState.phase = 'confirm';\r\n  batchWarrantyState.stats.testResult = null;\r\n  batchWarrantyState.checking.progress = 0;\r\n};\r\n\r\n// 行选择管理\r\nconst onSelectChange = (newSelectedRowKeys) => {\r\n  console.log('选中的行 keys:', newSelectedRowKeys);\r\n  selectedRowKeys.value = newSelectedRowKeys;\r\n};\r\n\r\nconst onSelectAll = (selected, selectedRows, changeRows) => {\r\n  console.log('全选/反选:', { selected, selectedRows: selectedRows.length, changeRows: changeRows.length });\r\n};\r\n\r\nconst clearSelection = () => {\r\n  selectedRowKeys.value = [];\r\n};\r\n\r\n// 批量删除\r\nconst handleBatchDelete = async () => {\r\n  if (selectedRowKeys.value.length === 0) {\r\n    message.warning('请选择要删除的硬件资产');\r\n    return;\r\n  }\r\n\r\n  try {\r\n    Modal.confirm({\r\n      title: '批量删除确认',\r\n      content: `您将删除 ${selectedRowKeys.value.length} 个硬件资产，此操作不可恢复！`,\r\n      okText: '确认删除',\r\n      okType: 'danger',\r\n      cancelText: '取消',\r\n      onOk: async () => {\r\n        batchDeleting.value = true;\r\n        try {\r\n          const response = await hardwareAssetApi.batchDeleteAssets(selectedRowKeys.value);\r\n          \r\n          if (response.data && response.data.code === 200) {\r\n            const result = response.data.data;\r\n            message.success(`批量删除成功！删除: ${result.deleted_count} 个，失败: ${result.failed_count} 个`, 1);\r\n            \r\n            // 清空选中状态\r\n            clearSelection();\r\n            \r\n            // 刷新列表\r\n            await loadAssetList();\r\n          } else {\r\n            message.error(`批量删除失败: ${response.data?.message || '未知错误'}`);\r\n          }\r\n        } catch (error) {\r\n          console.error('批量删除失败:', error);\r\n          message.error(`批量删除失败: ${error.message}`);\r\n        } finally {\r\n          batchDeleting.value = false;\r\n        }\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.error('批量删除操作失败:', error);\r\n    message.error('批量删除操作失败');\r\n  }\r\n};\r\n\r\n// 批量切换监控状态\r\nconst handleBatchToggleMonitoring = async (enableMonitoring) => {\r\n  if (selectedRowKeys.value.length === 0) {\r\n    message.warning('请选择要操作的硬件资产');\r\n    return;\r\n  }\r\n\r\n  const actionText = enableMonitoring ? '启用监控' : '禁用监控';\r\n  \r\n  try {\r\n    Modal.confirm({\r\n      title: `批量${actionText}`,\r\n      content: `您将对 ${selectedRowKeys.value.length} 个硬件资产${actionText}，是否继续？`,\r\n      okText: `确认${actionText}`,\r\n      cancelText: '取消',\r\n      onOk: async () => {\r\n        batchMonitoringToggling.value = true;\r\n        try {\r\n          const response = await hardwareAssetApi.batchToggleMonitoring(selectedRowKeys.value, enableMonitoring);\r\n          \r\n          if (response.data && response.data.code === 200) {\r\n            const result = response.data.data;\r\n            message.success(`批量${actionText}成功！成功: ${result.success_count} 个，失败: ${result.failed_count} 个`, 1);\r\n            \r\n            // 更新本地数据\r\n            assetData.value.forEach(asset => {\r\n              if (selectedRowKeys.value.includes(asset.id)) {\r\n                asset.monitoring_enabled = enableMonitoring;\r\n              }\r\n            });\r\n            \r\n            // 清空选中状态\r\n            clearSelection();\r\n          } else {\r\n            message.error(`批量${actionText}失败: ${response.data?.message || '未知错误'}`);\r\n          }\r\n        } catch (error) {\r\n          console.error(`批量${actionText}失败:`, error);\r\n          message.error(`批量${actionText}失败: ${error.message}`);\r\n        } finally {\r\n          batchMonitoringToggling.value = false;\r\n        }\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.error(`批量${actionText}操作失败:`, error);\r\n    message.error(`批量${actionText}操作失败`);\r\n  }\r\n};\r\n\r\n// 单个监控状态切换\r\nconst handleToggleMonitoring = async (record, enableMonitoring) => {\r\n  if (enableMonitoring) {\r\n    // 启用监控时显示模板选择抽屉\r\n    selectedAsset.value = record;\r\n    await loadZabbixTemplates(record.id);\r\n    templateDrawerVisible.value = true;\r\n  } else {\r\n    // 直接禁用监控\r\n    await toggleMonitoringStatus(record, false);\r\n  }\r\n};\r\n\r\n// 切换监控状态的实际方法\r\nconst toggleMonitoringStatus = async (record, enableMonitoring) => {\r\n  const actionText = enableMonitoring ? '启用监控' : '禁用监控';\r\n  \r\n  // 设置单个记录的加载状态\r\n  record.monitoringToggling = true;\r\n  \r\n  try {\r\n    const response = await hardwareAssetApi.toggleMonitoring(record.id, enableMonitoring);\r\n    \r\n    if (response.data && response.data.code === 200) {\r\n      // 更新本地数据\r\n      record.monitoring_enabled = enableMonitoring;\r\n      message.success(`${record.asset_name || record.asset_tag} ${actionText}成功`, 1);\r\n    } else {\r\n      message.error(`${actionText}失败: ${response.data?.message || '未知错误'}`);\r\n    }\r\n  } catch (error) {\r\n    console.error(`${actionText}失败:`, error);\r\n    message.error(`${actionText}失败: ${error.message}`);\r\n  } finally {\r\n    record.monitoringToggling = false;\r\n  }\r\n};\r\n\r\n// 加载Zabbix模板列表\r\nconst loadZabbixTemplates = async (assetId) => {\r\n  templateLoading.value = true;\r\n  try {\r\n    const response = await hardwareAssetApi.getZabbixTemplates(assetId, templateSearchKeyword.value);\r\n    \r\n    if (response.data && response.data.code === 200) {\r\n      zabbixTemplates.value = response.data.data.templates || [];\r\n      \r\n      // 初始化展开状态，默认展开所有分类\r\n      nextTick(() => {\r\n        try {\r\n          const categories = Object.keys(groupedTemplates.value || {});\r\n          categories.forEach(category => {\r\n            const categoryStr = String(category);\r\n            expandedCategories.value[categoryStr] = true;\r\n          });\r\n        } catch (error) {\r\n          console.warn('初始化展开状态错误:', error);\r\n        }\r\n      });\r\n      \r\n      console.log('成功加载模板列表:', zabbixTemplates.value.length, '个模板');\r\n    } else {\r\n      message.error(`加载模板列表失败: ${response.data?.message || '未知错误'}`);\r\n      zabbixTemplates.value = [];\r\n    }\r\n  } catch (error) {\r\n    console.error('加载模板列表失败:', error);\r\n    message.error(`加载模板列表失败: ${error.message}`);\r\n    zabbixTemplates.value = [];\r\n  } finally {\r\n    templateLoading.value = false;\r\n  }\r\n};\r\n\r\n// 创建监控主机\r\nconst handleCreateMonitoring = async () => {\r\n  if (!selectedAsset.value) {\r\n    message.error('请先选择硬件资产');\r\n    return;\r\n  }\r\n  \r\n  if (selectedTemplateIds.value.length === 0) {\r\n    message.error('请选择至少一个监控模板');\r\n    return;\r\n  }\r\n  \r\n  monitoringCreating.value = true;\r\n  \r\n  try {\r\n    const monitoringData = {\r\n      template_ids: selectedTemplateIds.value,\r\n      host_name: selectedAsset.value.asset_name || selectedAsset.value.asset_tag,\r\n      group_ids: []\r\n    };\r\n    \r\n    const response = await hardwareAssetApi.createMonitoring(selectedAsset.value.id, monitoringData);\r\n    \r\n    if (response.data && response.data.code === 200) {\r\n      const result = response.data.data;\r\n      \r\n      message.success({\r\n        content: `监控主机创建成功！\\n主机名: ${result.host_name}\\n资产: ${result.asset_tag}\\n模板数量: ${result.template_count}`,\r\n        duration: 5\r\n      });\r\n      \r\n      // 更新本地资产记录的监控状态\r\n      selectedAsset.value.monitoring_enabled = true;\r\n      \r\n      // 关闭抽屉\r\n      templateDrawerVisible.value = false;\r\n      \r\n      // 清空选中的模板\r\n      selectedTemplateIds.value = [];\r\n      \r\n    } else {\r\n      message.error(`创建监控主机失败: ${response.data?.message || '未知错误'}`);\r\n    }\r\n  } catch (error) {\r\n    console.error('创建监控主机失败:', error);\r\n    message.error(`创建监控主机失败: ${error.message}`);\r\n  } finally {\r\n    monitoringCreating.value = false;\r\n  }\r\n};\r\n\r\n// 关闭模板抽屉\r\nconst handleCloseTemplateDrawer = () => {\r\n  templateDrawerVisible.value = false;\r\n  selectedTemplateIds.value = [];\r\n  templateSearchKeyword.value = '';\r\n  selectedCategory.value = '';\r\n  expandedCategories.value = {};\r\n  selectedAsset.value = null;\r\n};\r\n\r\n// 按分类组织模板\r\nconst groupedTemplates = computed(() => {\r\n  const groups = {};\r\n  \r\n  try {\r\n    if (!Array.isArray(zabbixTemplates.value)) {\r\n      console.warn('zabbixTemplates不是数组:', zabbixTemplates.value);\r\n      return groups;\r\n    }\r\n    \r\n    zabbixTemplates.value.forEach((template) => {\r\n      if (!template || typeof template !== 'object') {\r\n        return;\r\n      }\r\n      \r\n      const category = template.category || '📝 其他';\r\n      if (!groups[category]) {\r\n        groups[category] = [];\r\n      }\r\n      \r\n      groups[category].push(template);\r\n    });\r\n    \r\n    // 对每个分类的模板按名称排序\r\n    Object.keys(groups).forEach(category => {\r\n      try {\r\n        groups[category].sort((a, b) => {\r\n          const nameA = a.name || '';\r\n          const nameB = b.name || '';\r\n          return nameA.localeCompare(nameB);\r\n        });\r\n      } catch (sortError) {\r\n        console.warn(`排序分类${category}时出错:`, sortError);\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.error('groupedTemplates计算出错:', error);\r\n  }\r\n  \r\n  return groups;\r\n});\r\n\r\nconst handleSearch = async () => {\r\n  pagination.current = 1;\r\n  await loadAssetList();\r\n};\r\n\r\nconst handleReset = async () => {\r\n  searchKeyword.value = '';\r\n  assetStatus.value = [];\r\n  assetType.value = '';\r\n  pagination.current = 1;\r\n  await loadAssetList();\r\n};\r\n\r\nconst handleSearchInput = (value) => {\r\n  searchKeyword.value = value;\r\n};\r\n\r\nconst handleStatusChange = (value) => {\r\n  assetStatus.value = value;\r\n};\r\n\r\nconst handleTypeChange = (value) => {\r\n  assetType.value = value;\r\n};\r\n\r\n// 处理统计按钮点击事件\r\nconst handleStatsFilter = (filterType) => {\r\n  currentFilter.value = filterType;\r\n  console.log('统计按钮点击:', filterType);\r\n  \r\n  // 根据点击的统计按钮类型进行相应的过滤或操作\r\n  switch (filterType) {\r\n    case 'total':\r\n      // 显示所有设备\r\n      assetStatus.value = [];\r\n      break;\r\n    case 'active':\r\n      // 显示在用设备\r\n      assetStatus.value = ['active'];\r\n      break;\r\n    case 'available':\r\n      // 显示可用设备（这里可以根据实际业务逻辑调整）\r\n      assetStatus.value = ['reserved'];\r\n      break;\r\n    case 'scrapped':\r\n      // 显示报废设备\r\n      assetStatus.value = ['scrapped'];\r\n      break;\r\n    case 'warranty':\r\n      // 显示保修中的设备（这里可以根据实际业务逻辑调整）\r\n      // 可以添加特定的过滤逻辑\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  \r\n  // 更新当前过滤器状态\r\n  currentFilter.value = filterType;\r\n  \r\n  // 重新加载数据\r\n  pagination.current = 1;\r\n  loadAssetList();\r\n};\r\n\r\n// 查看历史记录\r\nconst handleViewHistory = (record) => {\r\n  currentHistoryAsset.value = record;\r\n  historyModalVisible.value = true;\r\n  historyActiveTab.value = 'spec';\r\n  // 自动加载规格参数历史\r\n  loadSpecHistory();\r\n};\r\n\r\n// 加载规格参数更新历史\r\nconst loadSpecHistory = async () => {\r\n  if (!currentHistoryAsset.value) return;\r\n  \r\n  specHistoryLoading.value = true;\r\n  try {\r\n    const response = await hardwareAssetApi.getSpecHistory(currentHistoryAsset.value.id);\r\n    if (response.data && response.data.code === 200) {\r\n      specHistory.value = response.data.data || [];\r\n    } else {\r\n      message.error('加载规格参数历史失败');\r\n      specHistory.value = [];\r\n    }\r\n  } catch (error) {\r\n    console.error('加载规格参数历史失败:', error);\r\n    message.error('加载规格参数历史失败');\r\n    specHistory.value = [];\r\n  } finally {\r\n    specHistoryLoading.value = false;\r\n  }\r\n};\r\n\r\n// 加载保修更新历史\r\nconst loadWarrantyHistory = async () => {\r\n  if (!currentHistoryAsset.value) return;\r\n  \r\n  warrantyHistoryLoading.value = true;\r\n  try {\r\n    const response = await hardwareAssetApi.getWarrantyHistory(currentHistoryAsset.value.id);\r\n    if (response.data && response.data.code === 200) {\r\n      warrantyHistory.value = response.data.data || [];\r\n    } else {\r\n      message.error('加载保修历史失败');\r\n      warrantyHistory.value = [];\r\n    }\r\n  } catch (error) {\r\n    console.error('加载保修历史失败:', error);\r\n    message.error('加载保修历史失败');\r\n    warrantyHistory.value = [];\r\n  } finally {\r\n    warrantyHistoryLoading.value = false;\r\n  }\r\n};\r\n\r\n// 历史记录标签页切换\r\nconst handleHistoryTabChange = (activeKey) => {\r\n  historyActiveTab.value = activeKey;\r\n  if (activeKey === 'warranty' && warrantyHistory.value.length === 0) {\r\n    loadWarrantyHistory();\r\n  }\r\n};\r\n\r\n// 关闭历史记录弹窗\r\nconst handleHistoryModalClose = () => {\r\n  historyModalVisible.value = false;\r\n  currentHistoryAsset.value = null;\r\n  specHistory.value = [];\r\n  warrantyHistory.value = [];\r\n  historyActiveTab.value = 'spec';\r\n};\r\n\r\nconst handleTableChange = async (paginationInfo, filters, sorter) => {\r\n  console.log('handleTableChange 被调用:', {\r\n    paginationInfo, \r\n    当前分页状态: {\r\n      current: pagination.current,\r\n      pageSize: pagination.pageSize\r\n    }\r\n  });\r\n  \r\n  pagination.current = paginationInfo.current;\r\n  pagination.pageSize = paginationInfo.pageSize;\r\n  \r\n  console.log('更新后的分页状态:', {\r\n    current: pagination.current,\r\n    pageSize: pagination.pageSize\r\n  });\r\n  \r\n  // 更新 URL 参数\r\n  const currentUrl = new URL(window.location);\r\n  currentUrl.searchParams.set('page', pagination.current.toString());\r\n  currentUrl.searchParams.set('page_size', pagination.pageSize.toString());\r\n  window.history.replaceState({}, '', currentUrl.toString());\r\n  console.log('已更新 URL:', currentUrl.toString());\r\n  \r\n  await loadAssetList();\r\n};\r\n\r\n// 在用设备表格变化处理\r\nconst handleActiveTableChange = async (paginationInfo, filters, sorter) => {\r\n  activePagination.current = paginationInfo.current;\r\n  activePagination.pageSize = paginationInfo.pageSize;\r\n  // 更新查询参数\r\n  pagination.current = paginationInfo.current;\r\n  pagination.pageSize = paginationInfo.pageSize;\r\n  await loadAssetList();\r\n};\r\n\r\nconst handleView = (record) => {\r\n  selectedAsset.value = record;\r\n  detailModalVisible.value = true;\r\n};\r\n\r\nconst handleEdit = (record) => {\r\n  // 检查资产是否受保护\r\n  if (record.is_protected || record.is_auto_discovered) {\r\n    message.warning({\r\n      content: `不能编辑此硬件资产：${record.asset_name || record.asset_tag}\\n原因：${record.protection_reason || '自动发现的硬件资产不允许编辑'}\\n可编辑字段：${Array.isArray(record.editable_fields) ? record.editable_fields.join(', ') : '备注、状态'}`,\r\n      duration: 5\r\n    });\r\n    return;\r\n  }\r\n  \r\n  editingAsset.value = record;\r\n  Object.assign(formData, record);\r\n  editModalVisible.value = true;\r\n};\r\n\r\nconst handleDelete = async (record) => {\r\n  try {\r\n    Modal.confirm({\r\n      title: '确认删除硬件资产',\r\n      content: `确定要删除硬件资产 \"${record.asset_name || record.asset_tag}\" 吗？\\n\\n警告：此操作将删除资产记录及所有相关数据（包括保修记录、监控数据等），该操作不可恢复！`,\r\n      okText: '确认删除',\r\n      okType: 'danger',\r\n      cancelText: '取消',\r\n      onOk: async () => {\r\n        const deleteMessage = message.loading('正在删除硬件资产及相关数据...', 0);\r\n        \r\n        try {\r\n          const response = await hardwareAssetApi.deleteAsset(record.id);\r\n          deleteMessage();\r\n          \r\n          if (response.data && response.data.code === 200) {\r\n            const cleanupData = response.data.data;\r\n            \r\n            let successMessage = `硬件资产 \"${cleanupData.asset_name || cleanupData.asset_tag}\" 已成功删除`;\r\n            \r\n            const cleanupDetails = [];\r\n            if (cleanupData.warranty_records_deleted > 0) {\r\n              cleanupDetails.push(`保修记录: ${cleanupData.warranty_records_deleted}条`);\r\n            }\r\n            if (cleanupData.monitoring_cleanup && cleanupData.monitoring_cleanup.success) {\r\n              cleanupDetails.push('监控数据: 已清理');\r\n            }\r\n            \r\n            if (cleanupDetails.length > 0) {\r\n              successMessage += `\\n同时清理了：${cleanupDetails.join('、')}`;\r\n            }\r\n            \r\n            message.success({\r\n              content: successMessage,\r\n              duration: 6\r\n            });\r\n            \r\n            // 直接从列表中移除已删除的资产\r\n            assetData.value = assetData.value.filter(asset => asset.id !== record.id);\r\n            pagination.total = assetData.value.length;\r\n          } else {\r\n            message.error('删除硬件资产失败');\r\n          }\r\n        } catch (deleteError) {\r\n          deleteMessage();\r\n          throw deleteError;\r\n        }\r\n      }\r\n    });\r\n  } catch (error) {\r\n    if (error.message !== 'User cancelled') {\r\n      console.error('删除硬件资产失败:', error);\r\n      message.error(`删除硬件资产失败: ${error.response?.data?.message || error.message}`);\r\n    }\r\n  }\r\n};\r\n\r\nconst handleCheckWarranty = async (record) => {\r\n  record.warrantyChecking = true;\r\n  try {\r\n    const response = await hardwareAssetApi.checkWarranty(record.id);\r\n    \r\n    if (response.data && response.data.code === 200) {\r\n      const warrantyData = response.data.data;\r\n      // 更新记录的保修状态\r\n      record.warranty_status = warrantyData.status;\r\n      record.warranty_end_date = warrantyData.warranty_end_date;\r\n      record.updated_at = new Date().toISOString();\r\n      \r\n      const statusText = warrantyData.is_valid ? '有效' : '已过期';\r\n      const endDateText = warrantyData.warranty_end_date ? ` (到期日: ${warrantyData.warranty_end_date})` : '';\r\n      \r\n      message.success(`保修检查 ${record.asset_name || record.asset_tag} 完成: ${statusText}${endDateText}`, 1);\r\n    } else {\r\n      message.error(`保修检查失败: ${response.data?.message || '未知错误'}`);\r\n    }\r\n  } catch (error) {\r\n    console.error('保修检查失败:', error);\r\n    let errorMessage = '保修检查失败';\r\n    if (error.response && error.response.data) {\r\n      errorMessage += `: ${error.response.data.message || error.response.data.error || '网络错误'}`;\r\n    } else if (error.message) {\r\n      errorMessage += `: ${error.message}`;\r\n    }\r\n    message.error(errorMessage);\r\n  } finally {\r\n    record.warrantyChecking = false;\r\n  }\r\n};\r\n\r\nconst handleExport = () => {\r\n  message.info('导出功能开发中...');\r\n};\r\n\r\nconst handleImport = () => {\r\n  message.info('导入功能开发中...');\r\n};\r\n\r\n// 处理新增设备\r\nconst handleAdd = () => {\r\n  formDialogVisible.value = true;\r\n};\r\n\r\n// 处理表单提交\r\nconst handleSubmit = async (formData) => {\r\n  try {\r\n    const response = await hardwareAssetApi.createAsset(formData);\r\n    \r\n    if (response.data && response.data.code === 200) {\r\n      message.success('硬件资产创建成功');\r\n      formDialogVisible.value = false;\r\n      // 刷新列表\r\n      await loadAssetList();\r\n    } else {\r\n      message.error(`创建失败: ${response.data?.message || '未知错误'}`);\r\n    }\r\n  } catch (error) {\r\n    console.error('创建硬件资产失败:', error);\r\n    message.error(`创建失败: ${error.message}`);\r\n  }\r\n};\r\n\r\nconst handleWarrantyCancel = () => {\r\n  warrantyModalVisible.value = false;\r\n};\r\n\r\nconst handleWarrantyConfirm = () => {\r\n  message.info('保修配置功能开发中...');\r\n  warrantyModalVisible.value = false;\r\n};\r\n\r\n// 生命周期钩子\r\nonMounted(async () => {\r\n  try {\r\n    // 抑制ResizeObserver错误\r\n    suppressResizeObserverError();\r\n    \r\n    // 从URL参数恢复分页状态\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const page = urlParams.get('page');\r\n    const pageSize = urlParams.get('page_size');\r\n    \r\n    if (page && !isNaN(parseInt(page))) {\r\n      pagination.current = parseInt(page);\r\n    }\r\n    if (pageSize && !isNaN(parseInt(pageSize))) {\r\n      pagination.pageSize = parseInt(pageSize);\r\n    }\r\n    \r\n    console.log('从URL恢复分页状态:', {\r\n      current: pagination.current,\r\n      pageSize: pagination.pageSize\r\n    });\r\n    \r\n    // 加载硬件资产列表\r\n    await loadAssetList();\r\n  } catch (error) {\r\n    console.error('初始化硬件资产列表失败:', error);\r\n    message.error('初始化硬件资产列表失败');\r\n  }\r\n});\r\n\r\n// 清理函数\r\nonBeforeUnmount(() => {\r\n  // 清理定时器或其他资源\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.hardware-asset-list-container {\r\n  min-height: 100vh;\r\n}\r\n\r\n.ant-table-wrapper {\r\n  background: white;\r\n  border-radius: 6px;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.search-form {\r\n  background: white;\r\n  padding: 24px;\r\n  border-radius: 6px;\r\n  margin-bottom: 16px;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.batch-actions {\r\n  margin-bottom: 16px;\r\n}\r\n\r\n.statistics-cards {\r\n  display: flex;\r\n  gap: 16px;\r\n  margin-bottom: 16px;\r\n}\r\n\r\n.stat-card {\r\n  flex: 1;\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 6px;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n  text-align: center;\r\n}\r\n\r\n.stat-number {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  color: #1890ff;\r\n}\r\n\r\n.stat-label {\r\n  color: #666;\r\n  margin-top: 8px;\r\n}\r\n\r\n/* 标签页样式 */\r\n.device-tabs {\r\n  background: white;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n  overflow: hidden;\r\n  border: 1px solid #f0f0f0;\r\n}\r\n\r\n\r\n\r\n.device-content {\r\n  border-radius: 12px;\r\n  overflow: hidden;\r\n}\r\n\r\n.device-tabs :deep(.ant-tabs-content-holder) {\r\n  padding: 16px;\r\n  background: white;\r\n}\r\n\r\n.device-tabs :deep(.ant-tabs-tabpane) {\r\n  padding: 0;\r\n}\r\n\r\n.device-tabs .ant-table-wrapper {\r\n  border-radius: 8px;\r\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.1);\r\n  border: 1px solid #f0f0f0;\r\n}\r\n\r\n.device-tabs .ant-table {\r\n  border-radius: 8px;\r\n}\r\n\r\n.device-tabs .ant-table-thead > tr > th {\r\n  background: #fafafa;\r\n  border-bottom: 2px solid #f0f0f0;\r\n  font-weight: 600;\r\n}\r\n\r\n/* 历史记录弹窗样式 */\r\n.history-section {\r\n  padding: 16px 0;\r\n}\r\n\r\n.history-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 16px;\r\n  padding-bottom: 12px;\r\n  border-bottom: 1px solid #f0f0f0;\r\n}\r\n\r\n.history-header h4 {\r\n  margin: 0;\r\n  color: #333;\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}