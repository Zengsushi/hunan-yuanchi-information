{"ast":null,"code":"import { ref, computed, onMounted } from 'vue';\nimport { message } from 'ant-design-vue';\nimport { CloudDownloadOutlined, DownloadOutlined, ReloadOutlined, DatabaseOutlined, FileOutlined, FolderOutlined, SettingOutlined, CheckCircleOutlined, CloseCircleOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons-vue';\n\n// 响应式数据\n\nexport default {\n  __name: 'AdminBackup',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const loading = ref(false);\n    const createBackupModalVisible = ref(false);\n    const detailModalVisible = ref(false);\n    const searchText = ref('');\n    const statusFilter = ref('');\n    const activeCategory = ref('all');\n    const selectedRowKeys = ref([]);\n    const selectedBackup = ref(null);\n\n    // 表单数据\n    const backupFormRef = ref();\n    const backupFormData = ref({\n      name: '',\n      type: 'full',\n      scope: ['database', 'config'],\n      description: '',\n      compression: true\n    });\n\n    // 备份数据\n    const backups = ref([]);\n    const backupStats = ref({\n      total: 0,\n      today: 0,\n      totalSize: '0 MB'\n    });\n\n    // 分类列表\n    const categoryList = ref([{\n      key: 'all',\n      name: '全部备份',\n      icon: 'FolderOutlined',\n      count: 0\n    }, {\n      key: 'full',\n      name: '完整备份',\n      icon: 'DatabaseOutlined',\n      count: 0\n    }, {\n      key: 'incremental',\n      name: '增量备份',\n      icon: 'FileOutlined',\n      count: 0\n    }, {\n      key: 'differential',\n      name: '差异备份',\n      icon: 'SettingOutlined',\n      count: 0\n    }, {\n      key: 'success',\n      name: '成功备份',\n      icon: 'CheckCircleOutlined',\n      count: 0\n    }, {\n      key: 'failed',\n      name: '失败备份',\n      icon: 'CloseCircleOutlined',\n      count: 0\n    }]);\n\n    // 表格列配置\n    const tableColumns = [{\n      title: '备份名称',\n      dataIndex: 'name',\n      key: 'name',\n      sorter: true\n    }, {\n      title: '备份类型',\n      key: 'type',\n      width: 100\n    }, {\n      title: '文件大小',\n      key: 'size',\n      width: 100,\n      sorter: true\n    }, {\n      title: '状态',\n      key: 'status',\n      width: 100\n    }, {\n      title: '创建时间',\n      dataIndex: 'createdAt',\n      key: 'createdAt',\n      width: 180,\n      sorter: true\n    }, {\n      title: '完成时间',\n      dataIndex: 'completedAt',\n      key: 'completedAt',\n      width: 180\n    }, {\n      title: '操作',\n      key: 'actions',\n      width: 200,\n      fixed: 'right'\n    }];\n\n    // 分页配置\n    const pagination = ref({\n      current: 1,\n      pageSize: 10,\n      total: 0,\n      showSizeChanger: true,\n      showQuickJumper: true,\n      showTotal: (total, range) => `第 ${range[0]}-${range[1]} 条/共 ${total} 条`\n    });\n\n    // 行选择配置\n    const rowSelection = {\n      selectedRowKeys,\n      onChange: keys => {\n        selectedRowKeys.value = keys;\n      }\n    };\n\n    // 表单验证规则\n    const backupFormRules = {\n      name: [{\n        required: true,\n        message: '请输入备份名称',\n        trigger: 'blur'\n      }, {\n        min: 2,\n        max: 50,\n        message: '备份名称长度在2-50个字符',\n        trigger: 'blur'\n      }],\n      type: [{\n        required: true,\n        message: '请选择备份类型',\n        trigger: 'change'\n      }],\n      scope: [{\n        required: true,\n        message: '请选择备份范围',\n        trigger: 'change'\n      }]\n    };\n\n    // 计算属性\n    const filteredBackups = computed(() => {\n      let result = backups.value;\n      if (activeCategory.value !== 'all') {\n        if (['success', 'failed', 'running'].includes(activeCategory.value)) {\n          result = result.filter(backup => backup.status === activeCategory.value);\n        } else {\n          result = result.filter(backup => backup.type === activeCategory.value);\n        }\n      }\n      if (statusFilter.value) {\n        result = result.filter(backup => backup.status === statusFilter.value);\n      }\n      if (searchText.value) {\n        const searchLower = searchText.value.toLowerCase();\n        result = result.filter(backup => backup.name?.toLowerCase().includes(searchLower) || backup.description?.toLowerCase().includes(searchLower));\n      }\n      return result;\n    });\n\n    // 获取当前分类名称\n    const getCurrentCategoryName = () => {\n      const category = categoryList.value.find(cat => cat.key === activeCategory.value);\n      return category ? category.name : '全部备份';\n    };\n\n    // 获取类型颜色和文本\n    const getTypeColor = type => {\n      const colors = {\n        full: 'blue',\n        incremental: 'green',\n        differential: 'orange'\n      };\n      return colors[type] || 'default';\n    };\n    const getTypeText = type => {\n      const texts = {\n        full: '完整备份',\n        incremental: '增量备份',\n        differential: '差异备份'\n      };\n      return texts[type] || type;\n    };\n\n    // 获取状态颜色、图标和文本\n    const getStatusColor = status => {\n      const colors = {\n        success: 'green',\n        failed: 'red',\n        running: 'blue'\n      };\n      return colors[status] || 'default';\n    };\n    const getStatusIcon = status => {\n      const icons = {\n        success: 'CheckCircleOutlined',\n        failed: 'CloseCircleOutlined',\n        running: 'LoadingOutlined'\n      };\n      return icons[status] || 'CheckCircleOutlined';\n    };\n    const getStatusText = status => {\n      const texts = {\n        success: '成功',\n        failed: '失败',\n        running: '进行中'\n      };\n      return texts[status] || status;\n    };\n\n    // 获取范围文本\n    const getScopeText = scope => {\n      const texts = {\n        database: '数据库',\n        config: '配置文件',\n        logs: '日志文件',\n        uploads: '上传文件',\n        assets: '静态资源',\n        cache: '缓存数据'\n      };\n      return texts[scope] || scope;\n    };\n\n    // 格式化文件大小\n    const formatFileSize = bytes => {\n      if (!bytes) return '0 B';\n      const k = 1024;\n      const sizes = ['B', 'KB', 'MB', 'GB', 'TB'];\n      const i = Math.floor(Math.log(bytes) / Math.log(k));\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n    };\n\n    // 更新统计数据\n    const updateStats = () => {\n      const today = new Date().toISOString().split('T')[0];\n      const todayBackups = backups.value.filter(backup => backup.createdAt.startsWith(today)).length;\n      const totalSize = backups.value.reduce((sum, backup) => sum + (backup.size || 0), 0);\n      backupStats.value = {\n        total: backups.value.length,\n        today: todayBackups,\n        totalSize: formatFileSize(totalSize)\n      };\n\n      // 更新分类计数\n      categoryList.value.forEach(category => {\n        switch (category.key) {\n          case 'all':\n            category.count = backups.value.length;\n            break;\n          case 'full':\n          case 'incremental':\n          case 'differential':\n            category.count = backups.value.filter(backup => backup.type === category.key).length;\n            break;\n          case 'success':\n          case 'failed':\n            category.count = backups.value.filter(backup => backup.status === category.key).length;\n            break;\n        }\n      });\n    };\n\n    // 生成模拟数据\n    const generateMockBackups = () => {\n      return [{\n        id: 1,\n        name: '完整系统备份_20240120',\n        type: 'full',\n        status: 'success',\n        size: 1073741824,\n        // 1GB\n        scope: ['database', 'config', 'uploads'],\n        description: '定期完整系统备份',\n        filePath: '/backups/full_backup_20240120.tar.gz',\n        createdAt: '2024-01-20 02:00:00',\n        completedAt: '2024-01-20 02:45:30'\n      }, {\n        id: 2,\n        name: '数据库增量备份_20240121',\n        type: 'incremental',\n        status: 'success',\n        size: 52428800,\n        // 50MB\n        scope: ['database'],\n        description: '每日数据库增量备份',\n        filePath: '/backups/incremental_db_20240121.tar.gz',\n        createdAt: '2024-01-21 02:00:00',\n        completedAt: '2024-01-21 02:05:15'\n      }, {\n        id: 3,\n        name: '配置文件备份_20240121',\n        type: 'differential',\n        status: 'failed',\n        size: 0,\n        scope: ['config'],\n        description: '系统配置文件差异备份',\n        filePath: '/backups/config_diff_20240121.tar.gz',\n        createdAt: '2024-01-21 03:00:00',\n        completedAt: null\n      }, {\n        id: 4,\n        name: '应急备份_20240121',\n        type: 'full',\n        status: 'running',\n        size: 0,\n        scope: ['database', 'config', 'logs'],\n        description: '系统维护前的应急备份',\n        filePath: '/backups/emergency_20240121.tar.gz',\n        createdAt: '2024-01-21 10:30:00',\n        completedAt: null\n      }];\n    };\n\n    // 获取备份列表\n    const fetchBackups = async () => {\n      try {\n        loading.value = true;\n        backups.value = generateMockBackups();\n        updateStats();\n        message.warning('数据加载失败，显示模拟数据');\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 分类切换\n    const handleCategoryChange = key => {\n      activeCategory.value = key;\n      selectedRowKeys.value = [];\n    };\n\n    // 搜索和筛选\n    const handleSearch = () => {\n      selectedRowKeys.value = [];\n    };\n    const handleStatusFilter = () => {\n      selectedRowKeys.value = [];\n    };\n\n    // 刷新数据\n    const refreshData = () => {\n      fetchBackups();\n      message.success('数据刷新成功');\n    };\n\n    // 显示创建备份弹窗\n    const showCreateBackupModal = () => {\n      const now = new Date();\n      const timestamp = now.toISOString().replace(/[:.]/g, '-').slice(0, 19);\n      backupFormData.value = {\n        name: `系统备份_${timestamp}`,\n        type: 'full',\n        scope: ['database', 'config'],\n        description: '',\n        compression: true\n      };\n      createBackupModalVisible.value = true;\n    };\n\n    // 创建备份\n    const handleCreateBackup = async () => {\n      try {\n        await backupFormRef.value.validate();\n        loading.value = true;\n        const newBackup = {\n          id: Date.now(),\n          ...backupFormData.value,\n          status: 'running',\n          size: 0,\n          filePath: `/backups/${backupFormData.value.name.toLowerCase().replace(/\\s+/g, '_')}.tar.gz`,\n          createdAt: new Date().toLocaleString('zh-CN'),\n          completedAt: null\n        };\n        backups.value.unshift(newBackup);\n        updateStats();\n        createBackupModalVisible.value = false;\n        message.success('备份任务已启动');\n\n        // 模拟备份完成\n        setTimeout(() => {\n          const backup = backups.value.find(b => b.id === newBackup.id);\n          if (backup) {\n            backup.status = 'success';\n            backup.size = Math.floor(Math.random() * 1073741824) + 52428800; // 50MB - 1GB\n            backup.completedAt = new Date().toLocaleString('zh-CN');\n            updateStats();\n            message.success('备份完成');\n          }\n        }, 3000);\n      } catch (error) {\n        message.error('创建备份失败，请重试');\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 取消创建备份\n    const handleCreateBackupCancel = () => {\n      createBackupModalVisible.value = false;\n      backupFormRef.value?.resetFields();\n    };\n\n    // 查看备份详情\n    const viewBackupDetail = record => {\n      selectedBackup.value = record;\n      detailModalVisible.value = true;\n    };\n\n    // 下载单个备份\n    const downloadSingleBackup = record => {\n      message.success(`开始下载备份：${record.name}`);\n    };\n\n    // 批量下载\n    const batchDownload = () => {\n      message.success(`开始批量下载 ${selectedRowKeys.value.length} 个备份`);\n      selectedRowKeys.value = [];\n    };\n\n    // 下载备份\n    const downloadBackup = () => {\n      message.success('开始下载最新备份');\n    };\n\n    // 恢复备份\n    const restoreBackup = record => {\n      message.warning(`恢复备份功能需要谨慎操作：${record.name}`);\n    };\n\n    // 删除备份\n    const deleteBackup = async record => {\n      try {\n        loading.value = true;\n        const index = backups.value.findIndex(backup => backup.id === record.id);\n        if (index !== -1) {\n          backups.value.splice(index, 1);\n        }\n        updateStats();\n        message.success('备份删除成功');\n      } catch (error) {\n        message.error('删除失败，请重试');\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 批量删除\n    const batchDelete = () => {\n      backups.value = backups.value.filter(backup => !selectedRowKeys.value.includes(backup.id));\n      updateStats();\n      selectedRowKeys.value = [];\n      message.success('批量删除成功');\n    };\n\n    // 组件挂载\n    onMounted(() => {\n      fetchBackups();\n    });\n    const __returned__ = {\n      loading,\n      createBackupModalVisible,\n      detailModalVisible,\n      searchText,\n      statusFilter,\n      activeCategory,\n      selectedRowKeys,\n      selectedBackup,\n      backupFormRef,\n      backupFormData,\n      backups,\n      backupStats,\n      categoryList,\n      tableColumns,\n      pagination,\n      rowSelection,\n      backupFormRules,\n      filteredBackups,\n      getCurrentCategoryName,\n      getTypeColor,\n      getTypeText,\n      getStatusColor,\n      getStatusIcon,\n      getStatusText,\n      getScopeText,\n      formatFileSize,\n      updateStats,\n      generateMockBackups,\n      fetchBackups,\n      handleCategoryChange,\n      handleSearch,\n      handleStatusFilter,\n      refreshData,\n      showCreateBackupModal,\n      handleCreateBackup,\n      handleCreateBackupCancel,\n      viewBackupDetail,\n      downloadSingleBackup,\n      batchDownload,\n      downloadBackup,\n      restoreBackup,\n      deleteBackup,\n      batchDelete,\n      ref,\n      computed,\n      onMounted,\n      get message() {\n        return message;\n      },\n      get CloudDownloadOutlined() {\n        return CloudDownloadOutlined;\n      },\n      get DownloadOutlined() {\n        return DownloadOutlined;\n      },\n      get ReloadOutlined() {\n        return ReloadOutlined;\n      },\n      get DatabaseOutlined() {\n        return DatabaseOutlined;\n      },\n      get FileOutlined() {\n        return FileOutlined;\n      },\n      get FolderOutlined() {\n        return FolderOutlined;\n      },\n      get SettingOutlined() {\n        return SettingOutlined;\n      },\n      get CheckCircleOutlined() {\n        return CheckCircleOutlined;\n      },\n      get CloseCircleOutlined() {\n        return CloseCircleOutlined;\n      },\n      get LoadingOutlined() {\n        return LoadingOutlined;\n      },\n      get PlusOutlined() {\n        return PlusOutlined;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","message","CloudDownloadOutlined","DownloadOutlined","ReloadOutlined","DatabaseOutlined","FileOutlined","FolderOutlined","SettingOutlined","CheckCircleOutlined","CloseCircleOutlined","LoadingOutlined","PlusOutlined","loading","createBackupModalVisible","detailModalVisible","searchText","statusFilter","activeCategory","selectedRowKeys","selectedBackup","backupFormRef","backupFormData","name","type","scope","description","compression","backups","backupStats","total","today","totalSize","categoryList","key","icon","count","tableColumns","title","dataIndex","sorter","width","fixed","pagination","current","pageSize","showSizeChanger","showQuickJumper","showTotal","range","rowSelection","onChange","keys","value","backupFormRules","required","trigger","min","max","filteredBackups","result","includes","filter","backup","status","searchLower","toLowerCase","getCurrentCategoryName","category","find","cat","getTypeColor","colors","full","incremental","differential","getTypeText","texts","getStatusColor","success","failed","running","getStatusIcon","icons","getStatusText","getScopeText","database","config","logs","uploads","assets","cache","formatFileSize","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","updateStats","Date","toISOString","split","todayBackups","createdAt","startsWith","length","reduce","sum","size","forEach","generateMockBackups","id","filePath","completedAt","fetchBackups","warning","handleCategoryChange","handleSearch","handleStatusFilter","refreshData","showCreateBackupModal","now","timestamp","replace","slice","handleCreateBackup","validate","newBackup","toLocaleString","unshift","setTimeout","b","random","error","handleCreateBackupCancel","resetFields","viewBackupDetail","record","downloadSingleBackup","batchDownload","downloadBackup","restoreBackup","deleteBackup","index","findIndex","splice","batchDelete"],"sources":["E:/A_project/yuanchi/AIops/frontend/src/views/admin/AdminBackup.vue"],"sourcesContent":["<template>\r\n  <div class=\"admin-backup admin-page\">\r\n    <!-- 页面标题区域 -->\r\n    <div class=\"page-header\">\r\n      <div class=\"header-content\">\r\n        <h1 class=\"page-title\">\r\n          <CloudDownloadOutlined />\r\n          数据备份\r\n        </h1>\r\n        <p class=\"page-description\">管理系统数据备份和恢复操作</p>\r\n      </div>\r\n      <div class=\"header-actions\">\r\n        <a-space>\r\n          <a-button @click=\"downloadBackup\">\r\n            <DownloadOutlined />\r\n            下载备份\r\n          </a-button>\r\n          <a-button type=\"primary\" @click=\"showCreateBackupModal\">\r\n            <CloudDownloadOutlined />\r\n            创建备份\r\n          </a-button>\r\n        </a-space>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 备份管理布局 -->\r\n    <div class=\"backup-layout admin-layout\">\r\n      <!-- 左侧菜单 -->\r\n      <div class=\"backup-menu admin-menu\">\r\n        <div class=\"menu-title\">备份类型</div>\r\n        <div class=\"menu-list\">\r\n          <div \r\n            v-for=\"category in categoryList\" \r\n            :key=\"category.key\"\r\n            :class=\"['menu-item', { 'active': activeCategory === category.key }]\"\r\n            @click=\"handleCategoryChange(category.key)\"\r\n          >\r\n            <component :is=\"category.icon\" class=\"menu-icon\" />\r\n            <span class=\"menu-text\">{{ category.name }}</span>\r\n            <a-badge \r\n              v-if=\"category.count\" \r\n              :count=\"category.count\" \r\n              class=\"menu-badge\"\r\n            />\r\n          </div>\r\n        </div>\r\n        \r\n        <!-- 备份统计 -->\r\n        <div class=\"menu-stats\">\r\n          <div class=\"stats-title\">备份统计</div>\r\n          <div class=\"stats-list\">\r\n            <div class=\"stat-item\">\r\n              <span class=\"stat-label\">总备份数</span>\r\n              <span class=\"stat-value\">{{ backupStats.total }}</span>\r\n            </div>\r\n            <div class=\"stat-item\">\r\n              <span class=\"stat-label\">今日备份</span>\r\n              <span class=\"stat-value\">{{ backupStats.today }}</span>\r\n            </div>\r\n            <div class=\"stat-item\">\r\n              <span class=\"stat-label\">存储大小</span>\r\n              <span class=\"stat-value\">{{ backupStats.totalSize }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 右侧内容 -->\r\n      <div class=\"backup-content admin-content\">\r\n        <a-card>\r\n          <template #title>\r\n            {{ getCurrentCategoryName() }}\r\n          </template>\r\n          <template #extra>\r\n            <a-space>\r\n              <a-input-search\r\n                v-model:value=\"searchText\"\r\n                placeholder=\"搜索备份...\"\r\n                style=\"width: 200px\"\r\n                @search=\"handleSearch\"\r\n                @change=\"handleSearch\"\r\n              />\r\n              <a-select\r\n                v-model:value=\"statusFilter\"\r\n                placeholder=\"状态筛选\"\r\n                style=\"width: 120px\"\r\n                @change=\"handleStatusFilter\"\r\n              >\r\n                <a-select-option value=\"\">全部状态</a-select-option>\r\n                <a-select-option value=\"success\">成功</a-select-option>\r\n                <a-select-option value=\"failed\">失败</a-select-option>\r\n                <a-select-option value=\"running\">进行中</a-select-option>\r\n              </a-select>\r\n              <a-button @click=\"refreshData\">\r\n                <ReloadOutlined />\r\n              </a-button>\r\n            </a-space>\r\n          </template>\r\n\r\n          <a-table\r\n            :columns=\"tableColumns\"\r\n            :data-source=\"filteredBackups\"\r\n            :pagination=\"pagination\"\r\n            :loading=\"loading\"\r\n            :row-selection=\"rowSelection\"\r\n            row-key=\"id\"\r\n            size=\"middle\"\r\n          >\r\n            <template #bodyCell=\"{ column, record }\">\r\n              <template v-if=\"column.key === 'type'\">\r\n                <a-tag :color=\"getTypeColor(record.type)\">\r\n                  {{ getTypeText(record.type) }}\r\n                </a-tag>\r\n              </template>\r\n              <template v-else-if=\"column.key === 'status'\">\r\n                <a-tag :color=\"getStatusColor(record.status)\">\r\n                  <component :is=\"getStatusIcon(record.status)\" />\r\n                  {{ getStatusText(record.status) }}\r\n                </a-tag>\r\n              </template>\r\n              <template v-else-if=\"column.key === 'size'\">\r\n                <span>{{ formatFileSize(record.size) }}</span>\r\n              </template>\r\n              <template v-else-if=\"column.key === 'actions'\">\r\n                <a-space>\r\n                  <a-button \r\n                    type=\"link\" \r\n                    size=\"small\" \r\n                    @click=\"downloadSingleBackup(record)\"\r\n                    :disabled=\"record.status !== 'success'\"\r\n                  >\r\n                    下载\r\n                  </a-button>\r\n                  <a-button \r\n                    type=\"link\" \r\n                    size=\"small\" \r\n                    @click=\"restoreBackup(record)\"\r\n                    :disabled=\"record.status !== 'success'\"\r\n                  >\r\n                    恢复\r\n                  </a-button>\r\n                  <a-button type=\"link\" size=\"small\" @click=\"viewBackupDetail(record)\">\r\n                    详情\r\n                  </a-button>\r\n                  <a-popconfirm\r\n                    title=\"确定要删除这个备份吗？\"\r\n                    @confirm=\"deleteBackup(record)\"\r\n                  >\r\n                    <a-button type=\"link\" size=\"small\" danger>\r\n                      删除\r\n                    </a-button>\r\n                  </a-popconfirm>\r\n                </a-space>\r\n              </template>\r\n            </template>\r\n          </a-table>\r\n\r\n          <!-- 批量操作 -->\r\n          <div v-if=\"selectedRowKeys.length > 0\" class=\"batch-actions\">\r\n            <a-space>\r\n              <span>已选择 {{ selectedRowKeys.length }} 项</span>\r\n              <a-button @click=\"batchDownload\">批量下载</a-button>\r\n              <a-popconfirm\r\n                title=\"确定要删除选中的备份吗？\"\r\n                @confirm=\"batchDelete\"\r\n              >\r\n                <a-button danger>批量删除</a-button>\r\n              </a-popconfirm>\r\n            </a-space>\r\n          </div>\r\n        </a-card>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 创建备份弹窗 -->\r\n    <a-modal\r\n      v-model:open=\"createBackupModalVisible\"\r\n      title=\"创建数据备份\"\r\n      width=\"600px\"\r\n      @ok=\"handleCreateBackup\"\r\n      @cancel=\"handleCreateBackupCancel\"\r\n    >\r\n      <a-form\r\n        ref=\"backupFormRef\"\r\n        :model=\"backupFormData\"\r\n        :rules=\"backupFormRules\"\r\n        layout=\"vertical\"\r\n      >\r\n        <a-row :gutter=\"16\">\r\n          <a-col :span=\"12\">\r\n            <a-form-item label=\"备份名称\" name=\"name\">\r\n              <a-input v-model:value=\"backupFormData.name\" placeholder=\"输入备份名称\" />\r\n            </a-form-item>\r\n          </a-col>\r\n          <a-col :span=\"12\">\r\n            <a-form-item label=\"备份类型\" name=\"type\">\r\n              <a-select v-model:value=\"backupFormData.type\" placeholder=\"选择备份类型\">\r\n                <a-select-option value=\"full\">完整备份</a-select-option>\r\n                <a-select-option value=\"incremental\">增量备份</a-select-option>\r\n                <a-select-option value=\"differential\">差异备份</a-select-option>\r\n              </a-select>\r\n            </a-form-item>\r\n          </a-col>\r\n        </a-row>\r\n\r\n        <a-form-item label=\"备份范围\" name=\"scope\">\r\n          <a-checkbox-group v-model:value=\"backupFormData.scope\">\r\n            <a-row :gutter=\"[16, 16]\">\r\n              <a-col :span=\"8\">\r\n                <a-checkbox value=\"database\">数据库</a-checkbox>\r\n              </a-col>\r\n              <a-col :span=\"8\">\r\n                <a-checkbox value=\"config\">配置文件</a-checkbox>\r\n              </a-col>\r\n              <a-col :span=\"8\">\r\n                <a-checkbox value=\"logs\">日志文件</a-checkbox>\r\n              </a-col>\r\n              <a-col :span=\"8\">\r\n                <a-checkbox value=\"uploads\">上传文件</a-checkbox>\r\n              </a-col>\r\n              <a-col :span=\"8\">\r\n                <a-checkbox value=\"assets\">静态资源</a-checkbox>\r\n              </a-col>\r\n              <a-col :span=\"8\">\r\n                <a-checkbox value=\"cache\">缓存数据</a-checkbox>\r\n              </a-col>\r\n            </a-row>\r\n          </a-checkbox-group>\r\n        </a-form-item>\r\n\r\n        <a-form-item label=\"备份描述\" name=\"description\">\r\n          <a-textarea \r\n            v-model:value=\"backupFormData.description\" \r\n            placeholder=\"输入备份描述\"\r\n            :rows=\"3\"\r\n          />\r\n        </a-form-item>\r\n\r\n        <a-form-item label=\"压缩选项\" name=\"compression\">\r\n          <a-switch v-model:checked=\"backupFormData.compression\" />\r\n          <span class=\"switch-description\">启用压缩以减少备份文件大小</span>\r\n        </a-form-item>\r\n      </a-form>\r\n    </a-modal>\r\n\r\n    <!-- 备份详情弹窗 -->\r\n    <a-modal\r\n      v-model:open=\"detailModalVisible\"\r\n      title=\"备份详情\"\r\n      width=\"800px\"\r\n      :footer=\"null\"\r\n    >\r\n      <a-descriptions\r\n        v-if=\"selectedBackup\"\r\n        :column=\"2\"\r\n        bordered\r\n        size=\"small\"\r\n      >\r\n        <a-descriptions-item label=\"备份名称\" :span=\"2\">\r\n          {{ selectedBackup.name }}\r\n        </a-descriptions-item>\r\n        <a-descriptions-item label=\"备份类型\">\r\n          <a-tag :color=\"getTypeColor(selectedBackup.type)\">\r\n            {{ getTypeText(selectedBackup.type) }}\r\n          </a-tag>\r\n        </a-descriptions-item>\r\n        <a-descriptions-item label=\"备份状态\">\r\n          <a-tag :color=\"getStatusColor(selectedBackup.status)\">\r\n            <component :is=\"getStatusIcon(selectedBackup.status)\" />\r\n            {{ getStatusText(selectedBackup.status) }}\r\n          </a-tag>\r\n        </a-descriptions-item>\r\n        <a-descriptions-item label=\"文件大小\">\r\n          {{ formatFileSize(selectedBackup.size) }}\r\n        </a-descriptions-item>\r\n        <a-descriptions-item label=\"创建时间\">\r\n          {{ selectedBackup.createdAt }}\r\n        </a-descriptions-item>\r\n        <a-descriptions-item label=\"完成时间\">\r\n          {{ selectedBackup.completedAt || '未完成' }}\r\n        </a-descriptions-item>\r\n        <a-descriptions-item label=\"备份路径\">\r\n          {{ selectedBackup.filePath }}\r\n        </a-descriptions-item>\r\n        <a-descriptions-item label=\"备份范围\" :span=\"2\">\r\n          <a-space>\r\n            <a-tag v-for=\"scope in selectedBackup.scope\" :key=\"scope\">\r\n              {{ getScopeText(scope) }}\r\n            </a-tag>\r\n          </a-space>\r\n        </a-descriptions-item>\r\n        <a-descriptions-item label=\"备份描述\" :span=\"2\">\r\n          {{ selectedBackup.description || '无描述' }}\r\n        </a-descriptions-item>\r\n      </a-descriptions>\r\n    </a-modal>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted } from 'vue';\r\nimport { message } from 'ant-design-vue';\r\nimport {\r\n  CloudDownloadOutlined,\r\n  DownloadOutlined,\r\n  ReloadOutlined,\r\n  DatabaseOutlined,\r\n  FileOutlined,\r\n  FolderOutlined,\r\n  SettingOutlined,\r\n  CheckCircleOutlined,\r\n  CloseCircleOutlined,\r\n  LoadingOutlined,\r\n  PlusOutlined\r\n} from '@ant-design/icons-vue';\r\n\r\n// 响应式数据\r\nconst loading = ref(false);\r\nconst createBackupModalVisible = ref(false);\r\nconst detailModalVisible = ref(false);\r\nconst searchText = ref('');\r\nconst statusFilter = ref('');\r\nconst activeCategory = ref('all');\r\nconst selectedRowKeys = ref([]);\r\nconst selectedBackup = ref(null);\r\n\r\n// 表单数据\r\nconst backupFormRef = ref();\r\nconst backupFormData = ref({\r\n  name: '',\r\n  type: 'full',\r\n  scope: ['database', 'config'],\r\n  description: '',\r\n  compression: true\r\n});\r\n\r\n// 备份数据\r\nconst backups = ref([]);\r\nconst backupStats = ref({\r\n  total: 0,\r\n  today: 0,\r\n  totalSize: '0 MB'\r\n});\r\n\r\n// 分类列表\r\nconst categoryList = ref([\r\n  { key: 'all', name: '全部备份', icon: 'FolderOutlined', count: 0 },\r\n  { key: 'full', name: '完整备份', icon: 'DatabaseOutlined', count: 0 },\r\n  { key: 'incremental', name: '增量备份', icon: 'FileOutlined', count: 0 },\r\n  { key: 'differential', name: '差异备份', icon: 'SettingOutlined', count: 0 },\r\n  { key: 'success', name: '成功备份', icon: 'CheckCircleOutlined', count: 0 },\r\n  { key: 'failed', name: '失败备份', icon: 'CloseCircleOutlined', count: 0 }\r\n]);\r\n\r\n// 表格列配置\r\nconst tableColumns = [\r\n  { title: '备份名称', dataIndex: 'name', key: 'name', sorter: true },\r\n  { title: '备份类型', key: 'type', width: 100 },\r\n  { title: '文件大小', key: 'size', width: 100, sorter: true },\r\n  { title: '状态', key: 'status', width: 100 },\r\n  { title: '创建时间', dataIndex: 'createdAt', key: 'createdAt', width: 180, sorter: true },\r\n  { title: '完成时间', dataIndex: 'completedAt', key: 'completedAt', width: 180 },\r\n  { title: '操作', key: 'actions', width: 200, fixed: 'right' }\r\n];\r\n\r\n// 分页配置\r\nconst pagination = ref({\r\n  current: 1,\r\n  pageSize: 10,\r\n  total: 0,\r\n  showSizeChanger: true,\r\n  showQuickJumper: true,\r\n  showTotal: (total, range) => `第 ${range[0]}-${range[1]} 条/共 ${total} 条`\r\n});\r\n\r\n// 行选择配置\r\nconst rowSelection = {\r\n  selectedRowKeys,\r\n  onChange: (keys) => { selectedRowKeys.value = keys; }\r\n};\r\n\r\n// 表单验证规则\r\nconst backupFormRules = {\r\n  name: [\r\n    { required: true, message: '请输入备份名称', trigger: 'blur' },\r\n    { min: 2, max: 50, message: '备份名称长度在2-50个字符', trigger: 'blur' }\r\n  ],\r\n  type: [{ required: true, message: '请选择备份类型', trigger: 'change' }],\r\n  scope: [{ required: true, message: '请选择备份范围', trigger: 'change' }]\r\n};\r\n\r\n// 计算属性\r\nconst filteredBackups = computed(() => {\r\n  let result = backups.value;\r\n  \r\n  if (activeCategory.value !== 'all') {\r\n    if (['success', 'failed', 'running'].includes(activeCategory.value)) {\r\n      result = result.filter(backup => backup.status === activeCategory.value);\r\n    } else {\r\n      result = result.filter(backup => backup.type === activeCategory.value);\r\n    }\r\n  }\r\n  \r\n  if (statusFilter.value) {\r\n    result = result.filter(backup => backup.status === statusFilter.value);\r\n  }\r\n  \r\n  if (searchText.value) {\r\n    const searchLower = searchText.value.toLowerCase();\r\n    result = result.filter(backup => \r\n      backup.name?.toLowerCase().includes(searchLower) ||\r\n      backup.description?.toLowerCase().includes(searchLower)\r\n    );\r\n  }\r\n  \r\n  return result;\r\n});\r\n\r\n// 获取当前分类名称\r\nconst getCurrentCategoryName = () => {\r\n  const category = categoryList.value.find(cat => cat.key === activeCategory.value);\r\n  return category ? category.name : '全部备份';\r\n};\r\n\r\n// 获取类型颜色和文本\r\nconst getTypeColor = (type) => {\r\n  const colors = { full: 'blue', incremental: 'green', differential: 'orange' };\r\n  return colors[type] || 'default';\r\n};\r\n\r\nconst getTypeText = (type) => {\r\n  const texts = { full: '完整备份', incremental: '增量备份', differential: '差异备份' };\r\n  return texts[type] || type;\r\n};\r\n\r\n// 获取状态颜色、图标和文本\r\nconst getStatusColor = (status) => {\r\n  const colors = { success: 'green', failed: 'red', running: 'blue' };\r\n  return colors[status] || 'default';\r\n};\r\n\r\nconst getStatusIcon = (status) => {\r\n  const icons = { success: 'CheckCircleOutlined', failed: 'CloseCircleOutlined', running: 'LoadingOutlined' };\r\n  return icons[status] || 'CheckCircleOutlined';\r\n};\r\n\r\nconst getStatusText = (status) => {\r\n  const texts = { success: '成功', failed: '失败', running: '进行中' };\r\n  return texts[status] || status;\r\n};\r\n\r\n// 获取范围文本\r\nconst getScopeText = (scope) => {\r\n  const texts = {\r\n    database: '数据库',\r\n    config: '配置文件',\r\n    logs: '日志文件',\r\n    uploads: '上传文件',\r\n    assets: '静态资源',\r\n    cache: '缓存数据'\r\n  };\r\n  return texts[scope] || scope;\r\n};\r\n\r\n// 格式化文件大小\r\nconst formatFileSize = (bytes) => {\r\n  if (!bytes) return '0 B';\r\n  const k = 1024;\r\n  const sizes = ['B', 'KB', 'MB', 'GB', 'TB'];\r\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n};\r\n\r\n// 更新统计数据\r\nconst updateStats = () => {\r\n  const today = new Date().toISOString().split('T')[0];\r\n  const todayBackups = backups.value.filter(backup => \r\n    backup.createdAt.startsWith(today)\r\n  ).length;\r\n  \r\n  const totalSize = backups.value.reduce((sum, backup) => sum + (backup.size || 0), 0);\r\n  \r\n  backupStats.value = {\r\n    total: backups.value.length,\r\n    today: todayBackups,\r\n    totalSize: formatFileSize(totalSize)\r\n  };\r\n  \r\n  // 更新分类计数\r\n  categoryList.value.forEach(category => {\r\n    switch (category.key) {\r\n      case 'all':\r\n        category.count = backups.value.length;\r\n        break;\r\n      case 'full':\r\n      case 'incremental':\r\n      case 'differential':\r\n        category.count = backups.value.filter(backup => backup.type === category.key).length;\r\n        break;\r\n      case 'success':\r\n      case 'failed':\r\n        category.count = backups.value.filter(backup => backup.status === category.key).length;\r\n        break;\r\n    }\r\n  });\r\n};\r\n\r\n// 生成模拟数据\r\nconst generateMockBackups = () => {\r\n  return [\r\n    {\r\n      id: 1,\r\n      name: '完整系统备份_20240120',\r\n      type: 'full',\r\n      status: 'success',\r\n      size: 1073741824, // 1GB\r\n      scope: ['database', 'config', 'uploads'],\r\n      description: '定期完整系统备份',\r\n      filePath: '/backups/full_backup_20240120.tar.gz',\r\n      createdAt: '2024-01-20 02:00:00',\r\n      completedAt: '2024-01-20 02:45:30'\r\n    },\r\n    {\r\n      id: 2,\r\n      name: '数据库增量备份_20240121',\r\n      type: 'incremental',\r\n      status: 'success',\r\n      size: 52428800, // 50MB\r\n      scope: ['database'],\r\n      description: '每日数据库增量备份',\r\n      filePath: '/backups/incremental_db_20240121.tar.gz',\r\n      createdAt: '2024-01-21 02:00:00',\r\n      completedAt: '2024-01-21 02:05:15'\r\n    },\r\n    {\r\n      id: 3,\r\n      name: '配置文件备份_20240121',\r\n      type: 'differential',\r\n      status: 'failed',\r\n      size: 0,\r\n      scope: ['config'],\r\n      description: '系统配置文件差异备份',\r\n      filePath: '/backups/config_diff_20240121.tar.gz',\r\n      createdAt: '2024-01-21 03:00:00',\r\n      completedAt: null\r\n    },\r\n    {\r\n      id: 4,\r\n      name: '应急备份_20240121',\r\n      type: 'full',\r\n      status: 'running',\r\n      size: 0,\r\n      scope: ['database', 'config', 'logs'],\r\n      description: '系统维护前的应急备份',\r\n      filePath: '/backups/emergency_20240121.tar.gz',\r\n      createdAt: '2024-01-21 10:30:00',\r\n      completedAt: null\r\n    }\r\n  ];\r\n};\r\n\r\n// 获取备份列表\r\nconst fetchBackups = async () => {\r\n  try {\r\n    loading.value = true;\r\n    backups.value = generateMockBackups();\r\n    updateStats();\r\n    message.warning('数据加载失败，显示模拟数据');\r\n  } finally {\r\n    loading.value = false;\r\n  }\r\n};\r\n\r\n// 分类切换\r\nconst handleCategoryChange = (key) => {\r\n  activeCategory.value = key;\r\n  selectedRowKeys.value = [];\r\n};\r\n\r\n// 搜索和筛选\r\nconst handleSearch = () => { selectedRowKeys.value = []; };\r\nconst handleStatusFilter = () => { selectedRowKeys.value = []; };\r\n\r\n// 刷新数据\r\nconst refreshData = () => {\r\n  fetchBackups();\r\n  message.success('数据刷新成功');\r\n};\r\n\r\n// 显示创建备份弹窗\r\nconst showCreateBackupModal = () => {\r\n  const now = new Date();\r\n  const timestamp = now.toISOString().replace(/[:.]/g, '-').slice(0, 19);\r\n  backupFormData.value = {\r\n    name: `系统备份_${timestamp}`,\r\n    type: 'full',\r\n    scope: ['database', 'config'],\r\n    description: '',\r\n    compression: true\r\n  };\r\n  createBackupModalVisible.value = true;\r\n};\r\n\r\n// 创建备份\r\nconst handleCreateBackup = async () => {\r\n  try {\r\n    await backupFormRef.value.validate();\r\n    loading.value = true;\r\n    \r\n    const newBackup = {\r\n      id: Date.now(),\r\n      ...backupFormData.value,\r\n      status: 'running',\r\n      size: 0,\r\n      filePath: `/backups/${backupFormData.value.name.toLowerCase().replace(/\\s+/g, '_')}.tar.gz`,\r\n      createdAt: new Date().toLocaleString('zh-CN'),\r\n      completedAt: null\r\n    };\r\n    \r\n    backups.value.unshift(newBackup);\r\n    updateStats();\r\n    createBackupModalVisible.value = false;\r\n    message.success('备份任务已启动');\r\n    \r\n    // 模拟备份完成\r\n    setTimeout(() => {\r\n      const backup = backups.value.find(b => b.id === newBackup.id);\r\n      if (backup) {\r\n        backup.status = 'success';\r\n        backup.size = Math.floor(Math.random() * 1073741824) + 52428800; // 50MB - 1GB\r\n        backup.completedAt = new Date().toLocaleString('zh-CN');\r\n        updateStats();\r\n        message.success('备份完成');\r\n      }\r\n    }, 3000);\r\n  } catch (error) {\r\n    message.error('创建备份失败，请重试');\r\n  } finally {\r\n    loading.value = false;\r\n  }\r\n};\r\n\r\n// 取消创建备份\r\nconst handleCreateBackupCancel = () => {\r\n  createBackupModalVisible.value = false;\r\n  backupFormRef.value?.resetFields();\r\n};\r\n\r\n// 查看备份详情\r\nconst viewBackupDetail = (record) => {\r\n  selectedBackup.value = record;\r\n  detailModalVisible.value = true;\r\n};\r\n\r\n// 下载单个备份\r\nconst downloadSingleBackup = (record) => {\r\n  message.success(`开始下载备份：${record.name}`);\r\n};\r\n\r\n// 批量下载\r\nconst batchDownload = () => {\r\n  message.success(`开始批量下载 ${selectedRowKeys.value.length} 个备份`);\r\n  selectedRowKeys.value = [];\r\n};\r\n\r\n// 下载备份\r\nconst downloadBackup = () => {\r\n  message.success('开始下载最新备份');\r\n};\r\n\r\n// 恢复备份\r\nconst restoreBackup = (record) => {\r\n  message.warning(`恢复备份功能需要谨慎操作：${record.name}`);\r\n};\r\n\r\n// 删除备份\r\nconst deleteBackup = async (record) => {\r\n  try {\r\n    loading.value = true;\r\n    const index = backups.value.findIndex(backup => backup.id === record.id);\r\n    if (index !== -1) {\r\n      backups.value.splice(index, 1);\r\n    }\r\n    updateStats();\r\n    message.success('备份删除成功');\r\n  } catch (error) {\r\n    message.error('删除失败，请重试');\r\n  } finally {\r\n    loading.value = false;\r\n  }\r\n};\r\n\r\n// 批量删除\r\nconst batchDelete = () => {\r\n  backups.value = backups.value.filter(backup => !selectedRowKeys.value.includes(backup.id));\r\n  updateStats();\r\n  selectedRowKeys.value = [];\r\n  message.success('批量删除成功');\r\n};\r\n\r\n// 组件挂载\r\nonMounted(() => {\r\n  fetchBackups();\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n@import '@/assets/admin-common.css';\r\n\r\n/* 数据备份页面特有的样式 */\r\n/* 所有通用样式已在 admin-common.css 中定义 */\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}